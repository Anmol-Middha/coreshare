{
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/bin\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/bin/www.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/bin",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/bin/www.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/bin/www.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/bin/www.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/bin",
        "sourceFileName": "www.js"
      }
    },
    "ast": null,
    "code": "const app = require('./../server/server.js');\n\napp.listen(process.env.PORT || '8080', err => {\n  if (err) throw err;\n  console.log(\"running on port 8080\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy5qcyJdLCJuYW1lcyI6WyJhcHAiLCJyZXF1aXJlIiwibGlzdGVuIiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJlcnIiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQyx1QkFBRCxDQUFuQjs7QUFFQUQsR0FBRyxDQUFDRSxNQUFKLENBQVdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLE1BQS9CLEVBQXdDQyxHQUFELElBQU87QUFDMUMsTUFBR0EsR0FBSCxFQUFRLE1BQU1BLEdBQU47QUFDUkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksc0JBQVo7QUFDSCxDQUhEIiwic291cmNlUm9vdCI6Ii9ob21lL2FubW9sbWlkZGhhL1Byb2plY3RzL2NvcmVzaGFyZS9iaW4iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBhcHAgPSByZXF1aXJlKCcuLy4uL3NlcnZlci9zZXJ2ZXIuanMnKVxuXG5hcHAubGlzdGVuKHByb2Nlc3MuZW52LlBPUlQgfHwgJzgwODAnLCAoZXJyKT0+e1xuICAgIGlmKGVycikgdGhyb3cgZXJyO1xuICAgIGNvbnNvbGUubG9nKFwicnVubmluZyBvbiBwb3J0IDgwODBcIik7XG59KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "www.js"
      ],
      "names": [
        "app",
        "require",
        "listen",
        "process",
        "env",
        "PORT",
        "err",
        "console",
        "log"
      ],
      "mappings": "AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AAEAD,GAAG,CAACE,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,MAA/B,EAAwCC,GAAD,IAAO;AAC1C,MAAGA,GAAH,EAAQ,MAAMA,GAAN;AACRC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH,CAHD",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/bin",
      "sourcesContent": [
        "const app = require('./../server/server.js')\n\napp.listen(process.env.PORT || '8080', (err)=>{\n    if(err) throw err;\n    console.log(\"running on port 8080\");\n});"
      ]
    },
    "sourceType": "module",
    "mtime": 1555575801501
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst bodyParser = require('body-parser');\n\nconst path = require('path');\n\nconst mongoose = require('mongoose');\n\nconst morgan = require('morgan');\n\nconst fs = require('fs');\n\nconst gridfs = require('gridfs-stream');\n\nmongoose.connect(process.env.MONGO_URL, {\n  useNewUrlParser: true\n});\nmongoose.Promise = global.Promise;\nconst app = express();\ngridfs.mongo = mongoose.mongo;\nlet conn = mongoose.connection;\nconn.on('error', console.error.bind(console, 'connection error:'));\napp.set('view engine', 'ejs');\napp.set('views', path.join(__dirname, '../client'));\napp.use(express.static(path.join(__dirname, '../client')));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(morgan('dev'));\n\nconst gdriveRoute = require('./api/routes/gdrive.js');\n\nconst mboxRoute = require('./api/routes/mbox.js');\n\nconst userRoute = require('./api/routes/user.js');\n\nconst checkAuth = require('./api/middleware/check-auth.js');\n\nconst notificationRoute = require('./api/routes/notifications.js');\n\napp.get('/*', function (req, res) {\n  res.render('index');\n});\napp.use('/gdrive', checkAuth, gdriveRoute);\napp.use('/mbox', mboxRoute);\napp.use('/user', userRoute);\napp.use('/notifications', checkAuth, notificationRoute);\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImJvZHlQYXJzZXIiLCJwYXRoIiwibW9uZ29vc2UiLCJtb3JnYW4iLCJmcyIsImdyaWRmcyIsImNvbm5lY3QiLCJwcm9jZXNzIiwiZW52IiwiTU9OR09fVVJMIiwidXNlTmV3VXJsUGFyc2VyIiwiUHJvbWlzZSIsImdsb2JhbCIsImFwcCIsIm1vbmdvIiwiY29ubiIsImNvbm5lY3Rpb24iLCJvbiIsImNvbnNvbGUiLCJlcnJvciIsImJpbmQiLCJzZXQiLCJqb2luIiwiX19kaXJuYW1lIiwidXNlIiwic3RhdGljIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImdkcml2ZVJvdXRlIiwibWJveFJvdXRlIiwidXNlclJvdXRlIiwiY2hlY2tBdXRoIiwibm90aWZpY2F0aW9uUm91dGUiLCJnZXQiLCJyZXEiLCJyZXMiLCJyZW5kZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLGFBQUQsQ0FBMUI7O0FBQ0EsTUFBTUUsSUFBSSxHQUFHRixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxNQUFNRyxRQUFRLEdBQUdILE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBLE1BQU1JLE1BQU0sR0FBR0osT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsTUFBTUssRUFBRSxHQUFHTCxPQUFPLENBQUMsSUFBRCxDQUFsQjs7QUFDQSxNQUFNTSxNQUFNLEdBQUdOLE9BQU8sQ0FBQyxlQUFELENBQXRCOztBQUVBRyxRQUFRLENBQUNJLE9BQVQsQ0FBaUJDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxTQUE3QixFQUF3QztBQUFDQyxFQUFBQSxlQUFlLEVBQUU7QUFBbEIsQ0FBeEM7QUFDQVIsUUFBUSxDQUFDUyxPQUFULEdBQW1CQyxNQUFNLENBQUNELE9BQTFCO0FBQ0EsTUFBTUUsR0FBRyxHQUFHZixPQUFPLEVBQW5CO0FBQ0FPLE1BQU0sQ0FBQ1MsS0FBUCxHQUFlWixRQUFRLENBQUNZLEtBQXhCO0FBQ0EsSUFBSUMsSUFBSSxHQUFHYixRQUFRLENBQUNjLFVBQXBCO0FBQ0FELElBQUksQ0FBQ0UsRUFBTCxDQUFRLE9BQVIsRUFBaUJDLE9BQU8sQ0FBQ0MsS0FBUixDQUFjQyxJQUFkLENBQW1CRixPQUFuQixFQUE0QixtQkFBNUIsQ0FBakI7QUFHQUwsR0FBRyxDQUFDUSxHQUFKLENBQVEsYUFBUixFQUF1QixLQUF2QjtBQUNBUixHQUFHLENBQUNRLEdBQUosQ0FBUSxPQUFSLEVBQWlCcEIsSUFBSSxDQUFDcUIsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLFdBQXJCLENBQWpCO0FBQ0FWLEdBQUcsQ0FBQ1csR0FBSixDQUFRMUIsT0FBTyxDQUFDMkIsTUFBUixDQUFleEIsSUFBSSxDQUFDcUIsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLFdBQXJCLENBQWYsQ0FBUjtBQUNBVixHQUFHLENBQUNXLEdBQUosQ0FBUXhCLFVBQVUsQ0FBQzBCLElBQVgsRUFBUjtBQUNBYixHQUFHLENBQUNXLEdBQUosQ0FBUXhCLFVBQVUsQ0FBQzJCLFVBQVgsQ0FBc0I7QUFBQ0MsRUFBQUEsUUFBUSxFQUFFO0FBQVgsQ0FBdEIsQ0FBUjtBQUNBZixHQUFHLENBQUNXLEdBQUosQ0FBUXJCLE1BQU0sQ0FBQyxLQUFELENBQWQ7O0FBSUEsTUFBTTBCLFdBQVcsR0FBRzlCLE9BQU8sQ0FBQyx3QkFBRCxDQUEzQjs7QUFDQSxNQUFNK0IsU0FBUyxHQUFHL0IsT0FBTyxDQUFDLHNCQUFELENBQXpCOztBQUNBLE1BQU1nQyxTQUFTLEdBQUdoQyxPQUFPLENBQUMsc0JBQUQsQ0FBekI7O0FBQ0EsTUFBTWlDLFNBQVMsR0FBR2pDLE9BQU8sQ0FBQyxnQ0FBRCxDQUF6Qjs7QUFDQSxNQUFNa0MsaUJBQWlCLEdBQUdsQyxPQUFPLENBQUMsK0JBQUQsQ0FBakM7O0FBRUFjLEdBQUcsQ0FBQ3FCLEdBQUosQ0FBUSxJQUFSLEVBQWMsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQWtCO0FBQzVCQSxFQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxPQUFYO0FBQ0gsQ0FGRDtBQUlBeEIsR0FBRyxDQUFDVyxHQUFKLENBQVEsU0FBUixFQUFtQlEsU0FBbkIsRUFBOEJILFdBQTlCO0FBQ0FoQixHQUFHLENBQUNXLEdBQUosQ0FBUSxPQUFSLEVBQWlCTSxTQUFqQjtBQUNBakIsR0FBRyxDQUFDVyxHQUFKLENBQVEsT0FBUixFQUFpQk8sU0FBakI7QUFDQWxCLEdBQUcsQ0FBQ1csR0FBSixDQUFRLGdCQUFSLEVBQTBCUSxTQUExQixFQUFxQ0MsaUJBQXJDO0FBRUFLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjFCLEdBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FubW9sbWlkZGhhL1Byb2plY3RzL2NvcmVzaGFyZS9zZXJ2ZXIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xuY29uc3QgbW9yZ2FuID0gcmVxdWlyZSgnbW9yZ2FuJyk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCBncmlkZnMgPSByZXF1aXJlKCdncmlkZnMtc3RyZWFtJyk7XG5cbm1vbmdvb3NlLmNvbm5lY3QocHJvY2Vzcy5lbnYuTU9OR09fVVJMLCB7dXNlTmV3VXJsUGFyc2VyOiB0cnVlfSk7XG5tb25nb29zZS5Qcm9taXNlID0gZ2xvYmFsLlByb21pc2U7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5ncmlkZnMubW9uZ28gPSBtb25nb29zZS5tb25nbztcbmxldCBjb25uID0gbW9uZ29vc2UuY29ubmVjdGlvbjtcbmNvbm4ub24oJ2Vycm9yJywgY29uc29sZS5lcnJvci5iaW5kKGNvbnNvbGUsICdjb25uZWN0aW9uIGVycm9yOicpKTtcbiBcblxuYXBwLnNldCgndmlldyBlbmdpbmUnLCAnZWpzJyk7XG5hcHAuc2V0KCd2aWV3cycsIHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi9jbGllbnQnKSk7XG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi9jbGllbnQnKSkpO1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7ZXh0ZW5kZWQ6IGZhbHNlfSkpO1xuYXBwLnVzZShtb3JnYW4oJ2RldicpKTtcblxuXG5cbmNvbnN0IGdkcml2ZVJvdXRlID0gcmVxdWlyZSgnLi9hcGkvcm91dGVzL2dkcml2ZS5qcycpO1xuY29uc3QgbWJveFJvdXRlID0gcmVxdWlyZSgnLi9hcGkvcm91dGVzL21ib3guanMnKTtcbmNvbnN0IHVzZXJSb3V0ZSA9IHJlcXVpcmUoJy4vYXBpL3JvdXRlcy91c2VyLmpzJyk7XG5jb25zdCBjaGVja0F1dGggPSByZXF1aXJlKCcuL2FwaS9taWRkbGV3YXJlL2NoZWNrLWF1dGguanMnKTtcbmNvbnN0IG5vdGlmaWNhdGlvblJvdXRlID0gcmVxdWlyZSgnLi9hcGkvcm91dGVzL25vdGlmaWNhdGlvbnMuanMnKTtcblxuYXBwLmdldCgnLyonLCBmdW5jdGlvbihyZXEsIHJlcyl7XG4gICAgcmVzLnJlbmRlcignaW5kZXgnKTtcbn0pXG5cbmFwcC51c2UoJy9nZHJpdmUnLCBjaGVja0F1dGgsIGdkcml2ZVJvdXRlKTtcbmFwcC51c2UoJy9tYm94JywgbWJveFJvdXRlKTtcbmFwcC51c2UoJy91c2VyJywgdXNlclJvdXRlKTtcbmFwcC51c2UoJy9ub3RpZmljYXRpb25zJywgY2hlY2tBdXRoLCBub3RpZmljYXRpb25Sb3V0ZSk7XG5cbm1vZHVsZS5leHBvcnRzID0gYXBwOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "bodyParser",
        "path",
        "mongoose",
        "morgan",
        "fs",
        "gridfs",
        "connect",
        "process",
        "env",
        "MONGO_URL",
        "useNewUrlParser",
        "Promise",
        "global",
        "app",
        "mongo",
        "conn",
        "connection",
        "on",
        "console",
        "error",
        "bind",
        "set",
        "join",
        "__dirname",
        "use",
        "static",
        "json",
        "urlencoded",
        "extended",
        "gdriveRoute",
        "mboxRoute",
        "userRoute",
        "checkAuth",
        "notificationRoute",
        "get",
        "req",
        "res",
        "render",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMI,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMK,EAAE,GAAGL,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMM,MAAM,GAAGN,OAAO,CAAC,eAAD,CAAtB;;AAEAG,QAAQ,CAACI,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAA7B,EAAwC;AAACC,EAAAA,eAAe,EAAE;AAAlB,CAAxC;AACAR,QAAQ,CAACS,OAAT,GAAmBC,MAAM,CAACD,OAA1B;AACA,MAAME,GAAG,GAAGf,OAAO,EAAnB;AACAO,MAAM,CAACS,KAAP,GAAeZ,QAAQ,CAACY,KAAxB;AACA,IAAIC,IAAI,GAAGb,QAAQ,CAACc,UAApB;AACAD,IAAI,CAACE,EAAL,CAAQ,OAAR,EAAiBC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,mBAA5B,CAAjB;AAGAL,GAAG,CAACQ,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAR,GAAG,CAACQ,GAAJ,CAAQ,OAAR,EAAiBpB,IAAI,CAACqB,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAjB;AACAV,GAAG,CAACW,GAAJ,CAAQ1B,OAAO,CAAC2B,MAAR,CAAexB,IAAI,CAACqB,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAR;AACAV,GAAG,CAACW,GAAJ,CAAQxB,UAAU,CAAC0B,IAAX,EAAR;AACAb,GAAG,CAACW,GAAJ,CAAQxB,UAAU,CAAC2B,UAAX,CAAsB;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAAtB,CAAR;AACAf,GAAG,CAACW,GAAJ,CAAQrB,MAAM,CAAC,KAAD,CAAd;;AAIA,MAAM0B,WAAW,GAAG9B,OAAO,CAAC,wBAAD,CAA3B;;AACA,MAAM+B,SAAS,GAAG/B,OAAO,CAAC,sBAAD,CAAzB;;AACA,MAAMgC,SAAS,GAAGhC,OAAO,CAAC,sBAAD,CAAzB;;AACA,MAAMiC,SAAS,GAAGjC,OAAO,CAAC,gCAAD,CAAzB;;AACA,MAAMkC,iBAAiB,GAAGlC,OAAO,CAAC,+BAAD,CAAjC;;AAEAc,GAAG,CAACqB,GAAJ,CAAQ,IAAR,EAAc,UAASC,GAAT,EAAcC,GAAd,EAAkB;AAC5BA,EAAAA,GAAG,CAACC,MAAJ,CAAW,OAAX;AACH,CAFD;AAIAxB,GAAG,CAACW,GAAJ,CAAQ,SAAR,EAAmBQ,SAAnB,EAA8BH,WAA9B;AACAhB,GAAG,CAACW,GAAJ,CAAQ,OAAR,EAAiBM,SAAjB;AACAjB,GAAG,CAACW,GAAJ,CAAQ,OAAR,EAAiBO,SAAjB;AACAlB,GAAG,CAACW,GAAJ,CAAQ,gBAAR,EAA0BQ,SAA1B,EAAqCC,iBAArC;AAEAK,MAAM,CAACC,OAAP,GAAiB1B,GAAjB",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server",
      "sourcesContent": [
        "const express = require('express');\nconst bodyParser = require('body-parser');\nconst path = require('path');\nconst mongoose = require('mongoose');\nconst morgan = require('morgan');\nconst fs = require('fs');\nconst gridfs = require('gridfs-stream');\n\nmongoose.connect(process.env.MONGO_URL, {useNewUrlParser: true});\nmongoose.Promise = global.Promise;\nconst app = express();\ngridfs.mongo = mongoose.mongo;\nlet conn = mongoose.connection;\nconn.on('error', console.error.bind(console, 'connection error:'));\n \n\napp.set('view engine', 'ejs');\napp.set('views', path.join(__dirname, '../client'));\napp.use(express.static(path.join(__dirname, '../client')));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(morgan('dev'));\n\n\n\nconst gdriveRoute = require('./api/routes/gdrive.js');\nconst mboxRoute = require('./api/routes/mbox.js');\nconst userRoute = require('./api/routes/user.js');\nconst checkAuth = require('./api/middleware/check-auth.js');\nconst notificationRoute = require('./api/routes/notifications.js');\n\napp.get('/*', function(req, res){\n    res.render('index');\n})\n\napp.use('/gdrive', checkAuth, gdriveRoute);\napp.use('/mbox', mboxRoute);\napp.use('/user', userRoute);\napp.use('/notifications', checkAuth, notificationRoute);\n\nmodule.exports = app;"
      ]
    },
    "sourceType": "module",
    "mtime": 1554526571981
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes/gdrive.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/gdrive.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/routes/gdrive.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/gdrive.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
        "sourceFileName": "gdrive.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst multer = require('multer');\n\nconst mongoose = require('mongoose');\n\nconst gridfs = require('gridfs-stream');\n\nconst {\n  google\n} = require('googleapis');\n\nconst upload = multer({\n  dest: './server/uploads/gdrive/'\n});\n\nconst User = require('../../../models/user.js');\n\nconst Capsule = require('../../../models/capsule');\n\nconst Authorise = require('../middleware/gauthorise.js');\n\nconst Encrypt = require('../middleware/encrypt.js');\n\nrouter.post('/', Authorise, (req, res) => {\n  const auth = req.auth;\n  const drive = google.drive({\n    version: 'v3',\n    auth\n  });\n  drive.files.list({\n    q: \"trashed=false\",\n    fields: 'nextPageToken, files(id, name)',\n    trashed: false\n  }, (err, rslt) => {\n    if (err) {\n      res.status(500).json(err);\n    } else {\n      const files = rslt.data.files;\n      res.status(200).json(files);\n    }\n  });\n});\nrouter.post('/upload', Authorise, upload.single('filename'), Encrypt, (req, res) => {\n  const auth = req.auth;\n  const drive = google.drive({\n    version: 'v3',\n    auth\n  });\n  let fileMetadata = {\n    name: req.file.originalname\n  };\n  let media = {\n    body: fs.createReadStream(path.join(__dirname, '../../../', req.filepath))\n  }; //uploading the file to google drive\n\n  drive.files.create({\n    resource: fileMetadata,\n    media,\n    fields: 'id, name'\n  }, function (err, file) {\n    if (err) {\n      res.status(500).json(err);\n      console.log(err);\n    } else {\n      const capsule = new Capsule({\n        _id: file.data.id,\n        name: file.data.name,\n        capsule: req.capsule\n      }).save().then(rslt => {\n        res.status(200).json({\n          filename: rslt.name,\n          fileid: rslt.id\n        });\n      }).catch(err => {\n        res.status(500).json({\n          err,\n          message: err.message\n        });\n      });\n    }\n  });\n});\nrouter.post('/share/:fileId', Authorise, (req, res) => {\n  const fileid = req.params.fileId;\n  const sid = req.body.senderId;\n  const filename = req.body.filename;\n  console.log(filename);\n  User.find({\n    emailId: req.body.receiverEmail\n  }, {\n    email: 0,\n    password: 0\n  }).exec().then(user => {\n    const auth = req.auth;\n    const fileId = req.params.fileId;\n    const dest = fs.createWriteStream('./server/tempshare/gdrive/input.txt');\n    const drive = google.drive({\n      version: 'v3',\n      auth\n    });\n    drive.files.get({\n      fileId: fileId,\n      alt: 'media',\n      fields: '*'\n    }, {\n      responseType: 'stream'\n    }, function (err, rslt) {\n      rslt.data.on('end', () => {\n        gridfs.mongo = mongoose.mongo;\n        let conn = mongoose.connection;\n        let gfs = gridfs(conn.db);\n        let writestream = gfs.createWriteStream({\n          filename,\n          metadata: {\n            receiver: user[0]._id.toString(),\n            sender: sid,\n            cloudfileid: fileid\n          }\n        });\n        fs.createReadStream('/home/anmolmiddha/Projects/coreshare/server/tempshare/gdrive/input.txt').pipe(writestream);\n        writestream.on('close', function (file) {\n          res.send('file created:' + file.filename);\n        });\n      }).on('error', err => {\n        res.status(500).json(err);\n      }).pipe(dest);\n    });\n  }).catch(err => {\n    res.status(500).json(err);\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gdrive.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "fs",
        "path",
        "multer",
        "mongoose",
        "gridfs",
        "google",
        "upload",
        "dest",
        "User",
        "Capsule",
        "Authorise",
        "Encrypt",
        "post",
        "req",
        "res",
        "auth",
        "drive",
        "version",
        "files",
        "list",
        "q",
        "fields",
        "trashed",
        "err",
        "rslt",
        "status",
        "json",
        "data",
        "single",
        "fileMetadata",
        "name",
        "file",
        "originalname",
        "media",
        "body",
        "createReadStream",
        "join",
        "__dirname",
        "filepath",
        "create",
        "resource",
        "console",
        "log",
        "capsule",
        "_id",
        "id",
        "save",
        "then",
        "filename",
        "fileid",
        "catch",
        "message",
        "params",
        "fileId",
        "sid",
        "senderId",
        "find",
        "emailId",
        "receiverEmail",
        "email",
        "password",
        "exec",
        "user",
        "createWriteStream",
        "get",
        "alt",
        "responseType",
        "on",
        "mongo",
        "conn",
        "connection",
        "gfs",
        "db",
        "writestream",
        "metadata",
        "receiver",
        "toString",
        "sender",
        "cloudfileid",
        "pipe",
        "send",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\nconst fs = require('fs');\nconst path = require('path');\nconst multer = require('multer');\nconst mongoose = require('mongoose');\nconst gridfs = require('gridfs-stream');\nconst {google} = require('googleapis');\nconst upload = multer({dest: './server/uploads/gdrive/'});\n\nconst User = require('../../../models/user.js');\nconst Capsule = require('../../../models/capsule');\nconst Authorise = require('../middleware/gauthorise.js');\nconst Encrypt = require('../middleware/encrypt.js');\n\nrouter.post('/', Authorise, (req, res) => {\n    const auth = req.auth;\n    const drive = google.drive({version: 'v3', auth});\n    drive.files.list({\n        q: \"trashed=false\",\n        fields: 'nextPageToken, files(id, name)',\n        trashed: false\n    }, (err, rslt) => {\n        if(err){\n            res.status(500).json(err);\n        }\n        else{\n            const files = rslt.data.files;\n            res.status(200).json(files);\n        }\n    });\n});\n\nrouter.post('/upload', Authorise, upload.single('filename'),Encrypt, (req, res)=>{\n    const auth = req.auth;\n    const drive = google.drive({version: 'v3', auth});\n    let fileMetadata = {name: req.file.originalname};\n    let media = {\n        body: fs.createReadStream(path.join(__dirname, '../../../', req.filepath))\n    };\n    //uploading the file to google drive\n    drive.files.create({\n        resource: fileMetadata,\n        media,\n        fields: 'id, name'       \n    },function(err, file){\n        if(err){\n            res.status(500).json(err);\n            console.log(err);\n        }\n        else{\n            const capsule = new Capsule({\n                _id: file.data.id,\n                name: file.data.name,\n                capsule: req.capsule\n            })\n            .save()\n            .then(rslt => {\n                res.status(200).json({filename: rslt.name, fileid: rslt.id});\n            })\n            .catch(err => {\n                res.status(500).json({\n                    err,\n                    message: err.message\n                });  \n            });\n        }\n    });\n});\n\nrouter.post('/share/:fileId', Authorise, (req, res) =>{\n    const fileid = req.params.fileId;\n    const sid = req.body.senderId;\n    const filename = req.body.filename;\n    console.log(filename);\n    User.find({emailId: req.body.receiverEmail},{email: 0, password: 0})\n    .exec()\n    .then(user =>{\n        const auth = req.auth;\n        const fileId = req.params.fileId;\n        const dest = fs.createWriteStream('./server/tempshare/gdrive/input.txt');\n        const drive = google.drive({version: 'v3', auth});\n        drive.files.get({\n            fileId: fileId,\n            alt: 'media',\n            fields: '*'\n        }, {responseType: 'stream'}, function(err, rslt){\n            rslt.data.on('end', ()=>{\n                gridfs.mongo = mongoose.mongo;\n                let conn = mongoose.connection;\n                let gfs = gridfs(conn.db);\n                let writestream = gfs.createWriteStream({filename, metadata: {receiver: (user[0]._id).toString(), sender: sid, cloudfileid: fileid}});\n                fs.createReadStream('/home/anmolmiddha/Projects/coreshare/server/tempshare/gdrive/input.txt').pipe(writestream);\n                writestream.on('close', function(file){\n                    res.send('file created:' + file.filename);\n                });\n            })\n            .on('error', err=>{\n                res.status(500).json(err);\n            })\n            .pipe(dest);\n        });\n    })\n    .catch(err =>{\n        res.status(500).json(err);\n    }) \n});\n\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1555774099157
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/models/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/models/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/models/user.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/models/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nuserschema = new Schema({\n  _id: mongoose.Schema.Types.ObjectId,\n  username: {\n    type: String,\n    required: true\n  },\n  emailId: {\n    type: String,\n    required: true,\n    match: [/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/],\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true,\n    match: /([^\\s])/\n  },\n  gdrivetoken: {\n    type: String\n  },\n  privatekey: {\n    type: String,\n    required: true\n  },\n  publickey: {\n    type: String,\n    required: true\n  },\n  signingkey: {\n    type: String,\n    required: true\n  },\n  verificationkey: {\n    type: String,\n    required: true\n  }\n});\nmodule.exports = mongoose.model(\"users\", userschema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwidXNlcnNjaGVtYSIsIl9pZCIsIlR5cGVzIiwiT2JqZWN0SWQiLCJ1c2VybmFtZSIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsImVtYWlsSWQiLCJtYXRjaCIsInVuaXF1ZSIsInBhc3N3b3JkIiwiZ2RyaXZldG9rZW4iLCJwcml2YXRla2V5IiwicHVibGlja2V5Iiwic2lnbmluZ2tleSIsInZlcmlmaWNhdGlvbmtleSIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0UsTUFBeEI7QUFFQUMsVUFBVSxHQUFHLElBQUlELE1BQUosQ0FBVztBQUNwQkUsRUFBQUEsR0FBRyxFQUFFSixRQUFRLENBQUNFLE1BQVQsQ0FBZ0JHLEtBQWhCLENBQXNCQyxRQURQO0FBRXBCQyxFQUFBQSxRQUFRLEVBQUU7QUFBQ0MsSUFBQUEsSUFBSSxFQUFFQyxNQUFQO0FBQWVDLElBQUFBLFFBQVEsRUFBRTtBQUF6QixHQUZVO0FBR3BCQyxFQUFBQSxPQUFPLEVBQUU7QUFBQ0gsSUFBQUEsSUFBSSxFQUFFQyxNQUFQO0FBQWVDLElBQUFBLFFBQVEsRUFBRSxJQUF6QjtBQUErQkUsSUFBQUEsS0FBSyxFQUFDLENBQUMseUpBQUQsQ0FBckM7QUFBa01DLElBQUFBLE1BQU0sRUFBRTtBQUExTSxHQUhXO0FBSXBCQyxFQUFBQSxRQUFRLEVBQUU7QUFBQ04sSUFBQUEsSUFBSSxFQUFFQyxNQUFQO0FBQWVDLElBQUFBLFFBQVEsRUFBRSxJQUF6QjtBQUErQkUsSUFBQUEsS0FBSyxFQUFDO0FBQXJDLEdBSlU7QUFLcEJHLEVBQUFBLFdBQVcsRUFBRTtBQUFDUCxJQUFBQSxJQUFJLEVBQUVDO0FBQVAsR0FMTztBQU1wQk8sRUFBQUEsVUFBVSxFQUFFO0FBQUNSLElBQUFBLElBQUksRUFBRUMsTUFBUDtBQUFlQyxJQUFBQSxRQUFRLEVBQUU7QUFBekIsR0FOUTtBQU9wQk8sRUFBQUEsU0FBUyxFQUFFO0FBQUNULElBQUFBLElBQUksRUFBRUMsTUFBUDtBQUFlQyxJQUFBQSxRQUFRLEVBQUU7QUFBekIsR0FQUztBQVFwQlEsRUFBQUEsVUFBVSxFQUFFO0FBQUNWLElBQUFBLElBQUksRUFBRUMsTUFBUDtBQUFlQyxJQUFBQSxRQUFRLEVBQUU7QUFBekIsR0FSUTtBQVNwQlMsRUFBQUEsZUFBZSxFQUFFO0FBQUNYLElBQUFBLElBQUksRUFBRUMsTUFBUDtBQUFlQyxJQUFBQSxRQUFRLEVBQUU7QUFBekI7QUFURyxDQUFYLENBQWI7QUFZQVUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCckIsUUFBUSxDQUFDc0IsS0FBVCxDQUFlLE9BQWYsRUFBd0JuQixVQUF4QixDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9hbm1vbG1pZGRoYS9Qcm9qZWN0cy9jb3Jlc2hhcmUvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xuY29uc3QgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hO1xuXG51c2Vyc2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gICAgX2lkOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgdXNlcm5hbWU6IHt0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlfSxcbiAgICBlbWFpbElkOiB7dHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZSwgbWF0Y2g6Wy9eKChbXjw+KClcXFtcXF1cXFxcLiw7Olxcc0BcIl0rKFxcLltePD4oKVxcW1xcXVxcXFwuLDs6XFxzQFwiXSspKil8KFwiLitcIikpQCgoXFxbWzAtOV17MSwzfVxcLlswLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcXSl8KChbYS16QS1aXFwtMC05XStcXC4pK1thLXpBLVpdezIsfSkpJC9dLCB1bmlxdWU6IHRydWV9LFxuICAgIHBhc3N3b3JkOiB7dHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZSwgbWF0Y2g6LyhbXlxcc10pL30sXG4gICAgZ2RyaXZldG9rZW46IHt0eXBlOiBTdHJpbmd9LFxuICAgIHByaXZhdGVrZXk6IHt0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlfSxcbiAgICBwdWJsaWNrZXk6IHt0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlfSxcbiAgICBzaWduaW5na2V5OiB7dHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZX0sXG4gICAgdmVyaWZpY2F0aW9ua2V5OiB7dHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZX0sXG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBtb25nb29zZS5tb2RlbChcInVzZXJzXCIsIHVzZXJzY2hlbWEpO1xuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "userschema",
        "_id",
        "Types",
        "ObjectId",
        "username",
        "type",
        "String",
        "required",
        "emailId",
        "match",
        "unique",
        "password",
        "gdrivetoken",
        "privatekey",
        "publickey",
        "signingkey",
        "verificationkey",
        "module",
        "exports",
        "model"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEAC,UAAU,GAAG,IAAID,MAAJ,CAAW;AACpBE,EAAAA,GAAG,EAAEJ,QAAQ,CAACE,MAAT,CAAgBG,KAAhB,CAAsBC,QADP;AAEpBC,EAAAA,QAAQ,EAAE;AAACC,IAAAA,IAAI,EAAEC,MAAP;AAAeC,IAAAA,QAAQ,EAAE;AAAzB,GAFU;AAGpBC,EAAAA,OAAO,EAAE;AAACH,IAAAA,IAAI,EAAEC,MAAP;AAAeC,IAAAA,QAAQ,EAAE,IAAzB;AAA+BE,IAAAA,KAAK,EAAC,CAAC,yJAAD,CAArC;AAAkMC,IAAAA,MAAM,EAAE;AAA1M,GAHW;AAIpBC,EAAAA,QAAQ,EAAE;AAACN,IAAAA,IAAI,EAAEC,MAAP;AAAeC,IAAAA,QAAQ,EAAE,IAAzB;AAA+BE,IAAAA,KAAK,EAAC;AAArC,GAJU;AAKpBG,EAAAA,WAAW,EAAE;AAACP,IAAAA,IAAI,EAAEC;AAAP,GALO;AAMpBO,EAAAA,UAAU,EAAE;AAACR,IAAAA,IAAI,EAAEC,MAAP;AAAeC,IAAAA,QAAQ,EAAE;AAAzB,GANQ;AAOpBO,EAAAA,SAAS,EAAE;AAACT,IAAAA,IAAI,EAAEC,MAAP;AAAeC,IAAAA,QAAQ,EAAE;AAAzB,GAPS;AAQpBQ,EAAAA,UAAU,EAAE;AAACV,IAAAA,IAAI,EAAEC,MAAP;AAAeC,IAAAA,QAAQ,EAAE;AAAzB,GARQ;AASpBS,EAAAA,eAAe,EAAE;AAACX,IAAAA,IAAI,EAAEC,MAAP;AAAeC,IAAAA,QAAQ,EAAE;AAAzB;AATG,CAAX,CAAb;AAYAU,MAAM,CAACC,OAAP,GAAiBrB,QAAQ,CAACsB,KAAT,CAAe,OAAf,EAAwBnB,UAAxB,CAAjB",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/models",
      "sourcesContent": [
        "const mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\n\nuserschema = new Schema({\n    _id: mongoose.Schema.Types.ObjectId,\n    username: {type: String, required: true},\n    emailId: {type: String, required: true, match:[/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/], unique: true},\n    password: {type: String, required: true, match:/([^\\s])/},\n    gdrivetoken: {type: String},\n    privatekey: {type: String, required: true},\n    publickey: {type: String, required: true},\n    signingkey: {type: String, required: true},\n    verificationkey: {type: String, required: true},\n});\n\nmodule.exports = mongoose.model(\"users\", userschema);\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1555522535802
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware/gauthorise.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/gauthorise.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/gauthorise.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/gauthorise.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
        "sourceFileName": "gauthorise.js"
      }
    },
    "ast": null,
    "code": "const fs = require('fs');\n\nconst readline = require('readline');\n\nconst mongoose = require('mongoose');\n\nconst {\n  google\n} = require('googleapis');\n\nconst Gdrive = require('../../../models/gdrive.js');\n\nconst SCOPES = ['https://www.googleapis.com/auth/drive']; // The file token.json stores the user's access and refresh tokens, and is\n// created automatically when the authorization flow completes for the first\n// time.\n\nconst TOKEN_PATH = './client/token.json';\nconst CREDENTIALS = './server/credentials.json';\n\nmodule.exports = (req, res, next) => {\n  fs.readFile(CREDENTIALS, (err, content) => {\n    if (err) return res.json('Error loading client secret file:' + err); // Authorize a client with credentials, then call the Google Drive API.\n\n    const credentials = JSON.parse(content);\n    const {\n      client_secret,\n      client_id,\n      redirect_uris\n    } = credentials.installed;\n    const oAuth2Client = new google.auth.OAuth2(client_id, client_secret, redirect_uris[0]); // Check if we have previously stored a token.\n\n    fs.readFile(TOKEN_PATH, (err, token) => {\n      if (err) return getAccessToken(oAuth2Client);\n      oAuth2Client.setCredentials(JSON.parse(token));\n      req.auth = oAuth2Client;\n      next();\n    });\n  });\n};\n\nfunction getAccessToken(oAuth2Client) {\n  const authUrl = oAuth2Client.generateAuthUrl({\n    access_type: 'offline',\n    scope: SCOPES\n  });\n  console.log('Authorize this app by visiting this url:', authUrl);\n  const rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n  });\n  rl.question('Enter the code from that page here: ', code => {\n    rl.close();\n    oAuth2Client.getToken(code, (err, token) => {\n      if (err) return console.error('Error retrieving access token', err);\n      oAuth2Client.setCredentials(token); // Store the token to disk for later program executions\n\n      fs.writeFile(TOKEN_PATH, JSON.stringify(token), err => {\n        if (err) console.error(err);\n        console.log('Token stored to', TOKEN_PATH);\n      });\n      req.auth = oAuth2Client;\n      next();\n    });\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhdXRob3Jpc2UuanMiXSwibmFtZXMiOlsiZnMiLCJyZXF1aXJlIiwicmVhZGxpbmUiLCJtb25nb29zZSIsImdvb2dsZSIsIkdkcml2ZSIsIlNDT1BFUyIsIlRPS0VOX1BBVEgiLCJDUkVERU5USUFMUyIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXEiLCJyZXMiLCJuZXh0IiwicmVhZEZpbGUiLCJlcnIiLCJjb250ZW50IiwianNvbiIsImNyZWRlbnRpYWxzIiwiSlNPTiIsInBhcnNlIiwiY2xpZW50X3NlY3JldCIsImNsaWVudF9pZCIsInJlZGlyZWN0X3VyaXMiLCJpbnN0YWxsZWQiLCJvQXV0aDJDbGllbnQiLCJhdXRoIiwiT0F1dGgyIiwidG9rZW4iLCJnZXRBY2Nlc3NUb2tlbiIsInNldENyZWRlbnRpYWxzIiwiYXV0aFVybCIsImdlbmVyYXRlQXV0aFVybCIsImFjY2Vzc190eXBlIiwic2NvcGUiLCJjb25zb2xlIiwibG9nIiwicmwiLCJjcmVhdGVJbnRlcmZhY2UiLCJpbnB1dCIsInByb2Nlc3MiLCJzdGRpbiIsIm91dHB1dCIsInN0ZG91dCIsInF1ZXN0aW9uIiwiY29kZSIsImNsb3NlIiwiZ2V0VG9rZW4iLCJlcnJvciIsIndyaXRlRmlsZSIsInN0cmluZ2lmeSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsRUFBRSxHQUFHQyxPQUFPLENBQUMsSUFBRCxDQUFsQjs7QUFDQSxNQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBLE1BQU1FLFFBQVEsR0FBR0YsT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBQ0EsTUFBTTtBQUFDRyxFQUFBQTtBQUFELElBQVdILE9BQU8sQ0FBQyxZQUFELENBQXhCOztBQUVBLE1BQU1JLE1BQU0sR0FBR0osT0FBTyxDQUFDLDJCQUFELENBQXRCOztBQUVBLE1BQU1LLE1BQU0sR0FBRyxDQUFDLHVDQUFELENBQWYsQyxDQUNBO0FBQ0E7QUFDQTs7QUFDQSxNQUFNQyxVQUFVLEdBQUcscUJBQW5C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ZXIvYXBpL21pZGRsZXdhcmUiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCByZWFkbGluZSA9IHJlcXVpcmUoJ3JlYWRsaW5lJyk7XG5jb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG5jb25zdCB7Z29vZ2xlfSA9IHJlcXVpcmUoJ2dvb2dsZWFwaXMnKTtcblxuY29uc3QgR2RyaXZlID0gcmVxdWlyZSgnLi4vLi4vLi4vbW9kZWxzL2dkcml2ZS5qcycpO1xuXG5jb25zdCBTQ09QRVMgPSBbJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvZHJpdmUnXTtcbi8vIFRoZSBmaWxlIHRva2VuLmpzb24gc3RvcmVzIHRoZSB1c2VyJ3MgYWNjZXNzIGFuZCByZWZyZXNoIHRva2VucywgYW5kIGlzXG4vLyBjcmVhdGVkIGF1dG9tYXRpY2FsbHkgd2hlbiB0aGUgYXV0aG9yaXphdGlvbiBmbG93IGNvbXBsZXRlcyBmb3IgdGhlIGZpcnN0XG4vLyB0aW1lLlxuY29uc3QgVE9LRU5fUEFUSCA9ICcuL2NsaWVudC90b2tlbi5qc29uJztcbmNvbnN0IENSRURFTlRJQUxTID0gJy4vc2VydmVyL2NyZWRlbnRpYWxzLmpzb24nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGZzLnJlYWRGaWxlKENSRURFTlRJQUxTLCAoZXJyLCBjb250ZW50KSA9PiB7XG4gICAgICAgIGlmIChlcnIpIHJldHVybiByZXMuanNvbignRXJyb3IgbG9hZGluZyBjbGllbnQgc2VjcmV0IGZpbGU6JyArIGVycik7XG4gICAgICAgIC8vIEF1dGhvcml6ZSBhIGNsaWVudCB3aXRoIGNyZWRlbnRpYWxzLCB0aGVuIGNhbGwgdGhlIEdvb2dsZSBEcml2ZSBBUEkuXG4gICAgICAgICAgICBjb25zdCBjcmVkZW50aWFscyA9IEpTT04ucGFyc2UoY29udGVudCk7XG4gICAgICAgICAgICBjb25zdCB7Y2xpZW50X3NlY3JldCwgY2xpZW50X2lkLCByZWRpcmVjdF91cmlzfSA9IGNyZWRlbnRpYWxzLmluc3RhbGxlZDtcbiAgICAgICAgICAgIGNvbnN0IG9BdXRoMkNsaWVudCA9IG5ldyBnb29nbGUuYXV0aC5PQXV0aDIoY2xpZW50X2lkLCBjbGllbnRfc2VjcmV0LCByZWRpcmVjdF91cmlzWzBdKTtcbiAgICAgIFxuICAgICAgICAgICAgLy8gQ2hlY2sgaWYgd2UgaGF2ZSBwcmV2aW91c2x5IHN0b3JlZCBhIHRva2VuLlxuICAgICAgICAgICAgZnMucmVhZEZpbGUoVE9LRU5fUEFUSCwgKGVyciwgdG9rZW4pID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSByZXR1cm4gZ2V0QWNjZXNzVG9rZW4ob0F1dGgyQ2xpZW50KTtcbiAgICAgICAgICAgICAgICBvQXV0aDJDbGllbnQuc2V0Q3JlZGVudGlhbHMoSlNPTi5wYXJzZSh0b2tlbikpO1xuICAgICAgICAgICAgICAgIHJlcS5hdXRoID0gb0F1dGgyQ2xpZW50O1xuICAgICAgICAgICAgICAgIG5leHQoKTtcbiAgICAgICAgICAgIH0pO1xuICAgIH0pO1xufTtcblxuZnVuY3Rpb24gZ2V0QWNjZXNzVG9rZW4ob0F1dGgyQ2xpZW50KSB7XG4gICAgY29uc3QgYXV0aFVybCA9IG9BdXRoMkNsaWVudC5nZW5lcmF0ZUF1dGhVcmwoe1xuICAgICAgYWNjZXNzX3R5cGU6ICdvZmZsaW5lJyxcbiAgICAgIHNjb3BlOiBTQ09QRVMsXG4gICAgfSk7XG4gICAgY29uc29sZS5sb2coJ0F1dGhvcml6ZSB0aGlzIGFwcCBieSB2aXNpdGluZyB0aGlzIHVybDonLCBhdXRoVXJsKTtcbiAgICBjb25zdCBybCA9IHJlYWRsaW5lLmNyZWF0ZUludGVyZmFjZSh7XG4gICAgICBpbnB1dDogcHJvY2Vzcy5zdGRpbixcbiAgICAgIG91dHB1dDogcHJvY2Vzcy5zdGRvdXQsXG4gICAgfSk7XG4gICAgcmwucXVlc3Rpb24oJ0VudGVyIHRoZSBjb2RlIGZyb20gdGhhdCBwYWdlIGhlcmU6ICcsIChjb2RlKSA9PiB7XG4gICAgICBybC5jbG9zZSgpO1xuICAgICAgb0F1dGgyQ2xpZW50LmdldFRva2VuKGNvZGUsIChlcnIsIHRva2VuKSA9PiB7XG4gICAgICAgIGlmIChlcnIpIHJldHVybiBjb25zb2xlLmVycm9yKCdFcnJvciByZXRyaWV2aW5nIGFjY2VzcyB0b2tlbicsIGVycik7XG4gICAgICAgIG9BdXRoMkNsaWVudC5zZXRDcmVkZW50aWFscyh0b2tlbik7XG4gICAgICAgIC8vIFN0b3JlIHRoZSB0b2tlbiB0byBkaXNrIGZvciBsYXRlciBwcm9ncmFtIGV4ZWN1dGlvbnNcbiAgICAgICAgZnMud3JpdGVGaWxlKFRPS0VOX1BBVEgsIEpTT04uc3RyaW5naWZ5KHRva2VuKSwgKGVycikgPT4ge1xuICAgICAgICAgIGlmIChlcnIpIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgICAgICBjb25zb2xlLmxvZygnVG9rZW4gc3RvcmVkIHRvJywgVE9LRU5fUEFUSCk7XG4gICAgICAgIH0pO1xuICAgICAgICBcblxuICAgICAgICByZXEuYXV0aCA9IG9BdXRoMkNsaWVudDtcbiAgICAgICAgbmV4dCgpO1xuICAgICAgfSk7XG4gICAgfSk7XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gauthorise.js"
      ],
      "names": [
        "fs",
        "require",
        "readline",
        "mongoose",
        "google",
        "Gdrive",
        "SCOPES",
        "TOKEN_PATH",
        "CREDENTIALS",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "readFile",
        "err",
        "content",
        "json",
        "credentials",
        "JSON",
        "parse",
        "client_secret",
        "client_id",
        "redirect_uris",
        "installed",
        "oAuth2Client",
        "auth",
        "OAuth2",
        "token",
        "getAccessToken",
        "setCredentials",
        "authUrl",
        "generateAuthUrl",
        "access_type",
        "scope",
        "console",
        "log",
        "rl",
        "createInterface",
        "input",
        "process",
        "stdin",
        "output",
        "stdout",
        "question",
        "code",
        "close",
        "getToken",
        "error",
        "writeFile",
        "stringify"
      ],
      "mappings": "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",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "sourcesContent": [
        "const fs = require('fs');\nconst readline = require('readline');\nconst mongoose = require('mongoose');\nconst {google} = require('googleapis');\n\nconst Gdrive = require('../../../models/gdrive.js');\n\nconst SCOPES = ['https://www.googleapis.com/auth/drive'];\n// The file token.json stores the user's access and refresh tokens, and is\n// created automatically when the authorization flow completes for the first\n// time.\nconst TOKEN_PATH = './client/token.json';\nconst CREDENTIALS = './server/credentials.json';\n\nmodule.exports = (req, res, next) => {\n    fs.readFile(CREDENTIALS, (err, content) => {\n        if (err) return res.json('Error loading client secret file:' + err);\n        // Authorize a client with credentials, then call the Google Drive API.\n            const credentials = JSON.parse(content);\n            const {client_secret, client_id, redirect_uris} = credentials.installed;\n            const oAuth2Client = new google.auth.OAuth2(client_id, client_secret, redirect_uris[0]);\n      \n            // Check if we have previously stored a token.\n            fs.readFile(TOKEN_PATH, (err, token) => {\n                if (err) return getAccessToken(oAuth2Client);\n                oAuth2Client.setCredentials(JSON.parse(token));\n                req.auth = oAuth2Client;\n                next();\n            });\n    });\n};\n\nfunction getAccessToken(oAuth2Client) {\n    const authUrl = oAuth2Client.generateAuthUrl({\n      access_type: 'offline',\n      scope: SCOPES,\n    });\n    console.log('Authorize this app by visiting this url:', authUrl);\n    const rl = readline.createInterface({\n      input: process.stdin,\n      output: process.stdout,\n    });\n    rl.question('Enter the code from that page here: ', (code) => {\n      rl.close();\n      oAuth2Client.getToken(code, (err, token) => {\n        if (err) return console.error('Error retrieving access token', err);\n        oAuth2Client.setCredentials(token);\n        // Store the token to disk for later program executions\n        fs.writeFile(TOKEN_PATH, JSON.stringify(token), (err) => {\n          if (err) console.error(err);\n          console.log('Token stored to', TOKEN_PATH);\n        });\n        \n\n        req.auth = oAuth2Client;\n        next();\n      });\n    });\n}\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1555569099276
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware/encrypt.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/encrypt.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/encrypt.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/encrypt.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
        "sourceFileName": "encrypt.js"
      }
    },
    "ast": null,
    "code": "const {\n  PythonShell\n} = require('python-shell');\n\nconst User = require('../../../models/user.js');\n\nconst Path = require('path');\n\nmodule.exports = function (req, res, next) {\n  User.find({\n    _id: req.body.uid\n  }).exec().then(user => {\n    const pblc_key = user[0].publickey;\n    let myPythonScriptPath = Path.join(__dirname, '../python/encrypt.py');\n    const pyshell = new PythonShell(myPythonScriptPath);\n    let path = req.file.path;\n    let pydata = path.toString() + \",.,\" + pblc_key;\n    pyshell.send(pydata);\n    pyshell.on('message', function (data) {\n      // console.log(data);\n      req.capsule = data;\n    });\n    pyshell.end(function (err, rslt) {\n      if (err) {\n        res.status(500).json(err);\n        console.log(err);\n      } else {\n        req.filepath = JSON.stringify(path).split('\"')[1];\n        next(rslt);\n      }\n    });\n  }).catch(err => {\n    return res.status(401).json({\n      message: \"Invalid token Auth failed\"\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVuY3J5cHQuanMiXSwibmFtZXMiOlsiUHl0aG9uU2hlbGwiLCJyZXF1aXJlIiwiVXNlciIsIlBhdGgiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVxIiwicmVzIiwibmV4dCIsImZpbmQiLCJfaWQiLCJib2R5IiwidWlkIiwiZXhlYyIsInRoZW4iLCJ1c2VyIiwicGJsY19rZXkiLCJwdWJsaWNrZXkiLCJteVB5dGhvblNjcmlwdFBhdGgiLCJqb2luIiwiX19kaXJuYW1lIiwicHlzaGVsbCIsInBhdGgiLCJmaWxlIiwicHlkYXRhIiwidG9TdHJpbmciLCJzZW5kIiwib24iLCJkYXRhIiwiY2Fwc3VsZSIsImVuZCIsImVyciIsInJzbHQiLCJzdGF0dXMiLCJqc29uIiwiY29uc29sZSIsImxvZyIsImZpbGVwYXRoIiwiSlNPTiIsInN0cmluZ2lmeSIsInNwbGl0IiwiY2F0Y2giLCJtZXNzYWdlIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0FBQUNBLEVBQUFBO0FBQUQsSUFBZ0JDLE9BQU8sQ0FBQyxjQUFELENBQTdCOztBQUNBLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLHlCQUFELENBQXBCOztBQUNBLE1BQU1FLElBQUksR0FBR0YsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBRUFHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFVQyxHQUFWLEVBQWVDLEdBQWYsRUFBb0JDLElBQXBCLEVBQXlCO0FBRTFDTixFQUFBQSxJQUFJLENBQUNPLElBQUwsQ0FBVTtBQUFDQyxJQUFBQSxHQUFHLEVBQUVKLEdBQUcsQ0FBQ0ssSUFBSixDQUFTQztBQUFmLEdBQVYsRUFBK0JDLElBQS9CLEdBQ0NDLElBREQsQ0FDTUMsSUFBSSxJQUFFO0FBQ1IsVUFBTUMsUUFBUSxHQUFHRCxJQUFJLENBQUMsQ0FBRCxDQUFKLENBQVFFLFNBQXpCO0FBQ0EsUUFBSUMsa0JBQWtCLEdBQUdmLElBQUksQ0FBQ2dCLElBQUwsQ0FBVUMsU0FBVixFQUFxQixzQkFBckIsQ0FBekI7QUFDQSxVQUFNQyxPQUFPLEdBQUcsSUFBSXJCLFdBQUosQ0FBZ0JrQixrQkFBaEIsQ0FBaEI7QUFDQSxRQUFJSSxJQUFJLEdBQUdoQixHQUFHLENBQUNpQixJQUFKLENBQVNELElBQXBCO0FBQ0EsUUFBSUUsTUFBTSxHQUFHRixJQUFJLENBQUNHLFFBQUwsS0FBa0IsS0FBbEIsR0FBMEJULFFBQXZDO0FBQ0FLLElBQUFBLE9BQU8sQ0FBQ0ssSUFBUixDQUFhRixNQUFiO0FBQ0FILElBQUFBLE9BQU8sQ0FBQ00sRUFBUixDQUFXLFNBQVgsRUFBc0IsVUFBU0MsSUFBVCxFQUFjO0FBQ2hDO0FBQ0F0QixNQUFBQSxHQUFHLENBQUN1QixPQUFKLEdBQWNELElBQWQ7QUFDSCxLQUhEO0FBSUFQLElBQUFBLE9BQU8sQ0FBQ1MsR0FBUixDQUFZLFVBQVVDLEdBQVYsRUFBZUMsSUFBZixFQUFxQjtBQUM3QixVQUFHRCxHQUFILEVBQU87QUFDSHhCLFFBQUFBLEdBQUcsQ0FBQzBCLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkgsR0FBckI7QUFDQUksUUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlMLEdBQVo7QUFDSCxPQUhELE1BSUk7QUFDQXpCLFFBQUFBLEdBQUcsQ0FBQytCLFFBQUosR0FBZUMsSUFBSSxDQUFDQyxTQUFMLENBQWVqQixJQUFmLEVBQXFCa0IsS0FBckIsQ0FBMkIsR0FBM0IsRUFBZ0MsQ0FBaEMsQ0FBZjtBQUNBaEMsUUFBQUEsSUFBSSxDQUFDd0IsSUFBRCxDQUFKO0FBQ0g7QUFDSixLQVREO0FBVUgsR0F0QkQsRUF1QkNTLEtBdkJELENBdUJPVixHQUFHLElBQUc7QUFDVCxXQUFPeEIsR0FBRyxDQUFDMEIsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ3hCUSxNQUFBQSxPQUFPLEVBQUU7QUFEZSxLQUFyQixDQUFQO0FBR0gsR0EzQkQ7QUE0QkMsQ0E5QkQiLCJzb3VyY2VSb290IjoiL2hvbWUvYW5tb2xtaWRkaGEvUHJvamVjdHMvY29yZXNoYXJlL3NlcnZlci9hcGkvbWlkZGxld2FyZSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHtQeXRob25TaGVsbH0gPSByZXF1aXJlKCdweXRob24tc2hlbGwnKTtcbmNvbnN0IFVzZXIgPSByZXF1aXJlKCcuLi8uLi8uLi9tb2RlbHMvdXNlci5qcycpO1xuY29uc3QgUGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAocmVxLCByZXMsIG5leHQpe1xuXG5Vc2VyLmZpbmQoe19pZDogcmVxLmJvZHkudWlkfSkuZXhlYygpXG4udGhlbih1c2VyPT57XG4gICAgY29uc3QgcGJsY19rZXkgPSB1c2VyWzBdLnB1YmxpY2tleTtcbiAgICBsZXQgbXlQeXRob25TY3JpcHRQYXRoID0gUGF0aC5qb2luKF9fZGlybmFtZSwgJy4uL3B5dGhvbi9lbmNyeXB0LnB5Jyk7XG4gICAgY29uc3QgcHlzaGVsbCA9IG5ldyBQeXRob25TaGVsbChteVB5dGhvblNjcmlwdFBhdGgpO1xuICAgIGxldCBwYXRoID0gcmVxLmZpbGUucGF0aDtcbiAgICBsZXQgcHlkYXRhID0gcGF0aC50b1N0cmluZygpICsgXCIsLixcIiArIHBibGNfa2V5O1xuICAgIHB5c2hlbGwuc2VuZChweWRhdGEpO1xuICAgIHB5c2hlbGwub24oJ21lc3NhZ2UnLCBmdW5jdGlvbihkYXRhKXtcbiAgICAgICAgLy8gY29uc29sZS5sb2coZGF0YSk7XG4gICAgICAgIHJlcS5jYXBzdWxlID0gZGF0YTtcbiAgICB9KSAgICAgIFxuICAgIHB5c2hlbGwuZW5kKGZ1bmN0aW9uIChlcnIsIHJzbHQpIHtcbiAgICAgICAgaWYoZXJyKXtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKGVycik7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2V7XG4gICAgICAgICAgICByZXEuZmlsZXBhdGggPSBKU09OLnN0cmluZ2lmeShwYXRoKS5zcGxpdCgnXCInKVsxXTtcbiAgICAgICAgICAgIG5leHQocnNsdCk7XG4gICAgICAgIH1cbiAgICB9KTtcbn0pICAgIFxuLmNhdGNoKGVycj0+IHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oe1xuICAgICAgICBtZXNzYWdlOiBcIkludmFsaWQgdG9rZW4gQXV0aCBmYWlsZWRcIlxuICAgIH0pXG59KTtcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "encrypt.js"
      ],
      "names": [
        "PythonShell",
        "require",
        "User",
        "Path",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "find",
        "_id",
        "body",
        "uid",
        "exec",
        "then",
        "user",
        "pblc_key",
        "publickey",
        "myPythonScriptPath",
        "join",
        "__dirname",
        "pyshell",
        "path",
        "file",
        "pydata",
        "toString",
        "send",
        "on",
        "data",
        "capsule",
        "end",
        "err",
        "rslt",
        "status",
        "json",
        "console",
        "log",
        "filepath",
        "JSON",
        "stringify",
        "split",
        "catch",
        "message"
      ],
      "mappings": "AAAA,MAAM;AAACA,EAAAA;AAAD,IAAgBC,OAAO,CAAC,cAAD,CAA7B;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,yBAAD,CAApB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAAyB;AAE1CN,EAAAA,IAAI,CAACO,IAAL,CAAU;AAACC,IAAAA,GAAG,EAAEJ,GAAG,CAACK,IAAJ,CAASC;AAAf,GAAV,EAA+BC,IAA/B,GACCC,IADD,CACMC,IAAI,IAAE;AACR,UAAMC,QAAQ,GAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQE,SAAzB;AACA,QAAIC,kBAAkB,GAAGf,IAAI,CAACgB,IAAL,CAAUC,SAAV,EAAqB,sBAArB,CAAzB;AACA,UAAMC,OAAO,GAAG,IAAIrB,WAAJ,CAAgBkB,kBAAhB,CAAhB;AACA,QAAII,IAAI,GAAGhB,GAAG,CAACiB,IAAJ,CAASD,IAApB;AACA,QAAIE,MAAM,GAAGF,IAAI,CAACG,QAAL,KAAkB,KAAlB,GAA0BT,QAAvC;AACAK,IAAAA,OAAO,CAACK,IAAR,CAAaF,MAAb;AACAH,IAAAA,OAAO,CAACM,EAAR,CAAW,SAAX,EAAsB,UAASC,IAAT,EAAc;AAChC;AACAtB,MAAAA,GAAG,CAACuB,OAAJ,GAAcD,IAAd;AACH,KAHD;AAIAP,IAAAA,OAAO,CAACS,GAAR,CAAY,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AAC7B,UAAGD,GAAH,EAAO;AACHxB,QAAAA,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,GAArB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACH,OAHD,MAII;AACAzB,QAAAA,GAAG,CAAC+B,QAAJ,GAAeC,IAAI,CAACC,SAAL,CAAejB,IAAf,EAAqBkB,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAAf;AACAhC,QAAAA,IAAI,CAACwB,IAAD,CAAJ;AACH;AACJ,KATD;AAUH,GAtBD,EAuBCS,KAvBD,CAuBOV,GAAG,IAAG;AACT,WAAOxB,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBQ,MAAAA,OAAO,EAAE;AADe,KAArB,CAAP;AAGH,GA3BD;AA4BC,CA9BD",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "sourcesContent": [
        "const {PythonShell} = require('python-shell');\nconst User = require('../../../models/user.js');\nconst Path = require('path');\n\nmodule.exports = function (req, res, next){\n\nUser.find({_id: req.body.uid}).exec()\n.then(user=>{\n    const pblc_key = user[0].publickey;\n    let myPythonScriptPath = Path.join(__dirname, '../python/encrypt.py');\n    const pyshell = new PythonShell(myPythonScriptPath);\n    let path = req.file.path;\n    let pydata = path.toString() + \",.,\" + pblc_key;\n    pyshell.send(pydata);\n    pyshell.on('message', function(data){\n        // console.log(data);\n        req.capsule = data;\n    })      \n    pyshell.end(function (err, rslt) {\n        if(err){\n            res.status(500).json(err);\n            console.log(err);\n        }\n        else{\n            req.filepath = JSON.stringify(path).split('\"')[1];\n            next(rslt);\n        }\n    });\n})    \n.catch(err=> {\n    return res.status(401).json({\n        message: \"Invalid token Auth failed\"\n    })\n});\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1555864797721
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/routes/user.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nconst mongoose = require('mongoose');\n\nconst bcrypt = require('bcrypt');\n\nconst jwt = require('jsonwebtoken');\n\nconst GenerateKey = require('../middleware/generatekey');\n\nconst User = require('../../../models/user.js');\n\nrouter.post('/signup', GenerateKey, (req, res) => {\n  const keys = JSON.parse(req.keys);\n  bcrypt.hash(req.body.password, 10, (err, hash) => {\n    if (err) {\n      return res.status(500).json({\n        message: err.message,\n        err\n      });\n    } else {\n      const user = new User({\n        _id: new mongoose.Types.ObjectId(),\n        username: req.body.username,\n        emailId: req.body.email,\n        password: hash,\n        privatekey: keys.bprivatekey,\n        publickey: keys.bpublickey,\n        signingkey: keys.bsigningkey,\n        verificationkey: keys.bverificationkey\n      }).save().then(rslt => {\n        res.status(201).json({\n          message: \"User created\"\n        });\n        req.rslt = rslt;\n      }).catch(err => {\n        res.status(500).json({\n          err,\n          message: err.message\n        });\n      });\n    }\n  });\n});\nrouter.post('/login', (req, res, next) => {\n  User.find({\n    emailId: req.body.email\n  }).exec().then(user => {\n    if (user.length < 1) {\n      return res.status(404).json({\n        message: \"No such Entry found\"\n      });\n    }\n\n    bcrypt.compare(req.body.password, user[0].password, (err, rslt) => {\n      if (err) {\n        return res.status(404).json({\n          message: 'Auth failed',\n          err\n        });\n      }\n\n      if (rslt) {\n        const token = jwt.sign({\n          email: user[0].emailId,\n          username: user[0].username,\n          _id: user[0]._id\n        }, process.env.TOKEN_KEY, {\n          expiresIn: \"1h\"\n        });\n        return res.status(200).json({\n          message: \"Auth successfull\",\n          token\n        });\n      }\n\n      res.status(401).json({\n        message: \"password didn't match\"\n      });\n    });\n  }).catch(err => {\n    res.status(500).json({\n      err\n    });\n  });\n});\nrouter.delete('/:userid', (req, res, next) => {\n  const id = req.params.userid;\n  User.remove({\n    _id: id\n  }).exec().then(rslt => {\n    res.status(200).json({\n      message: `User with id ${id} successfully deleted`\n    });\n  }).catch(err => {\n    res.status(500).json({\n      err,\n      message: err.message\n    });\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJtb25nb29zZSIsImJjcnlwdCIsImp3dCIsIkdlbmVyYXRlS2V5IiwiVXNlciIsInBvc3QiLCJyZXEiLCJyZXMiLCJrZXlzIiwiSlNPTiIsInBhcnNlIiwiaGFzaCIsImJvZHkiLCJwYXNzd29yZCIsImVyciIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwidXNlciIsIl9pZCIsIlR5cGVzIiwiT2JqZWN0SWQiLCJ1c2VybmFtZSIsImVtYWlsSWQiLCJlbWFpbCIsInByaXZhdGVrZXkiLCJicHJpdmF0ZWtleSIsInB1YmxpY2tleSIsImJwdWJsaWNrZXkiLCJzaWduaW5na2V5IiwiYnNpZ25pbmdrZXkiLCJ2ZXJpZmljYXRpb25rZXkiLCJidmVyaWZpY2F0aW9ua2V5Iiwic2F2ZSIsInRoZW4iLCJyc2x0IiwiY2F0Y2giLCJuZXh0IiwiZmluZCIsImV4ZWMiLCJsZW5ndGgiLCJjb21wYXJlIiwidG9rZW4iLCJzaWduIiwicHJvY2VzcyIsImVudiIsIlRPS0VOX0tFWSIsImV4cGlyZXNJbiIsImRlbGV0ZSIsImlkIiwicGFyYW1zIiwidXNlcmlkIiwicmVtb3ZlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFmOztBQUNBLE1BQU1DLFFBQVEsR0FBR0gsT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBQ0EsTUFBTUksTUFBTSxHQUFHSixPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxNQUFNSyxHQUFHLEdBQUdMLE9BQU8sQ0FBQyxjQUFELENBQW5COztBQUVBLE1BQU1NLFdBQVcsR0FBR04sT0FBTyxDQUFDLDJCQUFELENBQTNCOztBQUNBLE1BQU1PLElBQUksR0FBR1AsT0FBTyxDQUFDLHlC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TUFBTCxDQUFZO0FBQUNqQyxJQUFBQSxHQUFHLEVBQUU4QjtBQUFOLEdBQVosRUFDQ1YsSUFERCxHQUVDTCxJQUZELENBRU9DLElBQUQsSUFBVTtBQUNaNUIsSUFBQUEsR0FBRyxDQUFDUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDakJDLE1BQUFBLE9BQU8sRUFBRyxnQkFBZWdDLEVBQUc7QUFEWCxLQUFyQjtBQUdILEdBTkQsRUFPQ2IsS0FQRCxDQU9RdEIsR0FBRCxJQUFTO0FBQ1pQLElBQUFBLEdBQUcsQ0FBQ1EsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ2pCRixNQUFBQSxHQURpQjtBQUVqQkcsTUFBQUEsT0FBTyxFQUFFSCxHQUFHLENBQUNHO0FBRkksS0FBckI7QUFJSCxHQVpEO0FBYUgsQ0FmRDtBQWlCQW9DLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnhELE1BQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FubW9sbWlkZGhhL1Byb2plY3RzL2NvcmVzaGFyZS9zZXJ2ZXIvYXBpL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xuY29uc3QgYmNyeXB0ID0gcmVxdWlyZSgnYmNyeXB0Jyk7XG5jb25zdCBqd3QgPSByZXF1aXJlKCdqc29ud2VidG9rZW4nKTtcblxuY29uc3QgR2VuZXJhdGVLZXkgPSByZXF1aXJlKCcuLi9taWRkbGV3YXJlL2dlbmVyYXRla2V5Jyk7XG5jb25zdCBVc2VyID0gcmVxdWlyZSgnLi4vLi4vLi4vbW9kZWxzL3VzZXIuanMnKTtcblxucm91dGVyLnBvc3QoJy9zaWdudXAnLCAgR2VuZXJhdGVLZXksIChyZXEscmVzKSA9PntcbiAgICBjb25zdCBrZXlzID0gSlNPTi5wYXJzZShyZXEua2V5cyk7XG4gICAgXG4gICAgYmNyeXB0Lmhhc2gocmVxLmJvZHkucGFzc3dvcmQsIDEwLCAoZXJyLCBoYXNoKT0+e1xuICAgICAgICBpZihlcnIpe1xuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIubWVzc2FnZSxcbiAgICAgICAgICAgICAgICBlcnJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2V7XG4gICAgICAgICAgICBjb25zdCB1c2VyID0gbmV3IFVzZXIoe1xuICAgICAgICAgICAgICAgIF9pZDogbmV3IG1vbmdvb3NlLlR5cGVzLk9iamVjdElkKCksXG4gICAgICAgICAgICAgICAgdXNlcm5hbWU6cmVxLmJvZHkudXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgZW1haWxJZDogcmVxLmJvZHkuZW1haWwsXG4gICAgICAgICAgICAgICAgcGFzc3dvcmQ6IGhhc2gsXG4gICAgICAgICAgICAgICAgcHJpdmF0ZWtleToga2V5cy5icHJpdmF0ZWtleSxcbiAgICAgICAgICAgICAgICBwdWJsaWNrZXk6IGtleXMuYnB1YmxpY2tleSxcbiAgICAgICAgICAgICAgICBzaWduaW5na2V5OiBrZXlzLmJzaWduaW5na2V5LFxuICAgICAgICAgICAgICAgIHZlcmlmaWNhdGlvbmtleToga2V5cy5idmVyaWZpY2F0aW9ua2V5XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnNhdmUoKVxuICAgICAgICAgICAgLnRoZW4ocnNsdCA9PiB7XG4gICAgICAgICAgICAgICAgcmVzLnN0YXR1cygyMDEpLmpzb24oe1xuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIlVzZXIgY3JlYXRlZFwiXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmVxLnJzbHQgPSByc2x0XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgICAgICAgICAgICAgICBlcnIsXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGVyci5tZXNzYWdlXG4gICAgICAgICAgICAgICAgfSk7ICBcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IFxuICAgIH0pO1xufSk7IFxuXG5yb3V0ZXIucG9zdCgnL2xvZ2luJywgKHJlcSwgcmVzLCBuZXh0KT0+IHtcbiAgICBVc2VyLmZpbmQoe2VtYWlsSWQ6IHJlcS5ib2R5LmVtYWlsfSlcbiAgICAuZXhlYygpXG4gICAgLnRoZW4odXNlciA9PiB7XG4gICAgICAgIGlmKHVzZXIubGVuZ3RoIDwgMSl7XG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDQpLmpzb24oe1xuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiTm8gc3VjaCBFbnRyeSBmb3VuZFwiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBiY3J5cHQuY29tcGFyZShyZXEuYm9keS5wYXNzd29yZCwgdXNlclswXS5wYXNzd29yZCwgKGVyciwgcnNsdCk9PiB7XG4gICAgICAgICAgICBpZihlcnIpe1xuICAgICAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuanNvbih7XG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdBdXRoIGZhaWxlZCcsXG4gICAgICAgICAgICAgICAgICAgIGVyclxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZihyc2x0KXtcbiAgICAgICAgICAgICAgICBjb25zdCB0b2tlbiA9IGp3dC5zaWduKHtcbiAgICAgICAgICAgICAgICAgICAgZW1haWw6IHVzZXJbMF0uZW1haWxJZCxcbiAgICAgICAgICAgICAgICAgICAgdXNlcm5hbWU6IHVzZXJbMF0udXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICAgIF9pZDogdXNlclswXS5faWRcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHByb2Nlc3MuZW52LlRPS0VOX0tFWSwgXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBleHBpcmVzSW46IFwiMWhcIlxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiQXV0aCBzdWNjZXNzZnVsbFwiLFxuICAgICAgICAgICAgICAgICAgICB0b2tlblxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXMuc3RhdHVzKDQwMSkuanNvbih7XG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJwYXNzd29yZCBkaWRuJ3QgbWF0Y2hcIlxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSk7XG4gICAgfSlcbiAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgICAgICAgZXJyXG4gICAgICAgIH0pO1xuICAgIH0pXG59KTtcblxucm91dGVyLmRlbGV0ZSgnLzp1c2VyaWQnLCAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBpZCA9IHJlcS5wYXJhbXMudXNlcmlkO1xuICAgIFVzZXIucmVtb3ZlKHtfaWQ6IGlkfSlcbiAgICAuZXhlYygpXG4gICAgLnRoZW4oKHJzbHQpID0+IHtcbiAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICAgICAgbWVzc2FnZTogYFVzZXIgd2l0aCBpZCAke2lkfSBzdWNjZXNzZnVsbHkgZGVsZXRlZGAsXG4gICAgICAgIH0pXG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICAgICAgICBlcnIsXG4gICAgICAgICAgICBtZXNzYWdlOiBlcnIubWVzc2FnZVxuICAgICAgICB9KVxuICAgIH0pXG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "bcrypt",
        "jwt",
        "GenerateKey",
        "User",
        "post",
        "req",
        "res",
        "keys",
        "JSON",
        "parse",
        "hash",
        "body",
        "password",
        "err",
        "status",
        "json",
        "message",
        "user",
        "_id",
        "Types",
        "ObjectId",
        "username",
        "emailId",
        "email",
        "privatekey",
        "bprivatekey",
        "publickey",
        "bpublickey",
        "signingkey",
        "bsigningkey",
        "verificationkey",
        "bverificationkey",
        "save",
        "then",
        "rslt",
        "catch",
        "next",
        "find",
        "exec",
        "length",
        "compare",
        "token",
        "sign",
        "process",
        "env",
        "TOKEN_KEY",
        "expiresIn",
        "delete",
        "id",
        "params",
        "userid",
        "remove",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\nconst mongoose = require('mongoose');\nconst bcrypt = require('bcrypt');\nconst jwt = require('jsonwebtoken');\n\nconst GenerateKey = require('../middleware/generatekey');\nconst User = require('../../../models/user.js');\n\nrouter.post('/signup',  GenerateKey, (req,res) =>{\n    const keys = JSON.parse(req.keys);\n    \n    bcrypt.hash(req.body.password, 10, (err, hash)=>{\n        if(err){\n            return res.status(500).json({\n                message: err.message,\n                err\n            });\n        }\n        else{\n            const user = new User({\n                _id: new mongoose.Types.ObjectId(),\n                username:req.body.username,\n                emailId: req.body.email,\n                password: hash,\n                privatekey: keys.bprivatekey,\n                publickey: keys.bpublickey,\n                signingkey: keys.bsigningkey,\n                verificationkey: keys.bverificationkey\n            })\n            .save()\n            .then(rslt => {\n                res.status(201).json({\n                    message: \"User created\"\n                });\n                req.rslt = rslt\n            })\n            .catch(err => {\n                res.status(500).json({\n                    err,\n                    message: err.message\n                });  \n            });\n        } \n    });\n}); \n\nrouter.post('/login', (req, res, next)=> {\n    User.find({emailId: req.body.email})\n    .exec()\n    .then(user => {\n        if(user.length < 1){\n            return res.status(404).json({\n                message: \"No such Entry found\"\n            });\n        }\n        bcrypt.compare(req.body.password, user[0].password, (err, rslt)=> {\n            if(err){\n                return res.status(404).json({\n                    message: 'Auth failed',\n                    err\n                })\n            }\n            if(rslt){\n                const token = jwt.sign({\n                    email: user[0].emailId,\n                    username: user[0].username,\n                    _id: user[0]._id\n                },\n                process.env.TOKEN_KEY, \n                {\n                    expiresIn: \"1h\"\n                });\n                return res.status(200).json({\n                    message: \"Auth successfull\",\n                    token\n                })\n            }\n            res.status(401).json({\n                message: \"password didn't match\"\n            })\n        });\n    })\n    .catch(err => {\n        res.status(500).json({\n            err\n        });\n    })\n});\n\nrouter.delete('/:userid', (req, res, next) => {\n    const id = req.params.userid;\n    User.remove({_id: id})\n    .exec()\n    .then((rslt) => {\n        res.status(200).json({\n            message: `User with id ${id} successfully deleted`,\n        })\n    })\n    .catch((err) => {\n        res.status(500).json({\n            err,\n            message: err.message\n        })\n    })\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1555416962801
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware/check-auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/check-auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/check-auth.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/check-auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
        "sourceFileName": "check-auth.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst jwt = require('jsonwebtoken');\n\nmodule.exports = (req, res, next) => {\n  try {\n    const token = req.headers.authorization.split(\" \")[1];\n    const decoded = jwt.verify(token, process.env.TOKEN_KEY);\n    req.userData = decoded;\n    next();\n  } catch (error) {\n    return res.status(401).json({\n      message: \"Invalid token Auth failed\"\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrLWF1dGguanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJqd3QiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVxIiwicmVzIiwibmV4dCIsInRva2VuIiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJzcGxpdCIsImRlY29kZWQiLCJ2ZXJpZnkiLCJwcm9jZXNzIiwiZW52IiwiVE9LRU5fS0VZIiwidXNlckRhdGEiLCJlcnJvciIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1DLEdBQUcsR0FBR0QsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7O0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUNqQyxNQUFHO0FBQ0MsVUFBTUMsS0FBSyxHQUFHSCxHQUFHLENBQUNJLE9BQUosQ0FBWUMsYUFBWixDQUEwQkMsS0FBMUIsQ0FBZ0MsR0FBaEMsRUFBcUMsQ0FBckMsQ0FBZDtBQUNBLFVBQU1DLE9BQU8sR0FBR1YsR0FBRyxDQUFDVyxNQUFKLENBQVdMLEtBQVgsRUFBa0JNLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxTQUE5QixDQUFoQjtBQUNBWCxJQUFBQSxHQUFHLENBQUNZLFFBQUosR0FBZUwsT0FBZjtBQUNBTCxJQUFBQSxJQUFJO0FBQ1AsR0FMRCxDQU1BLE9BQU1XLEtBQU4sRUFBYTtBQUNULFdBQU9aLEdBQUcsQ0FBQ2EsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ3hCQyxNQUFBQSxPQUFPLEVBQUU7QUFEZSxLQUFyQixDQUFQO0FBR0g7QUFDSixDQVpEIiwic291cmNlUm9vdCI6Ii9ob21lL2FubW9sbWlkZGhhL1Byb2plY3RzL2NvcmVzaGFyZS9zZXJ2ZXIvYXBpL21pZGRsZXdhcmUiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3Qgand0ID0gcmVxdWlyZSgnanNvbndlYnRva2VuJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgdHJ5e1xuICAgICAgICBjb25zdCB0b2tlbiA9IHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24uc3BsaXQoXCIgXCIpWzFdO1xuICAgICAgICBjb25zdCBkZWNvZGVkID0gand0LnZlcmlmeSh0b2tlbiwgcHJvY2Vzcy5lbnYuVE9LRU5fS0VZKTtcbiAgICAgICAgcmVxLnVzZXJEYXRhID0gZGVjb2RlZDtcbiAgICAgICAgbmV4dCgpO1xuICAgIH1cbiAgICBjYXRjaChlcnJvcikge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oe1xuICAgICAgICAgICAgbWVzc2FnZTogXCJJbnZhbGlkIHRva2VuIEF1dGggZmFpbGVkXCJcbiAgICAgICAgfSlcbiAgICB9XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "check-auth.js"
      ],
      "names": [
        "express",
        "require",
        "jwt",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "token",
        "headers",
        "authorization",
        "split",
        "decoded",
        "verify",
        "process",
        "env",
        "TOKEN_KEY",
        "userData",
        "error",
        "status",
        "json",
        "message"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,cAAD,CAAnB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACjC,MAAG;AACC,UAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAd;AACA,UAAMC,OAAO,GAAGV,GAAG,CAACW,MAAJ,CAAWL,KAAX,EAAkBM,OAAO,CAACC,GAAR,CAAYC,SAA9B,CAAhB;AACAX,IAAAA,GAAG,CAACY,QAAJ,GAAeL,OAAf;AACAL,IAAAA,IAAI;AACP,GALD,CAMA,OAAMW,KAAN,EAAa;AACT,WAAOZ,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAE;AADe,KAArB,CAAP;AAGH;AACJ,CAZD",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "sourcesContent": [
        "const express = require('express');\nconst jwt = require('jsonwebtoken');\n\nmodule.exports = (req, res, next) => {\n    try{\n        const token = req.headers.authorization.split(\" \")[1];\n        const decoded = jwt.verify(token, process.env.TOKEN_KEY);\n        req.userData = decoded;\n        next();\n    }\n    catch(error) {\n        return res.status(401).json({\n            message: \"Invalid token Auth failed\"\n        })\n    }\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1550925720579
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes/notifications.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/notifications.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/routes/notifications.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/notifications.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
        "sourceFileName": "notifications.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nconst mongoose = require('mongoose');\n\nconst gridfs = require('gridfs-stream');\n\nconst fs = require('fs');\n\ngridfs.mongo = mongoose.mongo;\n\nconst Capsule = require('../../../models/capsule.js');\n\nconst User = require('../../../models/user.js');\n\nconst Reencrypt = require('../middleware/reencrypt');\n\nrouter.post('/count', (req, res) => {\n  const uid = req.body.uid;\n  const conn = mongoose.connection;\n  conn.db.collection('fs.files', function (err, collection) {\n    if (err) {\n      res.status(500).json({\n        message: \"No such collection found\"\n      });\n    } else {\n      collection.countDocuments({\n        'metadata.receiver': uid\n      }, function (err, rslt) {\n        if (err) {\n          res.status(500).json(err);\n        } else {\n          res.status(200).json(rslt);\n        }\n      });\n    }\n  });\n});\nrouter.post('/getall', (req, res) => {\n  const uid = req.body.uid;\n  const conn = mongoose.connection;\n  conn.db.collection('fs.files', function (err, collection) {\n    if (err) {\n      res.status(500).json({\n        message: \"No such collection found\"\n      });\n    } else {\n      collection.find({\n        'metadata.receiver': uid\n      }, function (err, rslt) {\n        if (err) {\n          res.status(500).json(err);\n        } else {\n          rslt.toArray(function (err, notifications) {\n            let notif_array = notifications.map(curr_notif => ({\n              message: `${curr_notif.metadata.receiver} shared a file(${curr_notif.filename}) with you`,\n              notificationId: curr_notif._id\n            }));\n            res.status(200).json(notif_array);\n          });\n        }\n      });\n    }\n  });\n});\nrouter.post('/ignore', function (req, res) {\n  const notificationId = req.body.nfid;\n  console.log(sharedFileId);\n  const conn = mongoose.connection;\n  let gfs = gridfs(conn.db);\n  gfs.remove({\n    _id: notificationId\n  }, function (err, rslt) {\n    if (err) {\n      res.status(500).json(err);\n    } else {\n      res.send(\"success\");\n    }\n  });\n});\nrouter.post('/accept', function (req, res, next) {\n  const notificationId = req.body.nfid;\n  const conn = mongoose.connection;\n  let gfs = gridfs(conn.db);\n  let chunks = [];\n  gfs.findOne({\n    _id: notificationId\n  }, function (err, file) {\n    if (err) {\n      res.status(500).json(err);\n    } else {\n      const data = file.metadata;\n      Capsule.find({\n        _id: data.cloudfileid\n      }).exec().then(capsule => {\n        req.filecapsule = JSON.parse(capsule[0].capsule);\n        req.sharefilename = capsule[0].name;\n      }).catch(err => {\n        res.status(500).json(err);\n        console.log(err);\n      });\n      User.find({\n        _id: data.receiver\n      }, {\n        publickey: 1,\n        privatekey: 1\n      }).exec().then(key => {\n        req.receiverkey = key;\n      }).catch(err => {\n        res.status(500).json(err);\n        console.log(err);\n      });\n      User.find({\n        _id: data.sender\n      }, {\n        signingkey: 1,\n        privatekey: 1,\n        publickey: 1,\n        verificationkey: 1\n      }).exec().then(key => {\n        req.senderkey = key;\n        const readstream = gfs.createReadStream({\n          _id: notificationId\n        });\n        readstream.on('data', chunk => {\n          chunks += chunk;\n        });\n        readstream.on(\"end\", function () {\n          req.ciphertext = chunks; //    console.log(req.ciphertext);\n\n          next();\n        });\n      }).catch(err => {\n        // res.status(500).json(err);\n        console.log(err);\n      });\n    }\n  });\n}, Reencrypt);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "notifications.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "gridfs",
        "fs",
        "mongo",
        "Capsule",
        "User",
        "Reencrypt",
        "post",
        "req",
        "res",
        "uid",
        "body",
        "conn",
        "connection",
        "db",
        "collection",
        "err",
        "status",
        "json",
        "message",
        "countDocuments",
        "rslt",
        "find",
        "toArray",
        "notifications",
        "notif_array",
        "map",
        "curr_notif",
        "metadata",
        "receiver",
        "filename",
        "notificationId",
        "_id",
        "nfid",
        "console",
        "log",
        "sharedFileId",
        "gfs",
        "remove",
        "send",
        "next",
        "chunks",
        "findOne",
        "file",
        "data",
        "cloudfileid",
        "exec",
        "then",
        "capsule",
        "filecapsule",
        "JSON",
        "parse",
        "sharefilename",
        "name",
        "catch",
        "publickey",
        "privatekey",
        "key",
        "receiverkey",
        "sender",
        "signingkey",
        "verificationkey",
        "senderkey",
        "readstream",
        "createReadStream",
        "on",
        "chunk",
        "ciphertext",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\nconst mongoose = require('mongoose');\nconst gridfs = require('gridfs-stream');\nconst fs = require('fs');\ngridfs.mongo = mongoose.mongo;\n\nconst Capsule = require('../../../models/capsule.js');\nconst User = require('../../../models/user.js');\nconst Reencrypt = require('../middleware/reencrypt');\n\nrouter.post('/count', (req, res)=>{\n    const uid = req.body.uid;\n    const conn = mongoose.connection;\n    conn.db.collection('fs.files', function(err, collection){\n        if(err){\n            res.status(500).json({message: \"No such collection found\"});\n        }\n        else{\n            collection.countDocuments({'metadata.receiver': uid}, function(err, rslt){\n                if(err){\n                    res.status(500).json(err);\n                }\n                else{\n                    res.status(200).json(rslt);\n                }\n            });\n        }\n    });\n});\nrouter.post('/getall', (req, res)=>{\n   const uid = req.body.uid;\n   const conn = mongoose.connection;\n   conn.db.collection('fs.files', function(err, collection){\n       if(err){\n           res.status(500).json({message: \"No such collection found\"});\n       }\n       else{\n            collection.find({'metadata.receiver': uid}, function(err, rslt){\n                if(err){\n                    res.status(500).json(err);\n                }\n                else{\n                    rslt.toArray(function(err, notifications){\n                        let notif_array = notifications.map((curr_notif)=>(\n                            {message: `${curr_notif.metadata.receiver} shared a file(${curr_notif.filename}) with you`, notificationId: curr_notif._id})\n                        )\n                        res.status(200).json(notif_array);\n                    });\n                }\n            });\n        }\n   }) \n});\n\nrouter.post('/ignore', function(req, res){\n    const notificationId = req.body.nfid;\n    console.log(sharedFileId);\n    const conn = mongoose.connection;\n    let gfs = gridfs(conn.db);\n    gfs.remove({_id:notificationId}, function(err, rslt){\n        if(err){\n            res.status(500).json(err);\n        }\n        else{\n            res.send(\"success\");\n        }\n    });\n})\n\nrouter.post('/accept', function(req, res, next){\n    const notificationId = req.body.nfid;\n    const conn = mongoose.connection;\n    let gfs = gridfs(conn.db);\n    let chunks = [];\n    gfs.findOne({_id: notificationId}, function(err, file){\n        if(err){\n            res.status(500).json(err)\n        }\n        else{\n            const data = file.metadata;\n            Capsule.find({_id: data.cloudfileid})\n            .exec()\n            .then(capsule => {\n                req.filecapsule = JSON.parse(capsule[0].capsule);\n                req.sharefilename = capsule[0].name;\n            })\n            .catch(err=>{\n                res.status(500).json(err);\n                console.log(err);\n            })\n\n            User.find({_id: data.receiver}, {publickey: 1, privatekey: 1})\n            .exec()\n            .then(key => {\n                req.receiverkey = key;\n            })\n            .catch(err => {\n                res.status(500).json(err);\n                console.log(err);\n            });\n\n            User.find({_id: data.sender}, {signingkey: 1, privatekey: 1, publickey: 1, verificationkey: 1})\n            .exec()\n            .then(key => {\n                req.senderkey = key;\n                const readstream = gfs.createReadStream({\n                    _id: notificationId\n                });\n                readstream.on('data', chunk => {\n                   chunks += chunk;\n                });\n                readstream.on(\"end\", function () {\n                   req.ciphertext = chunks;\n                //    console.log(req.ciphertext);\n                   next();\n                });\n            })\n            .catch(err => {\n                // res.status(500).json(err);\n                console.log(err);\n            });   \n        }\n    });\n}, Reencrypt)\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1555865240872
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware/generatekey.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/generatekey.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/generatekey.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/generatekey.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
        "sourceFileName": "generatekey.js"
      }
    },
    "ast": null,
    "code": "const {\n  PythonShell\n} = require('python-shell');\n\nconst Path = require('path');\n\nmodule.exports = function (req, res, next) {\n  try {\n    let myPythonScriptPath = Path.join(__dirname, '../python/generatekey.py');\n    const pyshell = new PythonShell(myPythonScriptPath);\n    pyshell.on(\"message\", function (data) {\n      req.keys = data;\n    });\n    pyshell.end(function (err, rslt) {\n      if (err) {\n        throw err;\n      } else {\n        next(rslt);\n      }\n    });\n  } catch (error) {\n    return res.status(401).json({\n      message: \"Invalid token Auth failed\"\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyYXRla2V5LmpzIl0sIm5hbWVzIjpbIlB5dGhvblNoZWxsIiwicmVxdWlyZSIsIlBhdGgiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVxIiwicmVzIiwibmV4dCIsIm15UHl0aG9uU2NyaXB0UGF0aCIsImpvaW4iLCJfX2Rpcm5hbWUiLCJweXNoZWxsIiwib24iLCJkYXRhIiwia2V5cyIsImVuZCIsImVyciIsInJzbHQiLCJlcnJvciIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0FBQUNBLEVBQUFBO0FBQUQsSUFBZ0JDLE9BQU8sQ0FBQyxjQUFELENBQTdCOztBQUNBLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFVQyxHQUFWLEVBQWVDLEdBQWYsRUFBb0JDLElBQXBCLEVBQXlCO0FBQzFDLE1BQUc7QUFDQyxRQUFJQyxrQkFBa0IsR0FBR04sSUFBSSxDQUFDTyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsMEJBQXJCLENBQXpCO0FBQ0EsVUFBTUMsT0FBTyxHQUFHLElBQUlYLFdBQUosQ0FBZ0JRLGtCQUFoQixDQUFoQjtBQUNBRyxJQUFBQSxPQUFPLENBQUNDLEVBQVIsQ0FBVyxTQUFYLEVBQXNCLFVBQVNDLElBQVQsRUFBYztBQUNoQ1IsTUFBQUEsR0FBRyxDQUFDUyxJQUFKLEdBQVdELElBQVg7QUFDSCxLQUZEO0FBSUFGLElBQUFBLE9BQU8sQ0FBQ0ksR0FBUixDQUFZLFVBQVVDLEdBQVYsRUFBZUMsSUFBZixFQUFxQjtBQUM3QixVQUFHRCxHQUFILEVBQU87QUFDSCxjQUFNQSxHQUFOO0FBQ0gsT0FGRCxNQUdJO0FBQ0FULFFBQUFBLElBQUksQ0FBQ1UsSUFBRCxDQUFKO0FBQ0g7QUFDSixLQVBEO0FBUUgsR0FmRCxDQWdCQSxPQUFNQyxLQUFOLEVBQWE7QUFDVCxXQUFPWixHQUFHLENBQUNhLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUN4QkMsTUFBQUEsT0FBTyxFQUFFO0FBRGUsS0FBckIsQ0FBUDtBQUdIO0FBQ0EsQ0F0QkQiLCJzb3VyY2VSb290IjoiL2hvbWUvYW5tb2xtaWRkaGEvUHJvamVjdHMvY29yZXNoYXJlL3NlcnZlci9hcGkvbWlkZGxld2FyZSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHtQeXRob25TaGVsbH0gPSByZXF1aXJlKCdweXRob24tc2hlbGwnKTtcbmNvbnN0IFBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHJlcSwgcmVzLCBuZXh0KXtcbnRyeXtcbiAgICBsZXQgbXlQeXRob25TY3JpcHRQYXRoID0gUGF0aC5qb2luKF9fZGlybmFtZSwgJy4uL3B5dGhvbi9nZW5lcmF0ZWtleS5weScpO1xuICAgIGNvbnN0IHB5c2hlbGwgPSBuZXcgUHl0aG9uU2hlbGwobXlQeXRob25TY3JpcHRQYXRoKTtcbiAgICBweXNoZWxsLm9uKFwibWVzc2FnZVwiLCBmdW5jdGlvbihkYXRhKXtcbiAgICAgICAgcmVxLmtleXMgPSBkYXRhXG4gICAgfSk7XG5cbiAgICBweXNoZWxsLmVuZChmdW5jdGlvbiAoZXJyLCByc2x0KSB7XG4gICAgICAgIGlmKGVycil7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZXtcbiAgICAgICAgICAgIG5leHQocnNsdCk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmNhdGNoKGVycm9yKSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcbiAgICAgICAgbWVzc2FnZTogXCJJbnZhbGlkIHRva2VuIEF1dGggZmFpbGVkXCJcbiAgICB9KVxufVxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "generatekey.js"
      ],
      "names": [
        "PythonShell",
        "require",
        "Path",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "myPythonScriptPath",
        "join",
        "__dirname",
        "pyshell",
        "on",
        "data",
        "keys",
        "end",
        "err",
        "rslt",
        "error",
        "status",
        "json",
        "message"
      ],
      "mappings": "AAAA,MAAM;AAACA,EAAAA;AAAD,IAAgBC,OAAO,CAAC,cAAD,CAA7B;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAAyB;AAC1C,MAAG;AACC,QAAIC,kBAAkB,GAAGN,IAAI,CAACO,IAAL,CAAUC,SAAV,EAAqB,0BAArB,CAAzB;AACA,UAAMC,OAAO,GAAG,IAAIX,WAAJ,CAAgBQ,kBAAhB,CAAhB;AACAG,IAAAA,OAAO,CAACC,EAAR,CAAW,SAAX,EAAsB,UAASC,IAAT,EAAc;AAChCR,MAAAA,GAAG,CAACS,IAAJ,GAAWD,IAAX;AACH,KAFD;AAIAF,IAAAA,OAAO,CAACI,GAAR,CAAY,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AAC7B,UAAGD,GAAH,EAAO;AACH,cAAMA,GAAN;AACH,OAFD,MAGI;AACAT,QAAAA,IAAI,CAACU,IAAD,CAAJ;AACH;AACJ,KAPD;AAQH,GAfD,CAgBA,OAAMC,KAAN,EAAa;AACT,WAAOZ,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAE;AADe,KAArB,CAAP;AAGH;AACA,CAtBD",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "sourcesContent": [
        "const {PythonShell} = require('python-shell');\nconst Path = require('path');\n\nmodule.exports = function (req, res, next){\ntry{\n    let myPythonScriptPath = Path.join(__dirname, '../python/generatekey.py');\n    const pyshell = new PythonShell(myPythonScriptPath);\n    pyshell.on(\"message\", function(data){\n        req.keys = data\n    });\n\n    pyshell.end(function (err, rslt) {\n        if(err){\n            throw err;\n        }\n        else{\n            next(rslt);\n        }\n    });\n}\ncatch(error) {\n    return res.status(401).json({\n        message: \"Invalid token Auth failed\"\n    })\n}\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1555578990921
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware/reencrypt.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/reencrypt.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/reencrypt.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/reencrypt.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
        "sourceFileName": "reencrypt.js"
      }
    },
    "ast": null,
    "code": "const {\n  PythonShell\n} = require('python-shell');\n\nconst mongoose = require('mongoose');\n\nconst http = require('http');\n\nconst axios = require('axios');\n\nconst Path = require('path');\n\nmodule.exports = (req, res) => {\n  let myPythonScriptPath = Path.join(__dirname, '../python/reencrypt.py');\n  const pyshell = new PythonShell(myPythonScriptPath);\n  const reencryptkeys = JSON.stringify({\n    'signingkey': req.senderkey[0].signingkey,\n    'privatekey': req.senderkey[0].privatekey,\n    'verificationkey': req.senderkey[0].verificationkey,\n    'senderpublickey': req.senderkey[0].publickey,\n    'publickey': req.receiverkey[0].publickey,\n    'receiverprivatekey': req.receiverkey[0].privatekey,\n    'capsule': req.filecapsule,\n    'ciphertext': req.ciphertext,\n    'sharefilename': req.sharefilename\n  });\n  pyshell.send(reencryptkeys);\n  pyshell.on('message', data => {\n    req.destpath = data;\n  });\n  pyshell.end(() => {\n    axios.post('http://localhost:8080/mbox/upload', {\n      destpath: req.destpath,\n      filename: req.sharefilename\n    }).then(() => {\n      res.status(200).send(\"decryption completed\");\n    }).catch(err => {\n      res.status(500).json(err);\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZW5jcnlwdC5qcyJdLCJuYW1lcyI6WyJQeXRob25TaGVsbCIsInJlcXVpcmUiLCJtb25nb29zZSIsImh0dHAiLCJheGlvcyIsIlBhdGgiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVxIiwicmVzIiwibXlQeXRob25TY3JpcHRQYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsInB5c2hlbGwiLCJyZWVuY3J5cHRrZXlzIiwiSlNPTiIsInN0cmluZ2lmeSIsInNlbmRlcmtleSIsInNpZ25pbmdrZXkiLCJwcml2YXRla2V5IiwidmVyaWZpY2F0aW9ua2V5IiwicHVibGlja2V5IiwicmVjZWl2ZXJrZXkiLCJmaWxlY2Fwc3VsZSIsImNpcGhlcnRleHQiLCJzaGFyZWZpbGVuYW1lIiwic2VuZCIsIm9uIiwiZGF0YSIsImRlc3RwYXRoIiwiZW5kIiwicG9zdCIsImZpbGVuYW1lIiwidGhlbiIsInN0YXR1cyIsImNhdGNoIiwiZXJyIiwianNvbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFDQSxFQUFBQTtBQUFELElBQWdCQyxPQUFPLENBQUMsY0FBRCxDQUE3Qjs7QUFDQSxNQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBLE1BQU1FLElBQUksR0FBR0YsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTUcsS0FBSyxHQUFHSCxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNSSxJQUFJLEdBQUdKLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUVBSyxNQUFNLENBQUNDLE9BQVAsR0FBa0IsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDNUIsTUFBSUMsa0JBQWtCLEdBQUdMLElBQUksQ0FBQ00sSUFBTCxDQUFVQyxTQUFWLEVBQXFCLHdCQUFyQixDQUF6QjtBQUNBLFFBQU1DLE9BQU8sR0FBRyxJQUFJYixXQUFKLENBQWdCVSxrQkFBaEIsQ0FBaEI7QUFDQSxRQUFNSSxhQUFhLEdBQUdDLElBQUksQ0FBQ0MsU0FBTCxDQUFlO0FBQUMsa0JBQWNSLEdBQUcsQ0FBQ1MsU0FBSixDQUFjLENBQWQsRUFBaUJDLFVBQWhDO0FBQTRDLGtCQUFjVixHQUFHLENBQUNTLFNBQUosQ0FBYyxDQUFkLEVBQWlCRSxVQUEzRTtBQUF1Rix1QkFBbUJYLEdBQUcsQ0FBQ1MsU0FBSixDQUFjLENBQWQsRUFBaUJHLGVBQTNIO0FBQTRJLHVCQUFtQlosR0FBRyxDQUFDUyxTQUFKLENBQWMsQ0FBZCxFQUFpQkksU0FBaEw7QUFBMkwsaUJBQWFiLEdBQUcsQ0FBQ2MsV0FBSixDQUFnQixDQUFoQixFQUFtQkQsU0FBM047QUFBc08sMEJBQXNCYixHQUFHLENBQUNjLFdBQUosQ0FBZ0IsQ0FBaEIsRUFBbUJILFVBQS9RO0FBQTJSLGVBQVdYLEdBQUcsQ0FBQ2UsV0FBMVM7QUFBdVQsa0JBQWNmLEdBQUcsQ0FBQ2dCLFVBQXpVO0FBQXFWLHFCQUFpQmhCLEdBQUcsQ0FBQ2lCO0FBQTFXLEdBQWYsQ0FBdEI7QUFDQVosRUFBQUEsT0FBTyxDQUFDYSxJQUFSLENBQWFaLGFBQWI7QUFFQUQsRUFBQUEsT0FBTyxDQUFDYyxFQUFSLENBQVcsU0FBWCxFQUFzQkMsSUFBSSxJQUFHO0FBQ3pCcEIsSUFBQUEsR0FBRyxDQUFDcUIsUUFBSixHQUFlRCxJQUFmO0FBQ0gsR0FGRDtBQUlBZixFQUFBQSxPQUFPLENBQUNpQixHQUFSLENBQVksTUFBSTtBQUNaMUIsSUFBQUEsS0FBSyxDQUFDMkIsSUFBTixDQUFXLG1DQUFYLEVBQWdEO0FBQUNGLE1BQUFBLFFBQVEsRUFBRXJCLEdBQUcsQ0FBQ3FCLFFBQWY7QUFBeUJHLE1BQUFBLFFBQVEsRUFBRXhCLEdBQUcsQ0FBQ2lCO0FBQXZDLEtBQWhELEVBQ0NRLElBREQsQ0FDTSxNQUFNO0FBQ1J4QixNQUFBQSxHQUFHLENBQUN5QixNQUFKLENBQVcsR0FBWCxFQUFnQlIsSUFBaEIsQ0FBcUIsc0JBQXJCO0FBQ0gsS0FIRCxFQUlDUyxLQUpELENBSU9DLEdBQUcsSUFBSTtBQUNWM0IsTUFBQUEsR0FBRyxDQUFDeUIsTUFBSixDQUFXLEdBQVgsRUFBZ0JHLElBQWhCLENBQXFCRCxHQUFyQjtBQUNILEtBTkQ7QUFPSCxHQVJEO0FBU0gsQ0FuQkQiLCJzb3VyY2VSb290IjoiL2hvbWUvYW5tb2xtaWRkaGEvUHJvamVjdHMvY29yZXNoYXJlL3NlcnZlci9hcGkvbWlkZGxld2FyZSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHtQeXRob25TaGVsbH0gPSByZXF1aXJlKCdweXRob24tc2hlbGwnKTtcbmNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcbmNvbnN0IGh0dHAgPSByZXF1aXJlKCdodHRwJyk7XG5jb25zdCBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJyk7XG5jb25zdCBQYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9ICgocmVxLCByZXMpID0+IHtcbiAgICBsZXQgbXlQeXRob25TY3JpcHRQYXRoID0gUGF0aC5qb2luKF9fZGlybmFtZSwgJy4uL3B5dGhvbi9yZWVuY3J5cHQucHknKTtcbiAgICBjb25zdCBweXNoZWxsID0gbmV3IFB5dGhvblNoZWxsKG15UHl0aG9uU2NyaXB0UGF0aCk7XG4gICAgY29uc3QgcmVlbmNyeXB0a2V5cyA9IEpTT04uc3RyaW5naWZ5KHsnc2lnbmluZ2tleSc6IHJlcS5zZW5kZXJrZXlbMF0uc2lnbmluZ2tleSwgJ3ByaXZhdGVrZXknOiByZXEuc2VuZGVya2V5WzBdLnByaXZhdGVrZXksICd2ZXJpZmljYXRpb25rZXknOiByZXEuc2VuZGVya2V5WzBdLnZlcmlmaWNhdGlvbmtleSwgJ3NlbmRlcnB1YmxpY2tleSc6IHJlcS5zZW5kZXJrZXlbMF0ucHVibGlja2V5LCAncHVibGlja2V5JzogcmVxLnJlY2VpdmVya2V5WzBdLnB1YmxpY2tleSwgJ3JlY2VpdmVycHJpdmF0ZWtleSc6IHJlcS5yZWNlaXZlcmtleVswXS5wcml2YXRla2V5LCAnY2Fwc3VsZSc6IHJlcS5maWxlY2Fwc3VsZSwgJ2NpcGhlcnRleHQnOiByZXEuY2lwaGVydGV4dCwgJ3NoYXJlZmlsZW5hbWUnOiByZXEuc2hhcmVmaWxlbmFtZX0pO1xuICAgIHB5c2hlbGwuc2VuZChyZWVuY3J5cHRrZXlzKTtcblxuICAgIHB5c2hlbGwub24oJ21lc3NhZ2UnLCBkYXRhID0+e1xuICAgICAgICByZXEuZGVzdHBhdGggPSBkYXRhO1xuICAgIH0pO1xuXG4gICAgcHlzaGVsbC5lbmQoKCk9PntcbiAgICAgICAgYXhpb3MucG9zdCgnaHR0cDovL2xvY2FsaG9zdDo4MDgwL21ib3gvdXBsb2FkJywge2Rlc3RwYXRoOiByZXEuZGVzdHBhdGgsIGZpbGVuYW1lOiByZXEuc2hhcmVmaWxlbmFtZX0pXG4gICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKFwiZGVjcnlwdGlvbiBjb21wbGV0ZWRcIik7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oZXJyKTtcbiAgICAgICAgfSlcbiAgICB9KVxufSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "reencrypt.js"
      ],
      "names": [
        "PythonShell",
        "require",
        "mongoose",
        "http",
        "axios",
        "Path",
        "module",
        "exports",
        "req",
        "res",
        "myPythonScriptPath",
        "join",
        "__dirname",
        "pyshell",
        "reencryptkeys",
        "JSON",
        "stringify",
        "senderkey",
        "signingkey",
        "privatekey",
        "verificationkey",
        "publickey",
        "receiverkey",
        "filecapsule",
        "ciphertext",
        "sharefilename",
        "send",
        "on",
        "data",
        "destpath",
        "end",
        "post",
        "filename",
        "then",
        "status",
        "catch",
        "err",
        "json"
      ],
      "mappings": "AAAA,MAAM;AAACA,EAAAA;AAAD,IAAgBC,OAAO,CAAC,cAAD,CAA7B;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AAEAK,MAAM,CAACC,OAAP,GAAkB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5B,MAAIC,kBAAkB,GAAGL,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,wBAArB,CAAzB;AACA,QAAMC,OAAO,GAAG,IAAIb,WAAJ,CAAgBU,kBAAhB,CAAhB;AACA,QAAMI,aAAa,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAC,kBAAcR,GAAG,CAACS,SAAJ,CAAc,CAAd,EAAiBC,UAAhC;AAA4C,kBAAcV,GAAG,CAACS,SAAJ,CAAc,CAAd,EAAiBE,UAA3E;AAAuF,uBAAmBX,GAAG,CAACS,SAAJ,CAAc,CAAd,EAAiBG,eAA3H;AAA4I,uBAAmBZ,GAAG,CAACS,SAAJ,CAAc,CAAd,EAAiBI,SAAhL;AAA2L,iBAAab,GAAG,CAACc,WAAJ,CAAgB,CAAhB,EAAmBD,SAA3N;AAAsO,0BAAsBb,GAAG,CAACc,WAAJ,CAAgB,CAAhB,EAAmBH,UAA/Q;AAA2R,eAAWX,GAAG,CAACe,WAA1S;AAAuT,kBAAcf,GAAG,CAACgB,UAAzU;AAAqV,qBAAiBhB,GAAG,CAACiB;AAA1W,GAAf,CAAtB;AACAZ,EAAAA,OAAO,CAACa,IAAR,CAAaZ,aAAb;AAEAD,EAAAA,OAAO,CAACc,EAAR,CAAW,SAAX,EAAsBC,IAAI,IAAG;AACzBpB,IAAAA,GAAG,CAACqB,QAAJ,GAAeD,IAAf;AACH,GAFD;AAIAf,EAAAA,OAAO,CAACiB,GAAR,CAAY,MAAI;AACZ1B,IAAAA,KAAK,CAAC2B,IAAN,CAAW,mCAAX,EAAgD;AAACF,MAAAA,QAAQ,EAAErB,GAAG,CAACqB,QAAf;AAAyBG,MAAAA,QAAQ,EAAExB,GAAG,CAACiB;AAAvC,KAAhD,EACCQ,IADD,CACM,MAAM;AACRxB,MAAAA,GAAG,CAACyB,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB,sBAArB;AACH,KAHD,EAICS,KAJD,CAIOC,GAAG,IAAI;AACV3B,MAAAA,GAAG,CAACyB,MAAJ,CAAW,GAAX,EAAgBG,IAAhB,CAAqBD,GAArB;AACH,KAND;AAOH,GARD;AASH,CAnBD",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "sourcesContent": [
        "const {PythonShell} = require('python-shell');\nconst mongoose = require('mongoose');\nconst http = require('http');\nconst axios = require('axios');\nconst Path = require('path');\n\nmodule.exports = ((req, res) => {\n    let myPythonScriptPath = Path.join(__dirname, '../python/reencrypt.py');\n    const pyshell = new PythonShell(myPythonScriptPath);\n    const reencryptkeys = JSON.stringify({'signingkey': req.senderkey[0].signingkey, 'privatekey': req.senderkey[0].privatekey, 'verificationkey': req.senderkey[0].verificationkey, 'senderpublickey': req.senderkey[0].publickey, 'publickey': req.receiverkey[0].publickey, 'receiverprivatekey': req.receiverkey[0].privatekey, 'capsule': req.filecapsule, 'ciphertext': req.ciphertext, 'sharefilename': req.sharefilename});\n    pyshell.send(reencryptkeys);\n\n    pyshell.on('message', data =>{\n        req.destpath = data;\n    });\n\n    pyshell.end(()=>{\n        axios.post('http://localhost:8080/mbox/upload', {destpath: req.destpath, filename: req.sharefilename})\n        .then(() => {\n            res.status(200).send(\"decryption completed\");\n        })\n        .catch(err => {\n            res.status(500).json(err);\n        })\n    })\n});"
      ]
    },
    "sourceType": "module",
    "mtime": 1555921540120
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/models/capsule.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/models/capsule.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/models/capsule.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/models/capsule.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/models",
        "sourceFileName": "capsule.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\ncapsuleschema = new Schema({\n  _id: String,\n  name: String,\n  capsule: String\n});\nmodule.exports = mongoose.model(\"capsule\", capsuleschema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhcHN1bGUuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwiY2Fwc3VsZXNjaGVtYSIsIl9pZCIsIlN0cmluZyIsIm5hbWUiLCJjYXBzdWxlIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF4QjtBQUVBQyxhQUFhLEdBQUcsSUFBSUQsTUFBSixDQUFXO0FBQ3ZCRSxFQUFBQSxHQUFHLEVBQUVDLE1BRGtCO0FBRXZCQyxFQUFBQSxJQUFJLEVBQUVELE1BRmlCO0FBR3ZCRSxFQUFBQSxPQUFPLEVBQUVGO0FBSGMsQ0FBWCxDQUFoQjtBQU1BRyxNQUFNLENBQUNDLE9BQVAsR0FBaUJULFFBQVEsQ0FBQ1UsS0FBVCxDQUFlLFNBQWYsRUFBMEJQLGFBQTFCLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FubW9sbWlkZGhhL1Byb2plY3RzL2NvcmVzaGFyZS9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XG5cbmNhcHN1bGVzY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgICBfaWQ6IFN0cmluZyxcbiAgICBuYW1lOiBTdHJpbmcsXG4gICAgY2Fwc3VsZTogU3RyaW5nXG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBtb25nb29zZS5tb2RlbChcImNhcHN1bGVcIiwgY2Fwc3VsZXNjaGVtYSk7XG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "capsule.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "capsuleschema",
        "_id",
        "String",
        "name",
        "capsule",
        "module",
        "exports",
        "model"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEAC,aAAa,GAAG,IAAID,MAAJ,CAAW;AACvBE,EAAAA,GAAG,EAAEC,MADkB;AAEvBC,EAAAA,IAAI,EAAED,MAFiB;AAGvBE,EAAAA,OAAO,EAAEF;AAHc,CAAX,CAAhB;AAMAG,MAAM,CAACC,OAAP,GAAiBT,QAAQ,CAACU,KAAT,CAAe,SAAf,EAA0BP,aAA1B,CAAjB",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/models",
      "sourcesContent": [
        "const mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\n\ncapsuleschema = new Schema({\n    _id: String,\n    name: String,\n    capsule: String\n});\n\nmodule.exports = mongoose.model(\"capsule\", capsuleschema);\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1553713143385
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes/mbox.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/mbox.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/routes/mbox.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/mbox.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
        "sourceFileName": "mbox.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst mongoose = require('mongoose');\n\nconst router = express.Router();\n\nconst fs = require('fs');\n\nconst isomorphicfetch = require('isomorphic-fetch');\n\nconst Dropbox = require('dropbox').Dropbox;\n\nconst dropboxV2Api = require('dropbox-v2-api');\n\nrouter.post('/', (req, res, next) => {\n  const dbx = new Dropbox({\n    accessToken: \"jKuLkh-knBAAAAAAAAAADJDRC9nnNGfeagiXTj0T9DfeQXdwI84tGfI_NjaRZ4-z\"\n  });\n  dbx.usersGetCurrentAccount().then(function (response) {\n    console.log(response);\n  }).catch(function (error) {\n    console.error(error);\n  });\n  dbx.filesListFolder({\n    path: ''\n  }).then(function (response) {\n    res.send(response.entries);\n  }).catch(function (error) {\n    console.log(error);\n  });\n});\nrouter.post('/upload', (req, res) => {\n  const pathdb = \"/\" + req.body.filename;\n  const dropbox = dropboxV2Api.authenticate({\n    token: 'jKuLkh-knBAAAAAAAAAADJDRC9nnNGfeagiXTj0T9DfeQXdwI84tGfI_NjaRZ4-z'\n  });\n  const uploadStream = dropbox({\n    resource: 'files/upload',\n    parameters: {\n      path: pathdb\n    }\n  }, (err, result) => {\n    if (err) {\n      res.status(500).json(err);\n    } else {\n      res.status(200).json(result);\n    }\n  });\n  fs.createReadStream(req.body.destpath).pipe(uploadStream);\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ib3guanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJtb25nb29zZSIsInJvdXRlciIsIlJvdXRlciIsImZzIiwiaXNvbW9ycGhpY2ZldGNoIiwiRHJvcGJveCIsImRyb3Bib3hWMkFwaSIsInBvc3QiLCJyZXEiLCJyZXMiLCJuZXh0IiwiZGJ4IiwiYWNjZXNzVG9rZW4iLCJ1c2Vyc0dldEN1cnJlbnRBY2NvdW50IiwidGhlbiIsInJlc3BvbnNlIiwiY29uc29sZSIsImxvZyIsImNhdGNoIiwiZXJyb3IiLCJmaWxlc0xpc3RGb2xkZXIiLCJwYXRoIiwic2VuZCIsImVudHJpZXMiLCJwYXRoZGIiLCJib2R5IiwiZmlsZW5hbWUiLCJkcm9wYm94IiwiYXV0aGVudGljYXRlIiwidG9rZW4iLCJ1cGxvYWRTdHJlYW0iLCJyZXNvdXJjZSIsInBhcmFtZXRlcnMiLCJlcnIiLCJyZXN1bHQiLCJzdGF0dXMiLCJqc29uIiwiY3JlYXRlUmVhZFN0cmVhbSIsImRlc3RwYXRoIiwicGlwZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTUMsUUFBUSxHQUFHRCxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFDQSxNQUFNRSxNQUFNLEdBQUdILE9BQU8sQ0FBQ0ksTUFBUixFQUFmOztBQUNBLE1BQU1DLEVBQUUsR0FBR0osT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBQ0EsTUFBTUssZUFBZSxHQUFHTCxPQUFPLENBQUMsa0JBQUQsQ0FBL0I7O0FBQ0EsTUFBTU0sT0FBTyxHQUFHTixPQUFPLENBQUMsU0FBRCxDQUFQLENBQW1CTSxPQUFuQzs7QUFDQSxNQUFNQyxZQUFZLEdBQUdQLE9BQU8sQ0FBQyxnQkFBRCxDQUE1Qjs7QUFFQUUsTUFBTSxDQUFDTSxJQUFQLENBQVksR0FBWixFQUFpQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFrQjtBQUMvQixRQUFNQyxHQUFHLEdBQUcsSUFBSU4sT0FBSixDQUFZO0FBQUVPLElBQUFBLFdBQVcsRUFBRTtBQUFmLEdBQVosQ0FBWjtBQUNBRCxFQUFBQSxHQUFHLENBQUNFLHNCQUFKLEdBQ0NDLElBREQsQ0FDTSxVQUFTQyxRQUFULEVBQW1CO0FBQ3JCQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsUUFBWjtBQUNILEdBSEQsRUFJQ0csS0FKRCxDQUlPLFVBQVNDLEtBQVQsRUFBZ0I7QUFDbkJILElBQUFBLE9BQU8sQ0FBQ0csS0FBUixDQUFjQSxLQUFkO0FBQ0gsR0FORDtBQU9BUixFQUFBQSxHQUFHLENBQUNTLGVBQUosQ0FBb0I7QUFBQ0MsSUFBQUEsSUFBSSxFQUFFO0FBQVAsR0FBcEIsRUFDQ1AsSUFERCxDQUNNLFVBQVNDLFFBQVQsRUFBbUI7QUFDckJOLElBQUFBLEdBQUcsQ0FBQ2EsSUFBSixDQUFTUCxRQUFRLENBQUNRLE9BQWxCO0FBQ0gsR0FIRCxFQUlDTCxLQUpELENBSU8sVUFBU0MsS0FBVCxFQUFnQjtBQUNuQkgsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlFLEtBQVo7QUFDSCxHQU5EO0FBT0gsQ0FoQkQ7QUFrQkFsQixNQUFNLENBQUNNLElBQVAsQ0FBWSxTQUFaLEVBQXVCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFZO0FBQy9CLFFBQU1lLE1BQU0sR0FBRyxNQUFNaEIsR0FBRyxDQUFDaUIsSUFBSixDQUFTQyxRQUE5QjtBQUNBLFFBQU1DLE9BQU8sR0FBR3JCLFlBQVksQ0FBQ3NCLFlBQWIsQ0FBMEI7QUFDdENDLElBQUFBLEtBQUssRUFBRTtBQUQrQixHQUExQixDQUFoQjtBQUlBLFFBQU1DLFlBQVksR0FBR0gsT0FBTyxDQUFDO0FBQ3pCSSxJQUFBQSxRQUFRLEVBQUUsY0FEZTtBQUV6QkMsSUFBQUEsVUFBVSxFQUFFO0FBQ1JYLE1BQUFBLElBQUksRUFBRUc7QUFERTtBQUZhLEdBQUQsRUFLekIsQ0FBQ1MsR0FBRCxFQUFNQyxNQUFOLEtBQWlCO0FBQ2hCLFFBQUdELEdBQUgsRUFBTztBQUNIeEIsTUFBQUEsR0FBRyxDQUFDMEIsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCSCxHQUFyQjtBQUNILEtBRkQsTUFHSTtBQUNBeEIsTUFBQUEsR0FBRyxDQUFDMEIsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixNQUFyQjtBQUNIO0FBQ0osR0FaMkIsQ0FBNUI7QUFhQS9CLEVBQUFBLEVBQUUsQ0FBQ2tDLGdCQUFILENBQW9CN0IsR0FBRyxDQUFDaUIsSUFBSixDQUFTYSxRQUE3QixFQUF1Q0MsSUFBdkMsQ0FBNENULFlBQTVDO0FBQ0gsQ0FwQkQ7QUFzQkFVLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnhDLE1BQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FubW9sbWlkZGhhL1Byb2plY3RzL2NvcmVzaGFyZS9zZXJ2ZXIvYXBpL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuY29uc3QgaXNvbW9ycGhpY2ZldGNoID0gcmVxdWlyZSgnaXNvbW9ycGhpYy1mZXRjaCcpO1xuY29uc3QgRHJvcGJveCA9IHJlcXVpcmUoJ2Ryb3Bib3gnKS5Ecm9wYm94O1xuY29uc3QgZHJvcGJveFYyQXBpID0gcmVxdWlyZSgnZHJvcGJveC12Mi1hcGknKTtcblxucm91dGVyLnBvc3QoJy8nLCAocmVxLCByZXMsIG5leHQpPT57XG4gICAgY29uc3QgZGJ4ID0gbmV3IERyb3Bib3goeyBhY2Nlc3NUb2tlbjogXCJqS3VMa2gta25CQUFBQUFBQUFBQURKRFJDOW5uTkdmZWFnaVhUajBUOURmZVFYZHdJODR0R2ZJX05qYVJaNC16XCIgfSk7XG4gICAgZGJ4LnVzZXJzR2V0Q3VycmVudEFjY291bnQoKVxuICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgICB9KVxuICAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICB9KTtcbiAgICBkYnguZmlsZXNMaXN0Rm9sZGVyKHtwYXRoOiAnJ30pXG4gICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAgICAgcmVzLnNlbmQocmVzcG9uc2UuZW50cmllcyk7XG4gICAgfSlcbiAgICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIH0pO1xufSlcblxucm91dGVyLnBvc3QoJy91cGxvYWQnLCAocmVxLCByZXMpPT57XG4gICAgY29uc3QgcGF0aGRiID0gXCIvXCIgKyByZXEuYm9keS5maWxlbmFtZTtcbiAgICBjb25zdCBkcm9wYm94ID0gZHJvcGJveFYyQXBpLmF1dGhlbnRpY2F0ZSh7XG4gICAgICAgIHRva2VuOiAnakt1TGtoLWtuQkFBQUFBQUFBQUFESkRSQzlubk5HZmVhZ2lYVGowVDlEZmVRWGR3STg0dEdmSV9OamFSWjQteidcbiAgICB9KTtcblxuICAgIGNvbnN0IHVwbG9hZFN0cmVhbSA9IGRyb3Bib3goe1xuICAgICAgICByZXNvdXJjZTogJ2ZpbGVzL3VwbG9hZCcsXG4gICAgICAgIHBhcmFtZXRlcnM6IHtcbiAgICAgICAgICAgIHBhdGg6IHBhdGhkYlxuICAgICAgICB9XG4gICAgfSwgKGVyciwgcmVzdWx0KSA9PiB7XG4gICAgICAgIGlmKGVycil7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbihlcnIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2V7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbihyZXN1bHQpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgZnMuY3JlYXRlUmVhZFN0cmVhbShyZXEuYm9keS5kZXN0cGF0aCkucGlwZSh1cGxvYWRTdHJlYW0pO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "mbox.js"
      ],
      "names": [
        "express",
        "require",
        "mongoose",
        "router",
        "Router",
        "fs",
        "isomorphicfetch",
        "Dropbox",
        "dropboxV2Api",
        "post",
        "req",
        "res",
        "next",
        "dbx",
        "accessToken",
        "usersGetCurrentAccount",
        "then",
        "response",
        "console",
        "log",
        "catch",
        "error",
        "filesListFolder",
        "path",
        "send",
        "entries",
        "pathdb",
        "body",
        "filename",
        "dropbox",
        "authenticate",
        "token",
        "uploadStream",
        "resource",
        "parameters",
        "err",
        "result",
        "status",
        "json",
        "createReadStream",
        "destpath",
        "pipe",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAME,MAAM,GAAGH,OAAO,CAACI,MAAR,EAAf;;AACA,MAAMC,EAAE,GAAGJ,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMK,eAAe,GAAGL,OAAO,CAAC,kBAAD,CAA/B;;AACA,MAAMM,OAAO,GAAGN,OAAO,CAAC,SAAD,CAAP,CAAmBM,OAAnC;;AACA,MAAMC,YAAY,GAAGP,OAAO,CAAC,gBAAD,CAA5B;;AAEAE,MAAM,CAACM,IAAP,CAAY,GAAZ,EAAiB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAkB;AAC/B,QAAMC,GAAG,GAAG,IAAIN,OAAJ,CAAY;AAAEO,IAAAA,WAAW,EAAE;AAAf,GAAZ,CAAZ;AACAD,EAAAA,GAAG,CAACE,sBAAJ,GACCC,IADD,CACM,UAASC,QAAT,EAAmB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,GAHD,EAICG,KAJD,CAIO,UAASC,KAAT,EAAgB;AACnBH,IAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACH,GAND;AAOAR,EAAAA,GAAG,CAACS,eAAJ,CAAoB;AAACC,IAAAA,IAAI,EAAE;AAAP,GAApB,EACCP,IADD,CACM,UAASC,QAAT,EAAmB;AACrBN,IAAAA,GAAG,CAACa,IAAJ,CAASP,QAAQ,CAACQ,OAAlB;AACH,GAHD,EAICL,KAJD,CAIO,UAASC,KAAT,EAAgB;AACnBH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,GAND;AAOH,CAhBD;AAkBAlB,MAAM,CAACM,IAAP,CAAY,SAAZ,EAAuB,CAACC,GAAD,EAAMC,GAAN,KAAY;AAC/B,QAAMe,MAAM,GAAG,MAAMhB,GAAG,CAACiB,IAAJ,CAASC,QAA9B;AACA,QAAMC,OAAO,GAAGrB,YAAY,CAACsB,YAAb,CAA0B;AACtCC,IAAAA,KAAK,EAAE;AAD+B,GAA1B,CAAhB;AAIA,QAAMC,YAAY,GAAGH,OAAO,CAAC;AACzBI,IAAAA,QAAQ,EAAE,cADe;AAEzBC,IAAAA,UAAU,EAAE;AACRX,MAAAA,IAAI,EAAEG;AADE;AAFa,GAAD,EAKzB,CAACS,GAAD,EAAMC,MAAN,KAAiB;AAChB,QAAGD,GAAH,EAAO;AACHxB,MAAAA,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,GAArB;AACH,KAFD,MAGI;AACAxB,MAAAA,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,MAArB;AACH;AACJ,GAZ2B,CAA5B;AAaA/B,EAAAA,EAAE,CAACkC,gBAAH,CAAoB7B,GAAG,CAACiB,IAAJ,CAASa,QAA7B,EAAuCC,IAAvC,CAA4CT,YAA5C;AACH,CApBD;AAsBAU,MAAM,CAACC,OAAP,GAAiBxC,MAAjB",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "sourcesContent": [
        "const express = require('express');\nconst mongoose = require('mongoose');\nconst router = express.Router();\nconst fs = require('fs');\nconst isomorphicfetch = require('isomorphic-fetch');\nconst Dropbox = require('dropbox').Dropbox;\nconst dropboxV2Api = require('dropbox-v2-api');\n\nrouter.post('/', (req, res, next)=>{\n    const dbx = new Dropbox({ accessToken: \"jKuLkh-knBAAAAAAAAAADJDRC9nnNGfeagiXTj0T9DfeQXdwI84tGfI_NjaRZ4-z\" });\n    dbx.usersGetCurrentAccount()\n    .then(function(response) {\n        console.log(response);\n    })\n    .catch(function(error) {\n        console.error(error);\n    });\n    dbx.filesListFolder({path: ''})\n    .then(function(response) {\n        res.send(response.entries);\n    })\n    .catch(function(error) {\n        console.log(error);\n    });\n})\n\nrouter.post('/upload', (req, res)=>{\n    const pathdb = \"/\" + req.body.filename;\n    const dropbox = dropboxV2Api.authenticate({\n        token: 'jKuLkh-knBAAAAAAAAAADJDRC9nnNGfeagiXTj0T9DfeQXdwI84tGfI_NjaRZ4-z'\n    });\n\n    const uploadStream = dropbox({\n        resource: 'files/upload',\n        parameters: {\n            path: pathdb\n        }\n    }, (err, result) => {\n        if(err){\n            res.status(500).json(err);\n        }\n        else{\n            res.status(200).json(result);\n        }\n    });\n    fs.createReadStream(req.body.destpath).pipe(uploadStream);\n});\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1555921491106
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/models/gdrive.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/models/gdrive.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/models/gdrive.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/models/gdrive.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/models",
        "sourceFileName": "gdrive.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\ngdriveschema = new Schema({\n  user: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'users',\n    required: true\n  },\n  token: {\n    type: String,\n    required: true\n  }\n});\nmodule.exports = mongoose.model(\"gdrive\", gdriveschema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdkcml2ZS5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJTY2hlbWEiLCJnZHJpdmVzY2hlbWEiLCJ1c2VyIiwidHlwZSIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJyZXF1aXJlZCIsInRva2VuIiwiU3RyaW5nIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF4QjtBQUVBQyxZQUFZLEdBQUcsSUFBSUQsTUFBSixDQUFXO0FBQ3RCRSxFQUFBQSxJQUFJLEVBQUU7QUFBQ0MsSUFBQUEsSUFBSSxFQUFFTCxRQUFRLENBQUNFLE1BQVQsQ0FBZ0JJLEtBQWhCLENBQXNCQyxRQUE3QjtBQUF1Q0MsSUFBQUEsR0FBRyxFQUFFLE9BQTVDO0FBQXFEQyxJQUFBQSxRQUFRLEVBQUU7QUFBL0QsR0FEZ0I7QUFFdEJDLEVBQUFBLEtBQUssRUFBRTtBQUFDTCxJQUFBQSxJQUFJLEVBQUVNLE1BQVA7QUFBZUYsSUFBQUEsUUFBUSxFQUFFO0FBQXpCO0FBRmUsQ0FBWCxDQUFmO0FBS0FHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmIsUUFBUSxDQUFDYyxLQUFULENBQWUsUUFBZixFQUF5QlgsWUFBekIsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYW5tb2xtaWRkaGEvUHJvamVjdHMvY29yZXNoYXJlL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcbmNvbnN0IFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcblxuZ2RyaXZlc2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gICAgdXNlcjoge3R5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCwgcmVmOiAndXNlcnMnLCByZXF1aXJlZDogdHJ1ZX0sXG4gICAgdG9rZW46IHt0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlfVxufSlcblxubW9kdWxlLmV4cG9ydHMgPSBtb25nb29zZS5tb2RlbChcImdkcml2ZVwiLCBnZHJpdmVzY2hlbWEpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "gdrive.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "gdriveschema",
        "user",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "required",
        "token",
        "String",
        "module",
        "exports",
        "model"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEAC,YAAY,GAAG,IAAID,MAAJ,CAAW;AACtBE,EAAAA,IAAI,EAAE;AAACC,IAAAA,IAAI,EAAEL,QAAQ,CAACE,MAAT,CAAgBI,KAAhB,CAAsBC,QAA7B;AAAuCC,IAAAA,GAAG,EAAE,OAA5C;AAAqDC,IAAAA,QAAQ,EAAE;AAA/D,GADgB;AAEtBC,EAAAA,KAAK,EAAE;AAACL,IAAAA,IAAI,EAAEM,MAAP;AAAeF,IAAAA,QAAQ,EAAE;AAAzB;AAFe,CAAX,CAAf;AAKAG,MAAM,CAACC,OAAP,GAAiBb,QAAQ,CAACc,KAAT,CAAe,QAAf,EAAyBX,YAAzB,CAAjB",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/models",
      "sourcesContent": [
        "const mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\n\ngdriveschema = new Schema({\n    user: {type: mongoose.Schema.Types.ObjectId, ref: 'users', required: true},\n    token: {type: String, required: true}\n})\n\nmodule.exports = mongoose.model(\"gdrive\", gdriveschema);"
      ]
    },
    "sourceType": "module",
    "mtime": 1555524345807
  }
}