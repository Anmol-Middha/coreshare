{
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/bin\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/bin/www.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/bin",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/bin/www.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/bin/www.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/bin/www.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/bin",
        "sourceFileName": "www.js"
      }
    },
    "ast": null,
    "code": "const app = require('./../server/server.js');\n\napp.listen('8080', err => {\n  if (err) throw err;\n  console.log(\"running on port 8080\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy5qcyJdLCJuYW1lcyI6WyJhcHAiLCJyZXF1aXJlIiwibGlzdGVuIiwiZXJyIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsdUJBQUQsQ0FBbkI7O0FBRUFELEdBQUcsQ0FBQ0UsTUFBSixDQUFXLE1BQVgsRUFBb0JDLEdBQUQsSUFBTztBQUN0QixNQUFHQSxHQUFILEVBQVEsTUFBTUEsR0FBTjtBQUNSQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxzQkFBWjtBQUNILENBSEQiLCJzb3VyY2VSb290IjoiL2hvbWUvYW5tb2xtaWRkaGEvUHJvamVjdHMvY29yZXNoYXJlL2JpbiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFwcCA9IHJlcXVpcmUoJy4vLi4vc2VydmVyL3NlcnZlci5qcycpXG5cbmFwcC5saXN0ZW4oJzgwODAnLCAoZXJyKT0+e1xuICAgIGlmKGVycikgdGhyb3cgZXJyO1xuICAgIGNvbnNvbGUubG9nKFwicnVubmluZyBvbiBwb3J0IDgwODBcIik7XG59KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "www.js"
      ],
      "names": [
        "app",
        "require",
        "listen",
        "err",
        "console",
        "log"
      ],
      "mappings": "AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AAEAD,GAAG,CAACE,MAAJ,CAAW,MAAX,EAAoBC,GAAD,IAAO;AACtB,MAAGA,GAAH,EAAQ,MAAMA,GAAN;AACRC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH,CAHD",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/bin",
      "sourcesContent": [
        "const app = require('./../server/server.js')\n\napp.listen('8080', (err)=>{\n    if(err) throw err;\n    console.log(\"running on port 8080\");\n});"
      ]
    },
    "sourceType": "module",
    "mtime": 1552822985522
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst bodyParser = require('body-parser');\n\nconst path = require('path');\n\nconst mongoose = require('mongoose');\n\nconst morgan = require('morgan');\n\nconst fs = require('fs');\n\nconst gridfs = require('gridfs-stream');\n\nmongoose.connect(process.env.MONGO_URL, {\n  useNewUrlParser: true\n});\nmongoose.Promise = global.Promise;\nconst app = express();\ngridfs.mongo = mongoose.mongo;\nlet conn = mongoose.connection;\nconn.on('error', console.error.bind(console, 'connection error:'));\napp.set('view engine', 'ejs');\napp.set('views', path.join(__dirname, '../client'));\napp.use(express.static(path.join(__dirname, '../client')));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(morgan('dev'));\n\nconst gdriveRoute = require('./api/routes/gdrive.js');\n\nconst userRoute = require('./api/routes/user.js');\n\nconst checkAuth = require('./api/middleware/check-auth.js');\n\nconst notificationRoute = require('./api/routes/notifications.js');\n\napp.get('/*', function (req, res) {\n  res.render('index');\n});\napp.use('/gdrive', checkAuth, gdriveRoute);\napp.use('/user', userRoute);\napp.use('/notifications', checkAuth, notificationRoute);\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImJvZHlQYXJzZXIiLCJwYXRoIiwibW9uZ29vc2UiLCJtb3JnYW4iLCJmcyIsImdyaWRmcyIsImNvbm5lY3QiLCJwcm9jZXNzIiwiZW52IiwiTU9OR09fVVJMIiwidXNlTmV3VXJsUGFyc2VyIiwiUHJvbWlzZSIsImdsb2JhbCIsImFwcCIsIm1vbmdvIiwiY29ubiIsImNvbm5lY3Rpb24iLCJvbiIsImNvbnNvbGUiLCJlcnJvciIsImJpbmQiLCJzZXQiLCJqb2luIiwiX19kaXJuYW1lIiwidXNlIiwic3RhdGljIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImdkcml2ZVJvdXRlIiwidXNlclJvdXRlIiwiY2hlY2tBdXRoIiwibm90aWZpY2F0aW9uUm91dGUiLCJnZXQiLCJyZXEiLCJyZXMiLCJyZW5kZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLGFBQUQsQ0FBMUI7O0FBQ0EsTUFBTUUsSUFBSSxHQUFHRixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxNQUFNRyxRQUFRLEdBQUdILE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBLE1BQU1JLE1BQU0sR0FBR0osT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsTUFBTUssRUFBRSxHQUFHTCxPQUFPLENBQUMsSUFBRCxDQUFsQjs7QUFDQSxNQUFNTSxNQUFNLEdBQUdOLE9BQU8sQ0FBQyxlQUFELENBQXRCOztBQUVBRyxRQUFRLENBQUNJLE9BQVQsQ0FBaUJDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxTQUE3QixFQUF3QztBQUFDQyxFQUFBQSxlQUFlLEVBQUU7QUFBbEIsQ0FBeEM7QUFDQVIsUUFBUSxDQUFDUyxPQUFULEdBQW1CQyxNQUFNLENBQUNELE9BQTFCO0FBQ0EsTUFBTUUsR0FBRyxHQUFHZixPQUFPLEVBQW5CO0FBQ0FPLE1BQU0sQ0FBQ1MsS0FBUCxHQUFlWixRQUFRLENBQUNZLEtBQXhCO0FBQ0EsSUFBSUMsSUFBSSxHQUFHYixRQUFRLENBQUNjLFVBQXBCO0FBQ0FELElBQUksQ0FBQ0UsRUFBTCxDQUFRLE9BQVIsRUFBaUJDLE9BQU8sQ0FBQ0MsS0FBUixDQUFjQyxJQUFkLENBQW1CRixPQUFuQixFQUE0QixtQkFBNUIsQ0FBakI7QUFHQUwsR0FBRyxDQUFDUSxHQUFKLENBQVEsYUFBUixFQUF1QixLQUF2QjtBQUNBUixHQUFHLENBQUNRLEdBQUosQ0FBUSxPQUFSLEVBQWlCcEIsSUFBSSxDQUFDcUIsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLFdBQXJCLENBQWpCO0FBQ0FWLEdBQUcsQ0FBQ1csR0FBSixDQUFRMUIsT0FBTyxDQUFDMkIsTUFBUixDQUFleEIsSUFBSSxDQUFDcUIsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLFdBQXJCLENBQWYsQ0FBUjtBQUNBVixHQUFHLENBQUNXLEdBQUosQ0FBUXhCLFVBQVUsQ0FBQzBCLElBQVgsRUFBUjtBQUNBYixHQUFHLENBQUNXLEdBQUosQ0FBUXhCLFVBQVUsQ0FBQzJCLFVBQVgsQ0FBc0I7QUFBQ0MsRUFBQUEsUUFBUSxFQUFFO0FBQVgsQ0FBdEIsQ0FBUjtBQUNBZixHQUFHLENBQUNXLEdBQUosQ0FBUXJCLE1BQU0sQ0FBQyxLQUFELENBQWQ7O0FBSUEsTUFBTTBCLFdBQVcsR0FBRzlCLE9BQU8sQ0FBQyx3QkFBRCxDQUEzQjs7QUFDQSxNQUFNK0IsU0FBUyxHQUFHL0IsT0FBTyxDQUFDLHNCQUFELENBQXpCOztBQUNBLE1BQU1nQyxTQUFTLEdBQUdoQyxPQUFPLENBQUMsZ0NBQUQsQ0FBekI7O0FBQ0EsTUFBTWlDLGlCQUFpQixHQUFHakMsT0FBTyxDQUFDLCtCQUFELENBQWpDOztBQUVBYyxHQUFHLENBQUNvQixHQUFKLENBQVEsSUFBUixFQUFjLFVBQVNDLEdBQVQsRUFBY0MsR0FBZCxFQUFrQjtBQUM1QkEsRUFBQUEsR0FBRyxDQUFDQyxNQUFKLENBQVcsT0FBWDtBQUNILENBRkQ7QUFJQXZCLEdBQUcsQ0FBQ1csR0FBSixDQUFRLFNBQVIsRUFBbUJPLFNBQW5CLEVBQThCRixXQUE5QjtBQUNBaEIsR0FBRyxDQUFDVyxHQUFKLENBQVEsT0FBUixFQUFpQk0sU0FBakI7QUFDQWpCLEdBQUcsQ0FBQ1csR0FBSixDQUFRLGdCQUFSLEVBQTBCTyxTQUExQixFQUFxQ0MsaUJBQXJDO0FBRUFLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnpCLEdBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FubW9sbWlkZGhhL1Byb2plY3RzL2NvcmVzaGFyZS9zZXJ2ZXIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xuY29uc3QgbW9yZ2FuID0gcmVxdWlyZSgnbW9yZ2FuJyk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCBncmlkZnMgPSByZXF1aXJlKCdncmlkZnMtc3RyZWFtJyk7XG5cbm1vbmdvb3NlLmNvbm5lY3QocHJvY2Vzcy5lbnYuTU9OR09fVVJMLCB7dXNlTmV3VXJsUGFyc2VyOiB0cnVlfSk7XG5tb25nb29zZS5Qcm9taXNlID0gZ2xvYmFsLlByb21pc2U7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5ncmlkZnMubW9uZ28gPSBtb25nb29zZS5tb25nbztcbmxldCBjb25uID0gbW9uZ29vc2UuY29ubmVjdGlvbjtcbmNvbm4ub24oJ2Vycm9yJywgY29uc29sZS5lcnJvci5iaW5kKGNvbnNvbGUsICdjb25uZWN0aW9uIGVycm9yOicpKTtcbiBcblxuYXBwLnNldCgndmlldyBlbmdpbmUnLCAnZWpzJyk7XG5hcHAuc2V0KCd2aWV3cycsIHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi9jbGllbnQnKSk7XG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi9jbGllbnQnKSkpO1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7ZXh0ZW5kZWQ6IGZhbHNlfSkpO1xuYXBwLnVzZShtb3JnYW4oJ2RldicpKTtcblxuXG5cbmNvbnN0IGdkcml2ZVJvdXRlID0gcmVxdWlyZSgnLi9hcGkvcm91dGVzL2dkcml2ZS5qcycpO1xuY29uc3QgdXNlclJvdXRlID0gcmVxdWlyZSgnLi9hcGkvcm91dGVzL3VzZXIuanMnKTtcbmNvbnN0IGNoZWNrQXV0aCA9IHJlcXVpcmUoJy4vYXBpL21pZGRsZXdhcmUvY2hlY2stYXV0aC5qcycpO1xuY29uc3Qgbm90aWZpY2F0aW9uUm91dGUgPSByZXF1aXJlKCcuL2FwaS9yb3V0ZXMvbm90aWZpY2F0aW9ucy5qcycpO1xuXG5hcHAuZ2V0KCcvKicsIGZ1bmN0aW9uKHJlcSwgcmVzKXtcbiAgICByZXMucmVuZGVyKCdpbmRleCcpO1xufSlcblxuYXBwLnVzZSgnL2dkcml2ZScsIGNoZWNrQXV0aCwgZ2RyaXZlUm91dGUpO1xuYXBwLnVzZSgnL3VzZXInLCB1c2VyUm91dGUpO1xuYXBwLnVzZSgnL25vdGlmaWNhdGlvbnMnLCBjaGVja0F1dGgsIG5vdGlmaWNhdGlvblJvdXRlKTtcblxubW9kdWxlLmV4cG9ydHMgPSBhcHA7Il19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "bodyParser",
        "path",
        "mongoose",
        "morgan",
        "fs",
        "gridfs",
        "connect",
        "process",
        "env",
        "MONGO_URL",
        "useNewUrlParser",
        "Promise",
        "global",
        "app",
        "mongo",
        "conn",
        "connection",
        "on",
        "console",
        "error",
        "bind",
        "set",
        "join",
        "__dirname",
        "use",
        "static",
        "json",
        "urlencoded",
        "extended",
        "gdriveRoute",
        "userRoute",
        "checkAuth",
        "notificationRoute",
        "get",
        "req",
        "res",
        "render",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMI,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMK,EAAE,GAAGL,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMM,MAAM,GAAGN,OAAO,CAAC,eAAD,CAAtB;;AAEAG,QAAQ,CAACI,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAA7B,EAAwC;AAACC,EAAAA,eAAe,EAAE;AAAlB,CAAxC;AACAR,QAAQ,CAACS,OAAT,GAAmBC,MAAM,CAACD,OAA1B;AACA,MAAME,GAAG,GAAGf,OAAO,EAAnB;AACAO,MAAM,CAACS,KAAP,GAAeZ,QAAQ,CAACY,KAAxB;AACA,IAAIC,IAAI,GAAGb,QAAQ,CAACc,UAApB;AACAD,IAAI,CAACE,EAAL,CAAQ,OAAR,EAAiBC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,mBAA5B,CAAjB;AAGAL,GAAG,CAACQ,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAR,GAAG,CAACQ,GAAJ,CAAQ,OAAR,EAAiBpB,IAAI,CAACqB,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAjB;AACAV,GAAG,CAACW,GAAJ,CAAQ1B,OAAO,CAAC2B,MAAR,CAAexB,IAAI,CAACqB,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAR;AACAV,GAAG,CAACW,GAAJ,CAAQxB,UAAU,CAAC0B,IAAX,EAAR;AACAb,GAAG,CAACW,GAAJ,CAAQxB,UAAU,CAAC2B,UAAX,CAAsB;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAAtB,CAAR;AACAf,GAAG,CAACW,GAAJ,CAAQrB,MAAM,CAAC,KAAD,CAAd;;AAIA,MAAM0B,WAAW,GAAG9B,OAAO,CAAC,wBAAD,CAA3B;;AACA,MAAM+B,SAAS,GAAG/B,OAAO,CAAC,sBAAD,CAAzB;;AACA,MAAMgC,SAAS,GAAGhC,OAAO,CAAC,gCAAD,CAAzB;;AACA,MAAMiC,iBAAiB,GAAGjC,OAAO,CAAC,+BAAD,CAAjC;;AAEAc,GAAG,CAACoB,GAAJ,CAAQ,IAAR,EAAc,UAASC,GAAT,EAAcC,GAAd,EAAkB;AAC5BA,EAAAA,GAAG,CAACC,MAAJ,CAAW,OAAX;AACH,CAFD;AAIAvB,GAAG,CAACW,GAAJ,CAAQ,SAAR,EAAmBO,SAAnB,EAA8BF,WAA9B;AACAhB,GAAG,CAACW,GAAJ,CAAQ,OAAR,EAAiBM,SAAjB;AACAjB,GAAG,CAACW,GAAJ,CAAQ,gBAAR,EAA0BO,SAA1B,EAAqCC,iBAArC;AAEAK,MAAM,CAACC,OAAP,GAAiBzB,GAAjB",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server",
      "sourcesContent": [
        "const express = require('express');\nconst bodyParser = require('body-parser');\nconst path = require('path');\nconst mongoose = require('mongoose');\nconst morgan = require('morgan');\nconst fs = require('fs');\nconst gridfs = require('gridfs-stream');\n\nmongoose.connect(process.env.MONGO_URL, {useNewUrlParser: true});\nmongoose.Promise = global.Promise;\nconst app = express();\ngridfs.mongo = mongoose.mongo;\nlet conn = mongoose.connection;\nconn.on('error', console.error.bind(console, 'connection error:'));\n \n\napp.set('view engine', 'ejs');\napp.set('views', path.join(__dirname, '../client'));\napp.use(express.static(path.join(__dirname, '../client')));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(morgan('dev'));\n\n\n\nconst gdriveRoute = require('./api/routes/gdrive.js');\nconst userRoute = require('./api/routes/user.js');\nconst checkAuth = require('./api/middleware/check-auth.js');\nconst notificationRoute = require('./api/routes/notifications.js');\n\napp.get('/*', function(req, res){\n    res.render('index');\n})\n\napp.use('/gdrive', checkAuth, gdriveRoute);\napp.use('/user', userRoute);\napp.use('/notifications', checkAuth, notificationRoute);\n\nmodule.exports = app;"
      ]
    },
    "sourceType": "module",
    "mtime": 1553176732523
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes/gdrive.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/gdrive.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/routes/gdrive.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/gdrive.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
        "sourceFileName": "gdrive.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst multer = require('multer');\n\nconst mongoose = require('mongoose');\n\nconst gridfs = require('gridfs-stream');\n\nconst {\n  google\n} = require('googleapis');\n\nconst upload = multer({\n  dest: './server/uploads/gdrive/'\n});\n\nconst User = require('../../../models/user.js');\n\nconst Authorise = require('../middleware/gauthorise.js');\n\nconst Encrypt = require('../middleware/encrypt.js');\n\nrouter.post('/', Authorise, (req, res) => {\n  const auth = req.auth;\n  const drive = google.drive({\n    version: 'v3',\n    auth\n  });\n  drive.files.list({\n    q: \"trashed=false\",\n    fields: 'nextPageToken, files(id, name)',\n    trashed: false\n  }, (err, rslt) => {\n    if (err) {\n      res.status(500).json(err);\n    } else {\n      const files = rslt.data.files;\n      res.status(200).json(files);\n    }\n  });\n});\nrouter.post('/upload', Authorise, upload.single('filename'), Encrypt, (req, res) => {\n  const auth = req.auth;\n  const drive = google.drive({\n    version: 'v3',\n    auth\n  });\n  let fileMetadata = {\n    name: req.file.originalname.split(\".\")[0]\n  };\n  let media = {\n    body: fs.createReadStream(path.join(__dirname, '../../../', req.filepath))\n  };\n  drive.files.create({\n    resource: fileMetadata,\n    media,\n    fields: 'id, name'\n  }, function (err, file) {\n    if (err) {\n      res.status(500).json(err);\n    } else {\n      res.status(200).json({\n        filename: file.data.name,\n        fileid: file.data.id\n      });\n    }\n  });\n});\nrouter.post('/share/:fileId', Authorise, (req, res) => {\n  const sid = req.body.senderId;\n  const filename = req.body.filename;\n  User.find({\n    emailId: req.body.receiverEmail\n  }, {\n    email: 0,\n    password: 0\n  }).exec().then(user => {\n    const auth = req.auth;\n    const fileId = req.params.fileId;\n    const dest = fs.createWriteStream('./server/tempshare/gdrive/input.txt');\n    const drive = google.drive({\n      version: 'v3',\n      auth\n    });\n    drive.files.get({\n      fileId: fileId,\n      alt: 'media',\n      fields: '*'\n    }, {\n      responseType: 'stream'\n    }, function (err, rslt) {\n      rslt.data.on('end', () => {\n        gridfs.mongo = mongoose.mongo;\n        let conn = mongoose.connection;\n        let gfs = gridfs(conn.db);\n        let writestream = gfs.createWriteStream({\n          filename,\n          metadata: {\n            receiver: user[0]._id.toString(),\n            sender: sid\n          }\n        });\n        fs.createReadStream('/home/anmolmiddha/Projects/coreshare/server/tempshare/gdrive/input.txt').pipe(writestream);\n        writestream.on('close', function (file) {\n          res.send('file created:' + file.filename);\n        });\n      }).on('error', err => {\n        res.status(500).json(err);\n      }).pipe(dest);\n    });\n  }).catch(err => {\n    res.status(500).json(err);\n  });\n});\nrouter.post('/accept', Authorise, upload.single('sharedfile'), (req, res) => {\n  const auth = req.auth;\n  const document = req.file;\n  const drive = google.drive({\n    version: 'v3',\n    auth\n  });\n  let fileMetadata = {\n    'name': document.originalname\n  };\n  let media = {\n    mimeType: document.mimetype,\n    body: fs.createReadStream(document.path)\n  };\n  drive.files.create({\n    resource: fileMetadata,\n    media,\n    fields: 'id'\n  }, function (err, file) {\n    if (err) {\n      res.status(500).json(err);\n    } else {\n      res.status(200).json(`file with id ${file.data.id} successfully uploaded on google drive`);\n    }\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gdrive.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "fs",
        "path",
        "multer",
        "mongoose",
        "gridfs",
        "google",
        "upload",
        "dest",
        "User",
        "Authorise",
        "Encrypt",
        "post",
        "req",
        "res",
        "auth",
        "drive",
        "version",
        "files",
        "list",
        "q",
        "fields",
        "trashed",
        "err",
        "rslt",
        "status",
        "json",
        "data",
        "single",
        "fileMetadata",
        "name",
        "file",
        "originalname",
        "split",
        "media",
        "body",
        "createReadStream",
        "join",
        "__dirname",
        "filepath",
        "create",
        "resource",
        "filename",
        "fileid",
        "id",
        "sid",
        "senderId",
        "find",
        "emailId",
        "receiverEmail",
        "email",
        "password",
        "exec",
        "then",
        "user",
        "fileId",
        "params",
        "createWriteStream",
        "get",
        "alt",
        "responseType",
        "on",
        "mongo",
        "conn",
        "connection",
        "gfs",
        "db",
        "writestream",
        "metadata",
        "receiver",
        "_id",
        "toString",
        "sender",
        "pipe",
        "send",
        "catch",
        "document",
        "mimeType",
        "mimetype",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\nconst fs = require('fs');\nconst path = require('path');\nconst multer = require('multer');\nconst mongoose = require('mongoose');\nconst gridfs = require('gridfs-stream');\nconst {google} = require('googleapis');\nconst upload = multer({dest: './server/uploads/gdrive/'});\n\nconst User = require('../../../models/user.js');\nconst Authorise = require('../middleware/gauthorise.js');\nconst Encrypt = require('../middleware/encrypt.js');\n\nrouter.post('/', Authorise, (req, res) => {\n    const auth = req.auth;\n    const drive = google.drive({version: 'v3', auth});\n    drive.files.list({\n        q: \"trashed=false\",\n        fields: 'nextPageToken, files(id, name)',\n        trashed: false\n    }, (err, rslt) => {\n        if(err){\n            res.status(500).json(err);\n        }\n        else{\n            const files = rslt.data.files;\n            res.status(200).json(files);\n        }\n    });\n});\n\nrouter.post('/upload', Authorise, upload.single('filename'), Encrypt, (req, res)=>{\n    const auth = req.auth;\n    const drive = google.drive({version: 'v3', auth});\n    let fileMetadata = {name: req.file.originalname.split(\".\")[0]};\n    let media = {\n        body: fs.createReadStream(path.join(__dirname, '../../../', req.filepath))\n    };\n    drive.files.create({\n        resource: fileMetadata,\n        media,\n        fields: 'id, name'       \n    }, function(err, file){\n        if(err){\n            res.status(500).json(err);\n        }\n        else{\n            res.status(200).json({filename: file.data.name, fileid: file.data.id});\n        }\n    })\n});\n\nrouter.post('/share/:fileId', Authorise, (req, res) =>{\n    const sid = req.body.senderId;\n    const filename = req.body.filename;\n    User.find({emailId: req.body.receiverEmail},{email: 0, password: 0})\n    .exec()\n    .then(user =>{\n        const auth = req.auth;\n        const fileId = req.params.fileId;\n        const dest = fs.createWriteStream('./server/tempshare/gdrive/input.txt');\n        const drive = google.drive({version: 'v3', auth});\n        drive.files.get({\n            fileId: fileId,\n            alt: 'media',\n            fields: '*'\n        }, {responseType: 'stream'}, function(err, rslt){\n            rslt.data.on('end', ()=>{\n                gridfs.mongo = mongoose.mongo;\n                let conn = mongoose.connection;\n                    let gfs = gridfs(conn.db);\n                    let writestream = gfs.createWriteStream({filename, metadata: {receiver: (user[0]._id).toString(), sender: sid}});\n                    fs.createReadStream('/home/anmolmiddha/Projects/coreshare/server/tempshare/gdrive/input.txt').pipe(writestream);\n                    writestream.on('close', function(file){\n                        res.send('file created:' + file.filename);\n                    });\n            })\n            .on('error', err=>{\n                res.status(500).json(err);\n            })\n            .pipe(dest);\n        });\n    })\n    .catch(err =>{\n        res.status(500).json(err);\n    }) \n});\n\nrouter.post('/accept', Authorise, upload.single('sharedfile'), (req, res)=>{\n    const auth = req.auth;\n    const document = req.file;\n    const drive = google.drive({version: 'v3', auth});\n    let fileMetadata = {'name': document.originalname};\n    let media = {\n        mimeType : document.mimetype,\n        body: fs.createReadStream(document.path)\n    };\n    drive.files.create({\n        resource: fileMetadata,\n        media,\n        fields: 'id'       \n    }, function(err, file){\n        if(err){\n            res.status(500).json(err);\n        }\n        else{\n            res.status(200).json(`file with id ${file.data.id} successfully uploaded on google drive`);\n        }\n    })\n});\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1553178910203
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/models/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/models/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/models/user.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/models/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nuserschema = new Schema({\n  _id: mongoose.Schema.Types.ObjectId,\n  emailId: {\n    type: String,\n    required: true,\n    match: [/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/],\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true\n  }\n});\nmodule.exports = mongoose.model(\"users\", userschema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwidXNlcnNjaGVtYSIsIl9pZCIsIlR5cGVzIiwiT2JqZWN0SWQiLCJlbWFpbElkIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwibWF0Y2giLCJ1bmlxdWUiLCJwYXNzd29yZCIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0UsTUFBeEI7QUFFQUMsVUFBVSxHQUFHLElBQUlELE1BQUosQ0FBVztBQUNwQkUsRUFBQUEsR0FBRyxFQUFFSixRQUFRLENBQUNFLE1BQVQsQ0FBZ0JHLEtBQWhCLENBQXNCQyxRQURQO0FBRXBCQyxFQUFBQSxPQUFPLEVBQUU7QUFBQ0MsSUFBQUEsSUFBSSxFQUFFQyxNQUFQO0FBQWVDLElBQUFBLFFBQVEsRUFBRSxJQUF6QjtBQUErQkMsSUFBQUEsS0FBSyxFQUFDLENBQUMseUpBQUQsQ0FBckM7QUFBa01DLElBQUFBLE1BQU0sRUFBRTtBQUExTSxHQUZXO0FBR3BCQyxFQUFBQSxRQUFRLEVBQUU7QUFBQ0wsSUFBQUEsSUFBSSxFQUFFQyxNQUFQO0FBQWVDLElBQUFBLFFBQVEsRUFBRTtBQUF6QjtBQUhVLENBQVgsQ0FBYjtBQU1BSSxNQUFNLENBQUNDLE9BQVAsR0FBaUJmLFFBQVEsQ0FBQ2dCLEtBQVQsQ0FBZSxPQUFmLEVBQXdCYixVQUF4QixDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9hbm1vbG1pZGRoYS9Qcm9qZWN0cy9jb3Jlc2hhcmUvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xuY29uc3QgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hO1xuXG51c2Vyc2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gICAgX2lkOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgZW1haWxJZDoge3R5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUsIG1hdGNoOlsvXigoW148PigpXFxbXFxdXFxcXC4sOzpcXHNAXCJdKyhcXC5bXjw+KClcXFtcXF1cXFxcLiw7Olxcc0BcIl0rKSopfChcIi4rXCIpKUAoKFxcW1swLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcLlswLTldezEsM31cXF0pfCgoW2EtekEtWlxcLTAtOV0rXFwuKStbYS16QS1aXXsyLH0pKSQvXSwgdW5pcXVlOiB0cnVlfSxcbiAgICBwYXNzd29yZDoge3R5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWV9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBtb25nb29zZS5tb2RlbChcInVzZXJzXCIsIHVzZXJzY2hlbWEpO1xuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "userschema",
        "_id",
        "Types",
        "ObjectId",
        "emailId",
        "type",
        "String",
        "required",
        "match",
        "unique",
        "password",
        "module",
        "exports",
        "model"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEAC,UAAU,GAAG,IAAID,MAAJ,CAAW;AACpBE,EAAAA,GAAG,EAAEJ,QAAQ,CAACE,MAAT,CAAgBG,KAAhB,CAAsBC,QADP;AAEpBC,EAAAA,OAAO,EAAE;AAACC,IAAAA,IAAI,EAAEC,MAAP;AAAeC,IAAAA,QAAQ,EAAE,IAAzB;AAA+BC,IAAAA,KAAK,EAAC,CAAC,yJAAD,CAArC;AAAkMC,IAAAA,MAAM,EAAE;AAA1M,GAFW;AAGpBC,EAAAA,QAAQ,EAAE;AAACL,IAAAA,IAAI,EAAEC,MAAP;AAAeC,IAAAA,QAAQ,EAAE;AAAzB;AAHU,CAAX,CAAb;AAMAI,MAAM,CAACC,OAAP,GAAiBf,QAAQ,CAACgB,KAAT,CAAe,OAAf,EAAwBb,UAAxB,CAAjB",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/models",
      "sourcesContent": [
        "const mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\n\nuserschema = new Schema({\n    _id: mongoose.Schema.Types.ObjectId,\n    emailId: {type: String, required: true, match:[/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/], unique: true},\n    password: {type: String, required: true}\n});\n\nmodule.exports = mongoose.model(\"users\", userschema);\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1552823080654
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware/gauthorise.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/gauthorise.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/gauthorise.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/gauthorise.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
        "sourceFileName": "gauthorise.js"
      }
    },
    "ast": null,
    "code": "const fs = require('fs');\n\nconst readline = require('readline');\n\nconst {\n  google\n} = require('googleapis');\n\nconst SCOPES = ['https://www.googleapis.com/auth/drive']; // The file token.json stores the user's access and refresh tokens, and is\n// created automatically when the authorization flow completes for the first\n// time.\n\nconst TOKEN_PATH = './client/token.json';\nconst CREDENTIALS = './server/credentials.json';\n\nmodule.exports = (req, res, next) => {\n  fs.readFile(CREDENTIALS, (err, content) => {\n    if (err) return res.json('Error loading client secret file:' + err); // Authorize a client with credentials, then call the Google Drive API.\n\n    const credentials = JSON.parse(content);\n    const {\n      client_secret,\n      client_id,\n      redirect_uris\n    } = credentials.installed;\n    const oAuth2Client = new google.auth.OAuth2(client_id, client_secret, redirect_uris[0]); // Check if we have previously stored a token.\n\n    fs.readFile(TOKEN_PATH, (err, token) => {\n      if (err) return getAccessToken(oAuth2Client);\n      oAuth2Client.setCredentials(JSON.parse(token));\n      req.auth = oAuth2Client;\n      next();\n    });\n  });\n};\n\nfunction getAccessToken(oAuth2Client) {\n  const authUrl = oAuth2Client.generateAuthUrl({\n    access_type: 'offline',\n    scope: SCOPES\n  });\n  console.log('Authorize this app by visiting this url:', authUrl);\n  const rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n  });\n  rl.question('Enter the code from that page here: ', code => {\n    rl.close();\n    oAuth2Client.getToken(code, (err, token) => {\n      if (err) return console.error('Error retrieving access token', err);\n      oAuth2Client.setCredentials(token); // Store the token to disk for later program executions\n\n      fs.writeFile(TOKEN_PATH, JSON.stringify(token), err => {\n        if (err) console.error(err);\n        console.log('Token stored to', TOKEN_PATH);\n      });\n      req.auth = oAuth2Client;\n      next();\n    });\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhdXRob3Jpc2UuanMiXSwibmFtZXMiOlsiZnMiLCJyZXF1aXJlIiwicmVhZGxpbmUiLCJnb29nbGUiLCJTQ09QRVMiLCJUT0tFTl9QQVRIIiwiQ1JFREVOVElBTFMiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVxIiwicmVzIiwibmV4dCIsInJlYWRGaWxlIiwiZXJyIiwiY29udGVudCIsImpzb24iLCJjcmVkZW50aWFscyIsIkpTT04iLCJwYXJzZSIsImNsaWVudF9zZWNyZXQiLCJjbGllbnRfaWQiLCJyZWRpcmVjdF91cmlzIiwiaW5zdGFsbGVkIiwib0F1dGgyQ2xpZW50IiwiYXV0aCIsIk9BdXRoMiIsInRva2VuIiwiZ2V0QWNjZXNzVG9rZW4iLCJzZXRDcmVkZW50aWFscyIsImF1dGhVcmwiLCJnZW5lcmF0ZUF1dGhVcmwiLCJhY2Nlc3NfdHlwZSIsInNjb3BlIiwiY29uc29sZSIsImxvZyIsInJsIiwiY3JlYXRlSW50ZXJmYWNlIiwiaW5wdXQiLCJwcm9jZXNzIiwic3RkaW4iLCJvdXRwdXQiLCJzdGRvdXQiLCJxdWVzdGlvbiIsImNvZGUiLCJjbG9zZSIsImdldFRva2VuIiwiZXJyb3IiLCJ3cml0ZUZpbGUiLCJzdHJpbmdpZnkiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEVBQUUsR0FBR0MsT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBQ0EsTUFBTUMsUUFBUSxHQUFHRCxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFDQSxNQUFNO0FBQUNFLEVBQUFBO0FBQUQsSUFBV0YsT0FBTyxDQUFDLFlBQUQsQ0FBeEI7O0FBRUEsTUFBTUcsTUFBTSxHQUFHLENBQUMsdUNBQUQsQ0FBZixDLENBQ0E7QUFDQTtBQUNBOztBQUNBLE1BQU1DLFVBQVUsR0FBRyxxQkFBbkI7QUFDQSxNQUFNQyxXQUFXLEdBQUcsMkJBQXBCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDakNYLEVBQUFBLEVBQUUsQ0FBQ1ksUUFBSCxDQUFZTixXQUFaLEVBQXlCLENBQUNPLEdBQUQsRUFBTUMsT0FBTixLQUFrQjtBQUN2QyxRQUFJRCxHQUFKLEVBQVMsT0FBT0gsR0FBRyxDQUFDSyxJQUFKLENBQVMsc0NBQXNDRixHQUEvQyxDQUFQLENBRDhCLENBRXZDOztBQUNJLFVBQU1HLFdBQVcsR0FBR0MsSUFBSSxDQUFDQyxLQUFMLENBQVdKLE9BQVgsQ0FBcEI7QUFDQSxVQUFNO0FBQUNLLE1BQUFBLGFBQUQ7QUFBZ0JDLE1BQUFBLFNBQWhCO0FBQTJCQyxNQUFBQTtBQUEzQixRQUE0Q0wsV0FBVyxDQUFDTSxTQUE5RDtBQUNBLFVBQU1DLFlBQVksR0FBRyxJQUFJcEIsTUFBTSxDQUFDcUIsSUFBUCxDQUFZQyxNQUFoQixDQUF1QkwsU0FBdkIsRUFBa0NELGFBQWxDLEVBQWlERSxhQUFhLENBQUMsQ0FBRCxDQUE5RCxDQUFyQixDQUxtQyxDQU9uQzs7QUFDQXJCLElBQUFBLEVBQUUsQ0FBQ1ksUUFBSCxDQUFZUCxVQUFaLEVBQXdCLENBQUNRLEdBQUQsRUFBTWEsS0FBTixLQUFnQjtBQUNwQyxVQUFJYixHQUFKLEVBQVMsT0FBT2MsY0FBYyxDQUFDSixZQUFELENBQXJCO0FBQ1RBLE1BQUFBLFlBQVksQ0FBQ0ssY0FBYixDQUE0QlgsSUFBSSxDQUFDQyxLQUFMLENBQVdRLEtBQVgsQ0FBNUI7QUFDQWpCLE1BQUFBLEdBQUcsQ0FBQ2UsSUFBSixHQUFXRCxZQUFYO0FBQ0FaLE1BQUFBLElBQUk7QUFDUCxLQUxEO0FBTVAsR0FkRDtBQWVILENBaEJEOztBQWtCQSxTQUFTZ0IsY0FBVCxDQUF3QkosWUFBeEIsRUFBc0M7QUFDbEMsUUFBTU0sT0FBTyxHQUFHTixZQUFZLENBQUNPLGVBQWIsQ0FBNkI7QUFDM0NDLElBQUFBLFdBQVcsRUFBRSxTQUQ4QjtBQUUzQ0MsSUFBQUEsS0FBSyxFQUFFNUI7QUFGb0MsR0FBN0IsQ0FBaEI7QUFJQTZCLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDBDQUFaLEVBQXdETCxPQUF4RDtBQUNBLFFBQU1NLEVBQUUsR0FBR2pDLFFBQVEsQ0FBQ2tDLGVBQVQsQ0FBeUI7QUFDbENDLElBQUFBLEtBQUssRUFBRUMsT0FBTyxDQUFDQyxLQURtQjtBQUVsQ0MsSUFBQUEsTUFBTSxFQUFFRixPQUFPLENBQUNHO0FBRmtCLEdBQXpCLENBQVg7QUFJQU4sRUFBQUEsRUFBRSxDQUFDTyxRQUFILENBQVksc0NBQVosRUFBcURDLElBQUQsSUFBVTtBQUM1RFIsSUFBQUEsRUFBRSxDQUFDUyxLQUFIO0FBQ0FyQixJQUFBQSxZQUFZLENBQUNzQixRQUFiLENBQXNCRixJQUF0QixFQUE0QixDQUFDOUIsR0FBRCxFQUFNYSxLQUFOLEtBQWdCO0FBQzFDLFVBQUliLEdBQUosRUFBUyxPQUFPb0IsT0FBTyxDQUFDYSxLQUFSLENBQWMsK0JBQWQsRUFBK0NqQyxHQUEvQyxDQUFQO0FBQ1RVLE1BQUFBLFlBQVksQ0FBQ0ssY0FBYixDQUE0QkYsS0FBNUIsRUFGMEMsQ0FHMUM7O0FBQ0ExQixNQUFBQSxFQUFFLENBQUMrQyxTQUFILENBQWExQyxVQUFiLEVBQXlCWSxJQUFJLENBQUMrQixTQUFMLENBQWV0QixLQUFmLENBQXpCLEVBQWlEYixHQUFELElBQVM7QUFDdkQsWUFBSUEsR0FBSixFQUFTb0IsT0FBTyxDQUFDYSxLQUFSLENBQWNqQyxHQUFkO0FBQ1RvQixRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxpQkFBWixFQUErQjdCLFVBQS9CO0FBQ0QsT0FIRDtBQUlBSSxNQUFBQSxHQUFHLENBQUNlLElBQUosR0FBV0QsWUFBWDtBQUNBWixNQUFBQSxJQUFJO0FBQ0wsS0FWRDtBQVdELEdBYkQ7QUFjSCIsInNvdXJjZVJvb3QiOiIvaG9tZS9hbm1vbG1pZGRoYS9Qcm9qZWN0cy9jb3Jlc2hhcmUvc2VydmVyL2FwaS9taWRkbGV3YXJlIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuY29uc3QgcmVhZGxpbmUgPSByZXF1aXJlKCdyZWFkbGluZScpO1xuY29uc3Qge2dvb2dsZX0gPSByZXF1aXJlKCdnb29nbGVhcGlzJyk7XG5cbmNvbnN0IFNDT1BFUyA9IFsnaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9kcml2ZSddO1xuLy8gVGhlIGZpbGUgdG9rZW4uanNvbiBzdG9yZXMgdGhlIHVzZXIncyBhY2Nlc3MgYW5kIHJlZnJlc2ggdG9rZW5zLCBhbmQgaXNcbi8vIGNyZWF0ZWQgYXV0b21hdGljYWxseSB3aGVuIHRoZSBhdXRob3JpemF0aW9uIGZsb3cgY29tcGxldGVzIGZvciB0aGUgZmlyc3Rcbi8vIHRpbWUuXG5jb25zdCBUT0tFTl9QQVRIID0gJy4vY2xpZW50L3Rva2VuLmpzb24nO1xuY29uc3QgQ1JFREVOVElBTFMgPSAnLi9zZXJ2ZXIvY3JlZGVudGlhbHMuanNvbic7XG5cbm1vZHVsZS5leHBvcnRzID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgZnMucmVhZEZpbGUoQ1JFREVOVElBTFMsIChlcnIsIGNvbnRlbnQpID0+IHtcbiAgICAgICAgaWYgKGVycikgcmV0dXJuIHJlcy5qc29uKCdFcnJvciBsb2FkaW5nIGNsaWVudCBzZWNyZXQgZmlsZTonICsgZXJyKTtcbiAgICAgICAgLy8gQXV0aG9yaXplIGEgY2xpZW50IHdpdGggY3JlZGVudGlhbHMsIHRoZW4gY2FsbCB0aGUgR29vZ2xlIERyaXZlIEFQSS5cbiAgICAgICAgICAgIGNvbnN0IGNyZWRlbnRpYWxzID0gSlNPTi5wYXJzZShjb250ZW50KTtcbiAgICAgICAgICAgIGNvbnN0IHtjbGllbnRfc2VjcmV0LCBjbGllbnRfaWQsIHJlZGlyZWN0X3VyaXN9ID0gY3JlZGVudGlhbHMuaW5zdGFsbGVkO1xuICAgICAgICAgICAgY29uc3Qgb0F1dGgyQ2xpZW50ID0gbmV3IGdvb2dsZS5hdXRoLk9BdXRoMihjbGllbnRfaWQsIGNsaWVudF9zZWNyZXQsIHJlZGlyZWN0X3VyaXNbMF0pO1xuICAgICAgXG4gICAgICAgICAgICAvLyBDaGVjayBpZiB3ZSBoYXZlIHByZXZpb3VzbHkgc3RvcmVkIGEgdG9rZW4uXG4gICAgICAgICAgICBmcy5yZWFkRmlsZShUT0tFTl9QQVRILCAoZXJyLCB0b2tlbikgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChlcnIpIHJldHVybiBnZXRBY2Nlc3NUb2tlbihvQXV0aDJDbGllbnQpO1xuICAgICAgICAgICAgICAgIG9BdXRoMkNsaWVudC5zZXRDcmVkZW50aWFscyhKU09OLnBhcnNlKHRva2VuKSk7XG4gICAgICAgICAgICAgICAgcmVxLmF1dGggPSBvQXV0aDJDbGllbnQ7XG4gICAgICAgICAgICAgICAgbmV4dCgpO1xuICAgICAgICAgICAgfSk7XG4gICAgfSk7XG59O1xuXG5mdW5jdGlvbiBnZXRBY2Nlc3NUb2tlbihvQXV0aDJDbGllbnQpIHtcbiAgICBjb25zdCBhdXRoVXJsID0gb0F1dGgyQ2xpZW50LmdlbmVyYXRlQXV0aFVybCh7XG4gICAgICBhY2Nlc3NfdHlwZTogJ29mZmxpbmUnLFxuICAgICAgc2NvcGU6IFNDT1BFUyxcbiAgICB9KTtcbiAgICBjb25zb2xlLmxvZygnQXV0aG9yaXplIHRoaXMgYXBwIGJ5IHZpc2l0aW5nIHRoaXMgdXJsOicsIGF1dGhVcmwpO1xuICAgIGNvbnN0IHJsID0gcmVhZGxpbmUuY3JlYXRlSW50ZXJmYWNlKHtcbiAgICAgIGlucHV0OiBwcm9jZXNzLnN0ZGluLFxuICAgICAgb3V0cHV0OiBwcm9jZXNzLnN0ZG91dCxcbiAgICB9KTtcbiAgICBybC5xdWVzdGlvbignRW50ZXIgdGhlIGNvZGUgZnJvbSB0aGF0IHBhZ2UgaGVyZTogJywgKGNvZGUpID0+IHtcbiAgICAgIHJsLmNsb3NlKCk7XG4gICAgICBvQXV0aDJDbGllbnQuZ2V0VG9rZW4oY29kZSwgKGVyciwgdG9rZW4pID0+IHtcbiAgICAgICAgaWYgKGVycikgcmV0dXJuIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHJldHJpZXZpbmcgYWNjZXNzIHRva2VuJywgZXJyKTtcbiAgICAgICAgb0F1dGgyQ2xpZW50LnNldENyZWRlbnRpYWxzKHRva2VuKTtcbiAgICAgICAgLy8gU3RvcmUgdGhlIHRva2VuIHRvIGRpc2sgZm9yIGxhdGVyIHByb2dyYW0gZXhlY3V0aW9uc1xuICAgICAgICBmcy53cml0ZUZpbGUoVE9LRU5fUEFUSCwgSlNPTi5zdHJpbmdpZnkodG9rZW4pLCAoZXJyKSA9PiB7XG4gICAgICAgICAgaWYgKGVycikgY29uc29sZS5lcnJvcihlcnIpO1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdUb2tlbiBzdG9yZWQgdG8nLCBUT0tFTl9QQVRIKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJlcS5hdXRoID0gb0F1dGgyQ2xpZW50O1xuICAgICAgICBuZXh0KCk7XG4gICAgICB9KTtcbiAgICB9KTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "gauthorise.js"
      ],
      "names": [
        "fs",
        "require",
        "readline",
        "google",
        "SCOPES",
        "TOKEN_PATH",
        "CREDENTIALS",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "readFile",
        "err",
        "content",
        "json",
        "credentials",
        "JSON",
        "parse",
        "client_secret",
        "client_id",
        "redirect_uris",
        "installed",
        "oAuth2Client",
        "auth",
        "OAuth2",
        "token",
        "getAccessToken",
        "setCredentials",
        "authUrl",
        "generateAuthUrl",
        "access_type",
        "scope",
        "console",
        "log",
        "rl",
        "createInterface",
        "input",
        "process",
        "stdin",
        "output",
        "stdout",
        "question",
        "code",
        "close",
        "getToken",
        "error",
        "writeFile",
        "stringify"
      ],
      "mappings": "AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAM;AAACE,EAAAA;AAAD,IAAWF,OAAO,CAAC,YAAD,CAAxB;;AAEA,MAAMG,MAAM,GAAG,CAAC,uCAAD,CAAf,C,CACA;AACA;AACA;;AACA,MAAMC,UAAU,GAAG,qBAAnB;AACA,MAAMC,WAAW,GAAG,2BAApB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACjCX,EAAAA,EAAE,CAACY,QAAH,CAAYN,WAAZ,EAAyB,CAACO,GAAD,EAAMC,OAAN,KAAkB;AACvC,QAAID,GAAJ,EAAS,OAAOH,GAAG,CAACK,IAAJ,CAAS,sCAAsCF,GAA/C,CAAP,CAD8B,CAEvC;;AACI,UAAMG,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAApB;AACA,UAAM;AAACK,MAAAA,aAAD;AAAgBC,MAAAA,SAAhB;AAA2BC,MAAAA;AAA3B,QAA4CL,WAAW,CAACM,SAA9D;AACA,UAAMC,YAAY,GAAG,IAAIpB,MAAM,CAACqB,IAAP,CAAYC,MAAhB,CAAuBL,SAAvB,EAAkCD,aAAlC,EAAiDE,aAAa,CAAC,CAAD,CAA9D,CAArB,CALmC,CAOnC;;AACArB,IAAAA,EAAE,CAACY,QAAH,CAAYP,UAAZ,EAAwB,CAACQ,GAAD,EAAMa,KAAN,KAAgB;AACpC,UAAIb,GAAJ,EAAS,OAAOc,cAAc,CAACJ,YAAD,CAArB;AACTA,MAAAA,YAAY,CAACK,cAAb,CAA4BX,IAAI,CAACC,KAAL,CAAWQ,KAAX,CAA5B;AACAjB,MAAAA,GAAG,CAACe,IAAJ,GAAWD,YAAX;AACAZ,MAAAA,IAAI;AACP,KALD;AAMP,GAdD;AAeH,CAhBD;;AAkBA,SAASgB,cAAT,CAAwBJ,YAAxB,EAAsC;AAClC,QAAMM,OAAO,GAAGN,YAAY,CAACO,eAAb,CAA6B;AAC3CC,IAAAA,WAAW,EAAE,SAD8B;AAE3CC,IAAAA,KAAK,EAAE5B;AAFoC,GAA7B,CAAhB;AAIA6B,EAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDL,OAAxD;AACA,QAAMM,EAAE,GAAGjC,QAAQ,CAACkC,eAAT,CAAyB;AAClCC,IAAAA,KAAK,EAAEC,OAAO,CAACC,KADmB;AAElCC,IAAAA,MAAM,EAAEF,OAAO,CAACG;AAFkB,GAAzB,CAAX;AAIAN,EAAAA,EAAE,CAACO,QAAH,CAAY,sCAAZ,EAAqDC,IAAD,IAAU;AAC5DR,IAAAA,EAAE,CAACS,KAAH;AACArB,IAAAA,YAAY,CAACsB,QAAb,CAAsBF,IAAtB,EAA4B,CAAC9B,GAAD,EAAMa,KAAN,KAAgB;AAC1C,UAAIb,GAAJ,EAAS,OAAOoB,OAAO,CAACa,KAAR,CAAc,+BAAd,EAA+CjC,GAA/C,CAAP;AACTU,MAAAA,YAAY,CAACK,cAAb,CAA4BF,KAA5B,EAF0C,CAG1C;;AACA1B,MAAAA,EAAE,CAAC+C,SAAH,CAAa1C,UAAb,EAAyBY,IAAI,CAAC+B,SAAL,CAAetB,KAAf,CAAzB,EAAiDb,GAAD,IAAS;AACvD,YAAIA,GAAJ,EAASoB,OAAO,CAACa,KAAR,CAAcjC,GAAd;AACToB,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B7B,UAA/B;AACD,OAHD;AAIAI,MAAAA,GAAG,CAACe,IAAJ,GAAWD,YAAX;AACAZ,MAAAA,IAAI;AACL,KAVD;AAWD,GAbD;AAcH",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "sourcesContent": [
        "const fs = require('fs');\nconst readline = require('readline');\nconst {google} = require('googleapis');\n\nconst SCOPES = ['https://www.googleapis.com/auth/drive'];\n// The file token.json stores the user's access and refresh tokens, and is\n// created automatically when the authorization flow completes for the first\n// time.\nconst TOKEN_PATH = './client/token.json';\nconst CREDENTIALS = './server/credentials.json';\n\nmodule.exports = (req, res, next) => {\n    fs.readFile(CREDENTIALS, (err, content) => {\n        if (err) return res.json('Error loading client secret file:' + err);\n        // Authorize a client with credentials, then call the Google Drive API.\n            const credentials = JSON.parse(content);\n            const {client_secret, client_id, redirect_uris} = credentials.installed;\n            const oAuth2Client = new google.auth.OAuth2(client_id, client_secret, redirect_uris[0]);\n      \n            // Check if we have previously stored a token.\n            fs.readFile(TOKEN_PATH, (err, token) => {\n                if (err) return getAccessToken(oAuth2Client);\n                oAuth2Client.setCredentials(JSON.parse(token));\n                req.auth = oAuth2Client;\n                next();\n            });\n    });\n};\n\nfunction getAccessToken(oAuth2Client) {\n    const authUrl = oAuth2Client.generateAuthUrl({\n      access_type: 'offline',\n      scope: SCOPES,\n    });\n    console.log('Authorize this app by visiting this url:', authUrl);\n    const rl = readline.createInterface({\n      input: process.stdin,\n      output: process.stdout,\n    });\n    rl.question('Enter the code from that page here: ', (code) => {\n      rl.close();\n      oAuth2Client.getToken(code, (err, token) => {\n        if (err) return console.error('Error retrieving access token', err);\n        oAuth2Client.setCredentials(token);\n        // Store the token to disk for later program executions\n        fs.writeFile(TOKEN_PATH, JSON.stringify(token), (err) => {\n          if (err) console.error(err);\n          console.log('Token stored to', TOKEN_PATH);\n        });\n        req.auth = oAuth2Client;\n        next();\n      });\n    });\n}\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1552050590157
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware/encrypt.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/encrypt.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/encrypt.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/encrypt.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
        "sourceFileName": "encrypt.js"
      }
    },
    "ast": null,
    "code": "const {\n  PythonShell\n} = require('python-shell');\n\nmodule.exports = function (req, res, next) {\n  try {\n    let myPythonScriptPath = '/home/anmolmiddha/Projects/coreshare/server/api/python/encrypt.py';\n    const pyshell = new PythonShell(myPythonScriptPath);\n    let path = req.file.path;\n    pyshell.send(path);\n    pyshell.on(\"message\", function (data) {});\n    pyshell.end(function (err, rslt) {\n      if (err) {\n        res.status(500).json(err);\n      } else {\n        req.filepath = JSON.stringify(path).split('\"')[1];\n        next(rslt);\n      }\n    });\n  } catch (error) {\n    return res.status(401).json({\n      message: \"Invalid token Auth failed\"\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVuY3J5cHQuanMiXSwibmFtZXMiOlsiUHl0aG9uU2hlbGwiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcSIsInJlcyIsIm5leHQiLCJteVB5dGhvblNjcmlwdFBhdGgiLCJweXNoZWxsIiwicGF0aCIsImZpbGUiLCJzZW5kIiwib24iLCJkYXRhIiwiZW5kIiwiZXJyIiwicnNsdCIsInN0YXR1cyIsImpzb24iLCJmaWxlcGF0aCIsIkpTT04iLCJzdHJpbmdpZnkiLCJzcGxpdCIsImVycm9yIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFDQSxFQUFBQTtBQUFELElBQWdCQyxPQUFPLENBQUMsY0FBRCxDQUE3Qjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQVVDLEdBQVYsRUFBZUMsR0FBZixFQUFvQkMsSUFBcEIsRUFBeUI7QUFDMUMsTUFBRztBQUNDLFFBQUlDLGtCQUFrQixHQUFHLG1FQUF6QjtBQUNBLFVBQU1DLE9BQU8sR0FBRyxJQUFJUixXQUFKLENBQWdCTyxrQkFBaEIsQ0FBaEI7QUFDQSxRQUFJRSxJQUFJLEdBQUdMLEdBQUcsQ0FBQ00sSUFBSixDQUFTRCxJQUFwQjtBQUNBRCxJQUFBQSxPQUFPLENBQUNHLElBQVIsQ0FBYUYsSUFBYjtBQUNBRCxJQUFBQSxPQUFPLENBQUNJLEVBQVIsQ0FBVyxTQUFYLEVBQXNCLFVBQVNDLElBQVQsRUFBYyxDQUNuQyxDQUREO0FBR0FMLElBQUFBLE9BQU8sQ0FBQ00sR0FBUixDQUFZLFVBQVVDLEdBQVYsRUFBZUMsSUFBZixFQUFxQjtBQUM3QixVQUFHRCxHQUFILEVBQU87QUFDSFYsUUFBQUEsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJILEdBQXJCO0FBQ0gsT0FGRCxNQUdJO0FBQ0FYLFFBQUFBLEdBQUcsQ0FBQ2UsUUFBSixHQUFlQyxJQUFJLENBQUNDLFNBQUwsQ0FBZVosSUFBZixFQUFxQmEsS0FBckIsQ0FBMkIsR0FBM0IsRUFBZ0MsQ0FBaEMsQ0FBZjtBQUNBaEIsUUFBQUEsSUFBSSxDQUFDVSxJQUFELENBQUo7QUFDSDtBQUNKLEtBUkQ7QUFTSCxHQWpCRCxDQWtCQSxPQUFNTyxLQUFOLEVBQWE7QUFDVCxXQUFPbEIsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDeEJNLE1BQUFBLE9BQU8sRUFBRTtBQURlLEtBQXJCLENBQVA7QUFHSDtBQUNBLENBeEJEIiwic291cmNlUm9vdCI6Ii9ob21lL2FubW9sbWlkZGhhL1Byb2plY3RzL2NvcmVzaGFyZS9zZXJ2ZXIvYXBpL21pZGRsZXdhcmUiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7UHl0aG9uU2hlbGx9ID0gcmVxdWlyZSgncHl0aG9uLXNoZWxsJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHJlcSwgcmVzLCBuZXh0KXtcbnRyeXtcbiAgICBsZXQgbXlQeXRob25TY3JpcHRQYXRoID0gJy9ob21lL2FubW9sbWlkZGhhL1Byb2plY3RzL2NvcmVzaGFyZS9zZXJ2ZXIvYXBpL3B5dGhvbi9lbmNyeXB0LnB5JztcbiAgICBjb25zdCBweXNoZWxsID0gbmV3IFB5dGhvblNoZWxsKG15UHl0aG9uU2NyaXB0UGF0aCk7XG4gICAgbGV0IHBhdGggPSByZXEuZmlsZS5wYXRoO1xuICAgIHB5c2hlbGwuc2VuZChwYXRoKTtcbiAgICBweXNoZWxsLm9uKFwibWVzc2FnZVwiLCBmdW5jdGlvbihkYXRhKXtcbiAgICB9KTtcbiAgICAgICAgXG4gICAgcHlzaGVsbC5lbmQoZnVuY3Rpb24gKGVyciwgcnNsdCkge1xuICAgICAgICBpZihlcnIpe1xuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oZXJyKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNle1xuICAgICAgICAgICAgcmVxLmZpbGVwYXRoID0gSlNPTi5zdHJpbmdpZnkocGF0aCkuc3BsaXQoJ1wiJylbMV07XG4gICAgICAgICAgICBuZXh0KHJzbHQpO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5jYXRjaChlcnJvcikge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7XG4gICAgICAgIG1lc3NhZ2U6IFwiSW52YWxpZCB0b2tlbiBBdXRoIGZhaWxlZFwiXG4gICAgfSlcbn1cbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "encrypt.js"
      ],
      "names": [
        "PythonShell",
        "require",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "myPythonScriptPath",
        "pyshell",
        "path",
        "file",
        "send",
        "on",
        "data",
        "end",
        "err",
        "rslt",
        "status",
        "json",
        "filepath",
        "JSON",
        "stringify",
        "split",
        "error",
        "message"
      ],
      "mappings": "AAAA,MAAM;AAACA,EAAAA;AAAD,IAAgBC,OAAO,CAAC,cAAD,CAA7B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAAyB;AAC1C,MAAG;AACC,QAAIC,kBAAkB,GAAG,mEAAzB;AACA,UAAMC,OAAO,GAAG,IAAIR,WAAJ,CAAgBO,kBAAhB,CAAhB;AACA,QAAIE,IAAI,GAAGL,GAAG,CAACM,IAAJ,CAASD,IAApB;AACAD,IAAAA,OAAO,CAACG,IAAR,CAAaF,IAAb;AACAD,IAAAA,OAAO,CAACI,EAAR,CAAW,SAAX,EAAsB,UAASC,IAAT,EAAc,CACnC,CADD;AAGAL,IAAAA,OAAO,CAACM,GAAR,CAAY,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AAC7B,UAAGD,GAAH,EAAO;AACHV,QAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,GAArB;AACH,OAFD,MAGI;AACAX,QAAAA,GAAG,CAACe,QAAJ,GAAeC,IAAI,CAACC,SAAL,CAAeZ,IAAf,EAAqBa,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAAf;AACAhB,QAAAA,IAAI,CAACU,IAAD,CAAJ;AACH;AACJ,KARD;AASH,GAjBD,CAkBA,OAAMO,KAAN,EAAa;AACT,WAAOlB,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBM,MAAAA,OAAO,EAAE;AADe,KAArB,CAAP;AAGH;AACA,CAxBD",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "sourcesContent": [
        "const {PythonShell} = require('python-shell');\n\nmodule.exports = function (req, res, next){\ntry{\n    let myPythonScriptPath = '/home/anmolmiddha/Projects/coreshare/server/api/python/encrypt.py';\n    const pyshell = new PythonShell(myPythonScriptPath);\n    let path = req.file.path;\n    pyshell.send(path);\n    pyshell.on(\"message\", function(data){\n    });\n        \n    pyshell.end(function (err, rslt) {\n        if(err){\n            res.status(500).json(err);\n        }\n        else{\n            req.filepath = JSON.stringify(path).split('\"')[1];\n            next(rslt);\n        }\n    });\n}\ncatch(error) {\n    return res.status(401).json({\n        message: \"Invalid token Auth failed\"\n    })\n}\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1552369628003
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/routes/user.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nconst mongoose = require('mongoose');\n\nconst bcrypt = require('bcrypt');\n\nconst jwt = require('jsonwebtoken');\n\nconst User = require('../../../models/user.js');\n\nrouter.post('/signup', (req, res, next) => {\n  bcrypt.hash(req.body.password, 10, (err, hash) => {\n    if (err) {\n      return res.status(500).json({\n        message: err.message,\n        err\n      });\n    } else {\n      const user = new User({\n        _id: new mongoose.Types.ObjectId(),\n        emailId: req.body.email,\n        password: hash\n      }).save().then(rslt => {\n        res.status(201).json({\n          message: \"User created\"\n        });\n      }).catch(err => {\n        res.status(500).json({\n          err,\n          message: err.message\n        });\n      });\n    }\n  });\n});\nrouter.post('/login', (req, res, next) => {\n  User.find({\n    emailId: req.body.email\n  }).exec().then(user => {\n    if (user.length < 1) {\n      return res.status(404).json({\n        message: \"No such Entry found\"\n      });\n    }\n\n    bcrypt.compare(req.body.password, user[0].password, (err, rslt) => {\n      if (err) {\n        return res.status(404).json({\n          message: 'Auth failed',\n          err\n        });\n      }\n\n      if (rslt) {\n        const token = jwt.sign({\n          email: user[0].emailId,\n          _id: user[0]._id\n        }, process.env.TOKEN_KEY, {\n          expiresIn: \"1h\"\n        });\n        return res.status(200).json({\n          message: \"Auth successfull\",\n          token\n        });\n      }\n\n      res.status(401).json({\n        message: \"password didn't match\"\n      });\n    });\n  }).catch(err => {\n    res.status(500).json({\n      err\n    });\n  });\n});\nrouter.delete('/:userid', (req, res, next) => {\n  const id = req.params.userid;\n  User.remove({\n    _id: id\n  }).exec().then(rslt => {\n    res.status(200).json({\n      message: `User with id ${id} successfully deleted`\n    });\n  }).catch(err => {\n    res.status(500).json({\n      err,\n      message: err.message\n    });\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "bcrypt",
        "jwt",
        "User",
        "post",
        "req",
        "res",
        "next",
        "hash",
        "body",
        "password",
        "err",
        "status",
        "json",
        "message",
        "user",
        "_id",
        "Types",
        "ObjectId",
        "emailId",
        "email",
        "save",
        "then",
        "rslt",
        "catch",
        "find",
        "exec",
        "length",
        "compare",
        "token",
        "sign",
        "process",
        "env",
        "TOKEN_KEY",
        "expiresIn",
        "delete",
        "id",
        "params",
        "userid",
        "remove",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\nconst mongoose = require('mongoose');\nconst bcrypt = require('bcrypt');\nconst jwt = require('jsonwebtoken');\n\nconst User = require('../../../models/user.js');\nrouter.post('/signup', (req, res, next) =>{\n    bcrypt.hash(req.body.password, 10, (err, hash)=>{\n        if(err){\n            return res.status(500).json({\n                message: err.message,\n                err\n            });\n        }\n        else{\n            const user = new User({\n                _id: new mongoose.Types.ObjectId(),\n                emailId: req.body.email,\n                password: hash\n            })\n            .save()\n            .then(rslt => {\n                res.status(201).json({\n                    message: \"User created\"\n                });\n            })\n            .catch(err => {\n                res.status(500).json({\n                    err,\n                    message: err.message\n                });  \n            });\n        } \n    });    \n}); \n\nrouter.post('/login', (req, res, next)=> {\n    User.find({emailId: req.body.email})\n    .exec()\n    .then(user => {\n        if(user.length < 1){\n            return res.status(404).json({\n                message: \"No such Entry found\"\n            });\n        }\n        bcrypt.compare(req.body.password, user[0].password, (err, rslt)=> {\n            if(err){\n                return res.status(404).json({\n                    message: 'Auth failed',\n                    err\n                })\n            }\n            if(rslt){\n                const token = jwt.sign({\n                    email: user[0].emailId,\n                    _id: user[0]._id\n                },\n                process.env.TOKEN_KEY, \n                {\n                    expiresIn: \"1h\"\n                });\n                return res.status(200).json({\n                    message: \"Auth successfull\",\n                    token\n                })\n            }\n            res.status(401).json({\n                message: \"password didn't match\"\n            })\n        });\n    })\n    .catch(err => {\n        res.status(500).json({\n            err\n        });\n    })\n});\n\nrouter.delete('/:userid', (req, res, next) => {\n    const id = req.params.userid;\n    User.remove({_id: id})\n    .exec()\n    .then((rslt) => {\n        res.status(200).json({\n            message: `User with id ${id} successfully deleted`,\n        })\n    })\n    .catch((err) => {\n        res.status(500).json({\n            err,\n            message: err.message\n        })\n    })\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1551772436874
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware/check-auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/check-auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/check-auth.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/check-auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
        "sourceFileName": "check-auth.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst jwt = require('jsonwebtoken');\n\nmodule.exports = (req, res, next) => {\n  try {\n    const token = req.headers.authorization.split(\" \")[1];\n    const decoded = jwt.verify(token, process.env.TOKEN_KEY);\n    req.userData = decoded;\n    next();\n  } catch (error) {\n    return res.status(401).json({\n      message: \"Invalid token Auth failed\"\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrLWF1dGguanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJqd3QiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVxIiwicmVzIiwibmV4dCIsInRva2VuIiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJzcGxpdCIsImRlY29kZWQiLCJ2ZXJpZnkiLCJwcm9jZXNzIiwiZW52IiwiVE9LRU5fS0VZIiwidXNlckRhdGEiLCJlcnJvciIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1DLEdBQUcsR0FBR0QsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7O0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUNqQyxNQUFHO0FBQ0MsVUFBTUMsS0FBSyxHQUFHSCxHQUFHLENBQUNJLE9BQUosQ0FBWUMsYUFBWixDQUEwQkMsS0FBMUIsQ0FBZ0MsR0FBaEMsRUFBcUMsQ0FBckMsQ0FBZDtBQUNBLFVBQU1DLE9BQU8sR0FBR1YsR0FBRyxDQUFDVyxNQUFKLENBQVdMLEtBQVgsRUFBa0JNLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxTQUE5QixDQUFoQjtBQUNBWCxJQUFBQSxHQUFHLENBQUNZLFFBQUosR0FBZUwsT0FBZjtBQUNBTCxJQUFBQSxJQUFJO0FBQ1AsR0FMRCxDQU1BLE9BQU1XLEtBQU4sRUFBYTtBQUNULFdBQU9aLEdBQUcsQ0FBQ2EsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ3hCQyxNQUFBQSxPQUFPLEVBQUU7QUFEZSxLQUFyQixDQUFQO0FBR0g7QUFDSixDQVpEIiwic291cmNlUm9vdCI6Ii9ob21lL2FubW9sbWlkZGhhL1Byb2plY3RzL2NvcmVzaGFyZS9zZXJ2ZXIvYXBpL21pZGRsZXdhcmUiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3Qgand0ID0gcmVxdWlyZSgnanNvbndlYnRva2VuJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgdHJ5e1xuICAgICAgICBjb25zdCB0b2tlbiA9IHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24uc3BsaXQoXCIgXCIpWzFdO1xuICAgICAgICBjb25zdCBkZWNvZGVkID0gand0LnZlcmlmeSh0b2tlbiwgcHJvY2Vzcy5lbnYuVE9LRU5fS0VZKTtcbiAgICAgICAgcmVxLnVzZXJEYXRhID0gZGVjb2RlZDtcbiAgICAgICAgbmV4dCgpO1xuICAgIH1cbiAgICBjYXRjaChlcnJvcikge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oe1xuICAgICAgICAgICAgbWVzc2FnZTogXCJJbnZhbGlkIHRva2VuIEF1dGggZmFpbGVkXCJcbiAgICAgICAgfSlcbiAgICB9XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "check-auth.js"
      ],
      "names": [
        "express",
        "require",
        "jwt",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "token",
        "headers",
        "authorization",
        "split",
        "decoded",
        "verify",
        "process",
        "env",
        "TOKEN_KEY",
        "userData",
        "error",
        "status",
        "json",
        "message"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,cAAD,CAAnB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACjC,MAAG;AACC,UAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAd;AACA,UAAMC,OAAO,GAAGV,GAAG,CAACW,MAAJ,CAAWL,KAAX,EAAkBM,OAAO,CAACC,GAAR,CAAYC,SAA9B,CAAhB;AACAX,IAAAA,GAAG,CAACY,QAAJ,GAAeL,OAAf;AACAL,IAAAA,IAAI;AACP,GALD,CAMA,OAAMW,KAAN,EAAa;AACT,WAAOZ,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAE;AADe,KAArB,CAAP;AAGH;AACJ,CAZD",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "sourcesContent": [
        "const express = require('express');\nconst jwt = require('jsonwebtoken');\n\nmodule.exports = (req, res, next) => {\n    try{\n        const token = req.headers.authorization.split(\" \")[1];\n        const decoded = jwt.verify(token, process.env.TOKEN_KEY);\n        req.userData = decoded;\n        next();\n    }\n    catch(error) {\n        return res.status(401).json({\n            message: \"Invalid token Auth failed\"\n        })\n    }\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1550925720579
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes/notifications.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/notifications.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/routes/notifications.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/notifications.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
        "sourceFileName": "notifications.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nconst mongoose = require('mongoose');\n\nconst gridfs = require('gridfs-stream');\n\ngridfs.mongo = mongoose.mongo;\nrouter.post('/count', (req, res) => {\n  const uid = req.body.uid;\n  const conn = mongoose.connection;\n  conn.db.collection('fs.files', function (err, collection) {\n    if (err) {\n      res.status(500).json({\n        message: \"No such collection found\"\n      });\n    } else {\n      collection.countDocuments({\n        'metadata.receiver': uid\n      }, function (err, rslt) {\n        if (err) {\n          res.status(500).json(err);\n        } else {\n          res.status(200).json(rslt);\n        }\n      });\n    }\n  });\n});\nrouter.post('/getall', (req, res) => {\n  const uid = req.body.uid;\n  const conn = mongoose.connection;\n  conn.db.collection('fs.files', function (err, collection) {\n    if (err) {\n      res.status(500).json({\n        message: \"No such collection found\"\n      });\n    } else {\n      collection.find({\n        'metadata.receiver': uid\n      }, function (err, rslt) {\n        if (err) {\n          res.status(500).json(err);\n        } else {\n          rslt.toArray(function (err, notifications) {\n            let notif_array = notifications.map(curr_notif => `${curr_notif.metadata.receiver} shared a file(${curr_notif.filename}) with you`);\n            res.status(200).json(notif_array);\n          });\n        }\n      });\n    }\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbnMuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJtb25nb29zZSIsImdyaWRmcyIsIm1vbmdvIiwicG9zdCIsInJlcSIsInJlcyIsInVpZCIsImJvZHkiLCJjb25uIiwiY29ubmVjdGlvbiIsImRiIiwiY29sbGVjdGlvbiIsImVyciIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwiY291bnREb2N1bWVudHMiLCJyc2x0IiwiZmluZCIsInRvQXJyYXkiLCJub3RpZmljYXRpb25zIiwibm90aWZfYXJyYXkiLCJtYXAiLCJjdXJyX25vdGlmIiwibWV0YWRhdGEiLCJyZWNlaXZlciIsImZpbGVuYW1lIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFmOztBQUNBLE1BQU1DLFFBQVEsR0FBR0gsT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBQ0EsTUFBTUksTUFBTSxHQUFHSixPQUFPLENBQUMsZUFBRCxDQUF0Qjs7QUFDQUksTUFBTSxDQUFDQyxLQUFQLEdBQWVGLFFBQVEsQ0FBQ0UsS0FBeEI7QUFFQUosTUFBTSxDQUFDSyxJQUFQLENBQVksUUFBWixFQUFzQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBWTtBQUM5QixRQUFNQyxHQUFHLEdBQUdGLEdBQUcsQ0FBQ0csSUFBSixDQUFTRCxHQUFyQjtBQUNBLFFBQU1FLElBQUksR0FBR1IsUUFBUSxDQUFDUyxVQUF0QjtBQUNBRCxFQUFBQSxJQUFJLENBQUNFLEVBQUwsQ0FBUUMsVUFBUixDQUFtQixVQUFuQixFQUErQixVQUFTQyxHQUFULEVBQWNELFVBQWQsRUFBeUI7QUFDcEQsUUFBR0MsR0FBSCxFQUFPO0FBQ0hQLE1BQUFBLEdBQUcsQ0FBQ1EsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUNDLFFBQUFBLE9BQU8sRUFBRTtBQUFWLE9BQXJCO0FBQ0gsS0FGRCxNQUdJO0FBQ0FKLE1BQUFBLFVBQVUsQ0FBQ0ssY0FBWCxDQUEwQjtBQUFDLDZCQUFxQlY7QUFBdEIsT0FBMUIsRUFBc0QsVUFBU00sR0FBVCxFQUFjSyxJQUFkLEVBQW1CO0FBQ3JFLFlBQUdMLEdBQUgsRUFBTztBQUNIUCxVQUFBQSxHQUFHLENBQUNRLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkYsR0FBckI7QUFDSCxTQUZELE1BR0k7QUFDQVAsVUFBQUEsR0FBRyxDQUFDUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJHLElBQXJCO0FBQ0g7QUFDSixPQVBEO0FBUUg7QUFDSixHQWREO0FBZUgsQ0FsQkQ7QUFtQkFuQixNQUFNLENBQUNLLElBQVAsQ0FBWSxTQUFaLEVBQXVCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFZO0FBQ2hDLFFBQU1DLEdBQUcsR0FBR0YsR0FBRyxDQUFDRyxJQUFKLENBQVNELEdBQXJCO0FBQ0EsUUFBTUUsSUFBSSxHQUFHUixRQUFRLENBQUNTLFVBQXRCO0FBQ0FELEVBQUFBLElBQUksQ0FBQ0UsRUFBTCxDQUFRQyxVQUFSLENBQW1CLFVBQW5CLEVBQStCLFVBQVNDLEdBQVQsRUFBY0QsVUFBZCxFQUF5QjtBQUNwRCxRQUFHQyxHQUFILEVBQU87QUFDSFAsTUFBQUEsR0FBRyxDQUFDUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBQ0MsUUFBQUEsT0FBTyxFQUFFO0FBQVYsT0FBckI7QUFDSCxLQUZELE1BR0k7QUFDQUosTUFBQUEsVUFBVSxDQUFDTyxJQUFYLENBQWdCO0FBQUMsNkJBQXFCWjtBQUF0QixPQUFoQixFQUE0QyxVQUFTTSxHQUFULEVBQWNLLElBQWQsRUFBbUI7QUFDMUQsWUFBR0wsR0FBSCxFQUFPO0FBQ0hQLFVBQUFBLEdBQUcsQ0FBQ1EsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixHQUFyQjtBQUNILFNBRkQsTUFHSTtBQUNBSyxVQUFBQSxJQUFJLENBQUNFLE9BQUwsQ0FBYSxVQUFTUCxHQUFULEVBQWNRLGFBQWQsRUFBNEI7QUFDckMsZ0JBQUlDLFdBQVcsR0FBR0QsYUFBYSxDQUFDRSxHQUFkLENBQW1CQyxVQUFELElBQy9CLEdBQUVBLFVBQVUsQ0FBQ0MsUUFBWCxDQUFvQkMsUUFBUyxrQkFBaUJGLFVBQVUsQ0FBQ0csUUFBUyxZQUR2RCxDQUFsQjtBQUdBckIsWUFBQUEsR0FBRyxDQUFDUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJPLFdBQXJCO0FBQ0gsV0FMRDtBQU1IO0FBQ0osT0FaRjtBQWFGO0FBQ0wsR0FuQkQ7QUFvQkYsQ0F2QkQ7QUF5QkFNLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjlCLE1BQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FubW9sbWlkZGhhL1Byb2plY3RzL2NvcmVzaGFyZS9zZXJ2ZXIvYXBpL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xuY29uc3QgZ3JpZGZzID0gcmVxdWlyZSgnZ3JpZGZzLXN0cmVhbScpO1xuZ3JpZGZzLm1vbmdvID0gbW9uZ29vc2UubW9uZ287XG5cbnJvdXRlci5wb3N0KCcvY291bnQnLCAocmVxLCByZXMpPT57XG4gICAgY29uc3QgdWlkID0gcmVxLmJvZHkudWlkO1xuICAgIGNvbnN0IGNvbm4gPSBtb25nb29zZS5jb25uZWN0aW9uO1xuICAgIGNvbm4uZGIuY29sbGVjdGlvbignZnMuZmlsZXMnLCBmdW5jdGlvbihlcnIsIGNvbGxlY3Rpb24pe1xuICAgICAgICBpZihlcnIpe1xuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe21lc3NhZ2U6IFwiTm8gc3VjaCBjb2xsZWN0aW9uIGZvdW5kXCJ9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNle1xuICAgICAgICAgICAgY29sbGVjdGlvbi5jb3VudERvY3VtZW50cyh7J21ldGFkYXRhLnJlY2VpdmVyJzogdWlkfSwgZnVuY3Rpb24oZXJyLCByc2x0KXtcbiAgICAgICAgICAgICAgICBpZihlcnIpe1xuICAgICAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbihlcnIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbihyc2x0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0pO1xufSk7XG5yb3V0ZXIucG9zdCgnL2dldGFsbCcsIChyZXEsIHJlcyk9PntcbiAgIGNvbnN0IHVpZCA9IHJlcS5ib2R5LnVpZDtcbiAgIGNvbnN0IGNvbm4gPSBtb25nb29zZS5jb25uZWN0aW9uO1xuICAgY29ubi5kYi5jb2xsZWN0aW9uKCdmcy5maWxlcycsIGZ1bmN0aW9uKGVyciwgY29sbGVjdGlvbil7XG4gICAgICAgaWYoZXJyKXtcbiAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe21lc3NhZ2U6IFwiTm8gc3VjaCBjb2xsZWN0aW9uIGZvdW5kXCJ9KTtcbiAgICAgICB9XG4gICAgICAgZWxzZXtcbiAgICAgICAgICAgY29sbGVjdGlvbi5maW5kKHsnbWV0YWRhdGEucmVjZWl2ZXInOiB1aWR9LCBmdW5jdGlvbihlcnIsIHJzbHQpe1xuICAgICAgICAgICAgICAgIGlmKGVycil7XG4gICAgICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKGVycik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAgICAgICAgIHJzbHQudG9BcnJheShmdW5jdGlvbihlcnIsIG5vdGlmaWNhdGlvbnMpe1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG5vdGlmX2FycmF5ID0gbm90aWZpY2F0aW9ucy5tYXAoKGN1cnJfbm90aWYpPT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBgJHtjdXJyX25vdGlmLm1ldGFkYXRhLnJlY2VpdmVyfSBzaGFyZWQgYSBmaWxlKCR7Y3Vycl9ub3RpZi5maWxlbmFtZX0pIHdpdGggeW91YFxuICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24obm90aWZfYXJyYXkpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgfSkgXG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "notifications.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "gridfs",
        "mongo",
        "post",
        "req",
        "res",
        "uid",
        "body",
        "conn",
        "connection",
        "db",
        "collection",
        "err",
        "status",
        "json",
        "message",
        "countDocuments",
        "rslt",
        "find",
        "toArray",
        "notifications",
        "notif_array",
        "map",
        "curr_notif",
        "metadata",
        "receiver",
        "filename",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,MAAMC,QAAQ,GAAGH,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMI,MAAM,GAAGJ,OAAO,CAAC,eAAD,CAAtB;;AACAI,MAAM,CAACC,KAAP,GAAeF,QAAQ,CAACE,KAAxB;AAEAJ,MAAM,CAACK,IAAP,CAAY,QAAZ,EAAsB,CAACC,GAAD,EAAMC,GAAN,KAAY;AAC9B,QAAMC,GAAG,GAAGF,GAAG,CAACG,IAAJ,CAASD,GAArB;AACA,QAAME,IAAI,GAAGR,QAAQ,CAACS,UAAtB;AACAD,EAAAA,IAAI,CAACE,EAAL,CAAQC,UAAR,CAAmB,UAAnB,EAA+B,UAASC,GAAT,EAAcD,UAAd,EAAyB;AACpD,QAAGC,GAAH,EAAO;AACHP,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,OAAO,EAAE;AAAV,OAArB;AACH,KAFD,MAGI;AACAJ,MAAAA,UAAU,CAACK,cAAX,CAA0B;AAAC,6BAAqBV;AAAtB,OAA1B,EAAsD,UAASM,GAAT,EAAcK,IAAd,EAAmB;AACrE,YAAGL,GAAH,EAAO;AACHP,UAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB;AACH,SAFD,MAGI;AACAP,UAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBG,IAArB;AACH;AACJ,OAPD;AAQH;AACJ,GAdD;AAeH,CAlBD;AAmBAnB,MAAM,CAACK,IAAP,CAAY,SAAZ,EAAuB,CAACC,GAAD,EAAMC,GAAN,KAAY;AAChC,QAAMC,GAAG,GAAGF,GAAG,CAACG,IAAJ,CAASD,GAArB;AACA,QAAME,IAAI,GAAGR,QAAQ,CAACS,UAAtB;AACAD,EAAAA,IAAI,CAACE,EAAL,CAAQC,UAAR,CAAmB,UAAnB,EAA+B,UAASC,GAAT,EAAcD,UAAd,EAAyB;AACpD,QAAGC,GAAH,EAAO;AACHP,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,OAAO,EAAE;AAAV,OAArB;AACH,KAFD,MAGI;AACAJ,MAAAA,UAAU,CAACO,IAAX,CAAgB;AAAC,6BAAqBZ;AAAtB,OAAhB,EAA4C,UAASM,GAAT,EAAcK,IAAd,EAAmB;AAC1D,YAAGL,GAAH,EAAO;AACHP,UAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB;AACH,SAFD,MAGI;AACAK,UAAAA,IAAI,CAACE,OAAL,CAAa,UAASP,GAAT,EAAcQ,aAAd,EAA4B;AACrC,gBAAIC,WAAW,GAAGD,aAAa,CAACE,GAAd,CAAmBC,UAAD,IAC/B,GAAEA,UAAU,CAACC,QAAX,CAAoBC,QAAS,kBAAiBF,UAAU,CAACG,QAAS,YADvD,CAAlB;AAGArB,YAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBO,WAArB;AACH,WALD;AAMH;AACJ,OAZF;AAaF;AACL,GAnBD;AAoBF,CAvBD;AAyBAM,MAAM,CAACC,OAAP,GAAiB9B,MAAjB",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\nconst mongoose = require('mongoose');\nconst gridfs = require('gridfs-stream');\ngridfs.mongo = mongoose.mongo;\n\nrouter.post('/count', (req, res)=>{\n    const uid = req.body.uid;\n    const conn = mongoose.connection;\n    conn.db.collection('fs.files', function(err, collection){\n        if(err){\n            res.status(500).json({message: \"No such collection found\"});\n        }\n        else{\n            collection.countDocuments({'metadata.receiver': uid}, function(err, rslt){\n                if(err){\n                    res.status(500).json(err);\n                }\n                else{\n                    res.status(200).json(rslt);\n                }\n            });\n        }\n    });\n});\nrouter.post('/getall', (req, res)=>{\n   const uid = req.body.uid;\n   const conn = mongoose.connection;\n   conn.db.collection('fs.files', function(err, collection){\n       if(err){\n           res.status(500).json({message: \"No such collection found\"});\n       }\n       else{\n           collection.find({'metadata.receiver': uid}, function(err, rslt){\n                if(err){\n                    res.status(500).json(err);\n                }\n                else{\n                    rslt.toArray(function(err, notifications){\n                        let notif_array = notifications.map((curr_notif)=>\n                            `${curr_notif.metadata.receiver} shared a file(${curr_notif.filename}) with you`\n                        )\n                        res.status(200).json(notif_array);\n                    });\n                }\n            });\n        }\n   }) \n});\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1553180950840
  }
}