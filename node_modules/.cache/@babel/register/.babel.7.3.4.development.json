{
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/bin\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/bin/www.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/bin",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/bin/www.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/bin/www.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/bin/www.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/bin",
        "sourceFileName": "www.js"
      }
    },
    "ast": null,
    "code": "const app = require('./../server/server.js');\n\napp.listen('8080', err => {\n  if (err) throw err;\n  console.log(\"running on port 8080\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy5qcyJdLCJuYW1lcyI6WyJhcHAiLCJyZXF1aXJlIiwibGlzdGVuIiwiZXJyIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsdUJBQUQsQ0FBbkI7O0FBQ0FELEdBQUcsQ0FBQ0UsTUFBSixDQUFXLE1BQVgsRUFBb0JDLEdBQUQsSUFBTztBQUN0QixNQUFHQSxHQUFILEVBQVEsTUFBTUEsR0FBTjtBQUNSQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxzQkFBWjtBQUNILENBSEQiLCJzb3VyY2VSb290IjoiL2hvbWUvYW5tb2xtaWRkaGEvUHJvamVjdHMvY29yZXNoYXJlL2JpbiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFwcCA9IHJlcXVpcmUoJy4vLi4vc2VydmVyL3NlcnZlci5qcycpXG5hcHAubGlzdGVuKCc4MDgwJywgKGVycik9PntcbiAgICBpZihlcnIpIHRocm93IGVycjtcbiAgICBjb25zb2xlLmxvZyhcInJ1bm5pbmcgb24gcG9ydCA4MDgwXCIpO1xufSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "www.js"
      ],
      "names": [
        "app",
        "require",
        "listen",
        "err",
        "console",
        "log"
      ],
      "mappings": "AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AACAD,GAAG,CAACE,MAAJ,CAAW,MAAX,EAAoBC,GAAD,IAAO;AACtB,MAAGA,GAAH,EAAQ,MAAMA,GAAN;AACRC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH,CAHD",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/bin",
      "sourcesContent": [
        "const app = require('./../server/server.js')\napp.listen('8080', (err)=>{\n    if(err) throw err;\n    console.log(\"running on port 8080\");\n});"
      ]
    },
    "sourceType": "module",
    "mtime": 1551359659156
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst bodyParser = require('body-parser');\n\nconst path = require('path');\n\nconst mongoose = require('mongoose');\n\nconst morgan = require('morgan');\n\nconst app = express();\nconsole.log(__dirname);\napp.set('view engine', 'ejs');\napp.set('views', path.join(__dirname, '../client'));\napp.use(express.static(path.join(__dirname, '../client')));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(morgan('dev'));\nmongoose.connect(process.env.MONGO_URL, {\n  useNewUrlParser: true\n});\n\nconst indexRoute = require('./api/routes/index.js');\n\nconst gdriveRoute = require('./api/routes/gdrive.js');\n\nconst userRoute = require('./api/routes/user.js');\n\nconst checkAuth = require('./api/middleware/check-auth.js');\n\nconst dashboardRoute = require('./api/routes/dashboard.js');\n\napp.use('/', indexRoute);\napp.use('/dahboard/gdrive', checkAuth, gdriveRoute);\napp.use('/user', userRoute);\napp.use('/dashboard', dashboardRoute);\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImJvZHlQYXJzZXIiLCJwYXRoIiwibW9uZ29vc2UiLCJtb3JnYW4iLCJhcHAiLCJjb25zb2xlIiwibG9nIiwiX19kaXJuYW1lIiwic2V0Iiwiam9pbiIsInVzZSIsInN0YXRpYyIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJjb25uZWN0IiwicHJvY2VzcyIsImVudiIsIk1PTkdPX1VSTCIsInVzZU5ld1VybFBhcnNlciIsImluZGV4Um91dGUiLCJnZHJpdmVSb3V0ZSIsInVzZXJSb3V0ZSIsImNoZWNrQXV0aCIsImRhc2hib2FyZFJvdXRlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQyxhQUFELENBQTFCOztBQUNBLE1BQU1FLElBQUksR0FBR0YsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTUcsUUFBUSxHQUFHSCxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFDQSxNQUFNSSxNQUFNLEdBQUdKLE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLE1BQU1LLEdBQUcsR0FBR04sT0FBTyxFQUFuQjtBQUVBTyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsU0FBWjtBQUNBSCxHQUFHLENBQUNJLEdBQUosQ0FBUSxhQUFSLEVBQXVCLEtBQXZCO0FBQ0FKLEdBQUcsQ0FBQ0ksR0FBSixDQUFRLE9BQVIsRUFBaUJQLElBQUksQ0FBQ1EsSUFBTCxDQUFVRixTQUFWLEVBQXFCLFdBQXJCLENBQWpCO0FBQ0FILEdBQUcsQ0FBQ00sR0FBSixDQUFRWixPQUFPLENBQUNhLE1BQVIsQ0FBZVYsSUFBSSxDQUFDUSxJQUFMLENBQVVGLFNBQVYsRUFBcUIsV0FBckIsQ0FBZixDQUFSO0FBQ0FILEdBQUcsQ0FBQ00sR0FBSixDQUFRVixVQUFVLENBQUNZLElBQVgsRUFBUjtBQUNBUixHQUFHLENBQUNNLEdBQUosQ0FBUVYsVUFBVSxDQUFDYSxVQUFYLENBQXNCO0FBQUNDLEVBQUFBLFFBQVEsRUFBRTtBQUFYLENBQXRCLENBQVI7QUFDQVYsR0FBRyxDQUFDTSxHQUFKLENBQVFQLE1BQU0sQ0FBQyxLQUFELENBQWQ7QUFFQUQsUUFBUSxDQUFDYSxPQUFULENBQWlCQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsU0FBN0IsRUFBd0M7QUFBQ0MsRUFBQUEsZUFBZSxFQUFFO0FBQWxCLENBQXhDOztBQUVBLE1BQU1DLFVBQVUsR0FBR3JCLE9BQU8sQ0FBQyx1QkFBRCxDQUExQjs7QUFDQSxNQUFNc0IsV0FBVyxHQUFHdEIsT0FBTyxDQUFDLHdCQUFELENBQTNCOztBQUNBLE1BQU11QixTQUFTLEdBQUd2QixPQUFPLENBQUMsc0JBQUQsQ0FBekI7O0FBQ0EsTUFBTXdCLFNBQVMsR0FBR3hCLE9BQU8sQ0FBQyxnQ0FBRCxDQUF6Qjs7QUFDQSxNQUFNeUIsY0FBYyxHQUFHekIsT0FBTyxDQUFDLDJCQUFELENBQTlCOztBQUVBSyxHQUFHLENBQUNNLEdBQUosQ0FBUSxHQUFSLEVBQWFVLFVBQWI7QUFDQWhCLEdBQUcsQ0FBQ00sR0FBSixDQUFRLGtCQUFSLEVBQTRCYSxTQUE1QixFQUF1Q0YsV0FBdkM7QUFDQWpCLEdBQUcsQ0FBQ00sR0FBSixDQUFRLE9BQVIsRUFBaUJZLFNBQWpCO0FBQ0FsQixHQUFHLENBQUNNLEdBQUosQ0FBUSxZQUFSLEVBQXNCYyxjQUF0QjtBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJ0QixHQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9hbm1vbG1pZGRoYS9Qcm9qZWN0cy9jb3Jlc2hhcmUvc2VydmVyIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcbmNvbnN0IG1vcmdhbiA9IHJlcXVpcmUoJ21vcmdhbicpO1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5jb25zb2xlLmxvZyhfX2Rpcm5hbWUpO1xuYXBwLnNldCgndmlldyBlbmdpbmUnLCAnZWpzJyk7XG5hcHAuc2V0KCd2aWV3cycsIHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi9jbGllbnQnKSk7XG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi9jbGllbnQnKSkpO1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7ZXh0ZW5kZWQ6IGZhbHNlfSkpO1xuYXBwLnVzZShtb3JnYW4oJ2RldicpKTtcblxubW9uZ29vc2UuY29ubmVjdChwcm9jZXNzLmVudi5NT05HT19VUkwsIHt1c2VOZXdVcmxQYXJzZXI6IHRydWV9KTtcblxuY29uc3QgaW5kZXhSb3V0ZSA9IHJlcXVpcmUoJy4vYXBpL3JvdXRlcy9pbmRleC5qcycpO1xuY29uc3QgZ2RyaXZlUm91dGUgPSByZXF1aXJlKCcuL2FwaS9yb3V0ZXMvZ2RyaXZlLmpzJyk7XG5jb25zdCB1c2VyUm91dGUgPSByZXF1aXJlKCcuL2FwaS9yb3V0ZXMvdXNlci5qcycpO1xuY29uc3QgY2hlY2tBdXRoID0gcmVxdWlyZSgnLi9hcGkvbWlkZGxld2FyZS9jaGVjay1hdXRoLmpzJyk7XG5jb25zdCBkYXNoYm9hcmRSb3V0ZSA9IHJlcXVpcmUoJy4vYXBpL3JvdXRlcy9kYXNoYm9hcmQuanMnKTtcblxuYXBwLnVzZSgnLycsIGluZGV4Um91dGUpO1xuYXBwLnVzZSgnL2RhaGJvYXJkL2dkcml2ZScsIGNoZWNrQXV0aCAsZ2RyaXZlUm91dGUpO1xuYXBwLnVzZSgnL3VzZXInLCB1c2VyUm91dGUpO1xuYXBwLnVzZSgnL2Rhc2hib2FyZCcsIGRhc2hib2FyZFJvdXRlKTtcblxubW9kdWxlLmV4cG9ydHMgPSBhcHA7Il19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "bodyParser",
        "path",
        "mongoose",
        "morgan",
        "app",
        "console",
        "log",
        "__dirname",
        "set",
        "join",
        "use",
        "static",
        "json",
        "urlencoded",
        "extended",
        "connect",
        "process",
        "env",
        "MONGO_URL",
        "useNewUrlParser",
        "indexRoute",
        "gdriveRoute",
        "userRoute",
        "checkAuth",
        "dashboardRoute",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMI,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMK,GAAG,GAAGN,OAAO,EAAnB;AAEAO,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACAH,GAAG,CAACI,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAJ,GAAG,CAACI,GAAJ,CAAQ,OAAR,EAAiBP,IAAI,CAACQ,IAAL,CAAUF,SAAV,EAAqB,WAArB,CAAjB;AACAH,GAAG,CAACM,GAAJ,CAAQZ,OAAO,CAACa,MAAR,CAAeV,IAAI,CAACQ,IAAL,CAAUF,SAAV,EAAqB,WAArB,CAAf,CAAR;AACAH,GAAG,CAACM,GAAJ,CAAQV,UAAU,CAACY,IAAX,EAAR;AACAR,GAAG,CAACM,GAAJ,CAAQV,UAAU,CAACa,UAAX,CAAsB;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAAtB,CAAR;AACAV,GAAG,CAACM,GAAJ,CAAQP,MAAM,CAAC,KAAD,CAAd;AAEAD,QAAQ,CAACa,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAA7B,EAAwC;AAACC,EAAAA,eAAe,EAAE;AAAlB,CAAxC;;AAEA,MAAMC,UAAU,GAAGrB,OAAO,CAAC,uBAAD,CAA1B;;AACA,MAAMsB,WAAW,GAAGtB,OAAO,CAAC,wBAAD,CAA3B;;AACA,MAAMuB,SAAS,GAAGvB,OAAO,CAAC,sBAAD,CAAzB;;AACA,MAAMwB,SAAS,GAAGxB,OAAO,CAAC,gCAAD,CAAzB;;AACA,MAAMyB,cAAc,GAAGzB,OAAO,CAAC,2BAAD,CAA9B;;AAEAK,GAAG,CAACM,GAAJ,CAAQ,GAAR,EAAaU,UAAb;AACAhB,GAAG,CAACM,GAAJ,CAAQ,kBAAR,EAA4Ba,SAA5B,EAAuCF,WAAvC;AACAjB,GAAG,CAACM,GAAJ,CAAQ,OAAR,EAAiBY,SAAjB;AACAlB,GAAG,CAACM,GAAJ,CAAQ,YAAR,EAAsBc,cAAtB;AAEAC,MAAM,CAACC,OAAP,GAAiBtB,GAAjB",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server",
      "sourcesContent": [
        "const express = require('express');\nconst bodyParser = require('body-parser');\nconst path = require('path');\nconst mongoose = require('mongoose');\nconst morgan = require('morgan');\nconst app = express();\n\nconsole.log(__dirname);\napp.set('view engine', 'ejs');\napp.set('views', path.join(__dirname, '../client'));\napp.use(express.static(path.join(__dirname, '../client')));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(morgan('dev'));\n\nmongoose.connect(process.env.MONGO_URL, {useNewUrlParser: true});\n\nconst indexRoute = require('./api/routes/index.js');\nconst gdriveRoute = require('./api/routes/gdrive.js');\nconst userRoute = require('./api/routes/user.js');\nconst checkAuth = require('./api/middleware/check-auth.js');\nconst dashboardRoute = require('./api/routes/dashboard.js');\n\napp.use('/', indexRoute);\napp.use('/dahboard/gdrive', checkAuth ,gdriveRoute);\napp.use('/user', userRoute);\napp.use('/dashboard', dashboardRoute);\n\nmodule.exports = app;"
      ]
    },
    "sourceType": "module",
    "mtime": 1551381484474
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes/gdrive.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/gdrive.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/routes/gdrive.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/gdrive.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
        "sourceFileName": "gdrive.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nconst fs = require('fs');\n\nconst multer = require('multer');\n\nconst upload = multer({\n  dest: './server/uploads/gdrive/'\n});\n\nconst {\n  google\n} = require('googleapis');\n\nconst Authorise = require('../middleware/gauthorise.js');\n\nconst Encrypt = require('../middleware/encrypt.js');\n\nrouter.post('/upload', Authorise, upload.single('filename'), Encrypt, (req, res) => {\n  const auth = req.auth;\n  const document = req.filepath;\n  const drive = google.drive({\n    version: 'v3',\n    auth\n  });\n  let fileMetadata = {\n    name: req.file.originalname.split(\".\")[0]\n  };\n  let media = {\n    body: fs.createReadStream(document)\n  };\n  drive.files.create({\n    resource: fileMetadata,\n    media,\n    fields: 'id'\n  }, function (err, file) {\n    if (err) {\n      res.status(500).json(err);\n    } else {\n      res.status(200).json(`file with id ${file.data.id} successfully uploaded on google drive`);\n    }\n  });\n});\nrouter.get('/share/:fileid', Authorise, (req, res) => {\n  const receiver = req.body.recemail;\n  const auth = req.auth;\n  const fileId = req.params.fileid;\n  const dest = fs.createWriteStream('./server/tempshare/gdrive/input.txt');\n  const drive = google.drive({\n    version: 'v3',\n    auth\n  });\n  drive.files.get({\n    fileId: fileId,\n    alt: 'media'\n  }, {\n    responseType: 'stream'\n  }, function (err, rslt) {\n    console.log(rslt);\n    rslt.data.on('end', rslt => {\n      res.status(200).json(rslt);\n    }).on('error', err => {\n      res.status(500).json(err);\n    }).pipe(dest);\n  });\n});\nrouter.post('/accept', Authorise, upload.single('sharedfile'), (req, res) => {\n  const auth = req.auth;\n  const document = req.file;\n  const drive = google.drive({\n    version: 'v3',\n    auth\n  });\n  let fileMetadata = {\n    'name': document.originalname\n  };\n  let media = {\n    mimeType: document.mimetype,\n    body: fs.createReadStream(document.path)\n  };\n  drive.files.create({\n    resource: fileMetadata,\n    media,\n    fields: 'id'\n  }, function (err, file) {\n    if (err) {\n      res.status(500).json(err);\n    } else {\n      res.status(200).json(`file with id ${file.data.id} successfully uploaded on google drive`);\n    }\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gdrive.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "fs",
        "multer",
        "upload",
        "dest",
        "google",
        "Authorise",
        "Encrypt",
        "post",
        "single",
        "req",
        "res",
        "auth",
        "document",
        "filepath",
        "drive",
        "version",
        "fileMetadata",
        "name",
        "file",
        "originalname",
        "split",
        "media",
        "body",
        "createReadStream",
        "files",
        "create",
        "resource",
        "fields",
        "err",
        "status",
        "json",
        "data",
        "id",
        "get",
        "receiver",
        "recemail",
        "fileId",
        "params",
        "fileid",
        "createWriteStream",
        "alt",
        "responseType",
        "rslt",
        "console",
        "log",
        "on",
        "pipe",
        "mimeType",
        "mimetype",
        "path",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\nconst fs = require('fs');\nconst multer = require('multer');\nconst upload = multer({dest: './server/uploads/gdrive/'});\nconst {google} = require('googleapis');\n\nconst Authorise = require('../middleware/gauthorise.js');\nconst Encrypt = require('../middleware/encrypt.js');\n\nrouter.post('/upload', Authorise, upload.single('filename'), Encrypt, (req, res)=>{\n    const auth = req.auth;\n    const document = req.filepath;\n    const drive = google.drive({version: 'v3', auth});\n    let fileMetadata = {name: (req.file.originalname).split(\".\")[0]};\n    let media = {\n        body: fs.createReadStream(document)\n    };\n    drive.files.create({\n        resource: fileMetadata,\n        media,\n        fields: 'id'       \n    }, function(err, file){\n        if(err){\n            res.status(500).json(err);\n        }\n        else{\n            res.status(200).json(`file with id ${file.data.id} successfully uploaded on google drive`);\n        }\n    })\n});\n\nrouter.get('/share/:fileid', Authorise, (req, res) =>{\n    const receiver = req.body.recemail;\n    const auth = req.auth;\n    const fileId = req.params.fileid;\n    const dest = fs.createWriteStream('./server/tempshare/gdrive/input.txt');\n    const drive = google.drive({version: 'v3', auth});\n    drive.files.get({\n        fileId: fileId,\n        alt: 'media'\n    }, {responseType: 'stream'}, function(err, rslt){\n        console.log(rslt);\n        rslt.data.on('end', (rslt)=>{\n            res.status(200).json(rslt);\n        })\n        .on('error', err=>{\n            res.status(500).json(err);\n        })\n        .pipe(dest);\n    });\n});\n\nrouter.post('/accept', Authorise, upload.single('sharedfile'), (req, res)=>{\n    const auth = req.auth;\n    const document = req.file;\n    const drive = google.drive({version: 'v3', auth});\n    let fileMetadata = {'name': document.originalname};\n    let media = {\n        mimeType : document.mimetype,\n        body: fs.createReadStream(document.path)\n    };\n    drive.files.create({\n        resource: fileMetadata,\n        media,\n        fields: 'id'       \n    }, function(err, file){\n        if(err){\n            res.status(500).json(err);\n        }\n        else{\n            res.status(200).json(`file with id ${file.data.id} successfully uploaded on google drive`);\n        }\n    })\n});\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1551292140912
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware/gauthorise.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/gauthorise.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/gauthorise.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/gauthorise.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
        "sourceFileName": "gauthorise.js"
      }
    },
    "ast": null,
    "code": "const fs = require('fs');\n\nconst readline = require('readline');\n\nconst {\n  google\n} = require('googleapis');\n\nconst SCOPES = ['https://www.googleapis.com/auth/drive']; // The file token.json stores the user's access and refresh tokens, and is\n// created automatically when the authorization flow completes for the first\n// time.\n\nconst TOKEN_PATH = './server/token.json';\nconst CREDENTIALS = './server/credentials.json';\n\nmodule.exports = (req, res, next) => {\n  fs.readFile(CREDENTIALS, (err, content) => {\n    if (err) return res.json('Error loading client secret file:' + err); // Authorize a client with credentials, then call the Google Drive API.\n\n    const credentials = JSON.parse(content);\n    const {\n      client_secret,\n      client_id,\n      redirect_uris\n    } = credentials.installed;\n    const oAuth2Client = new google.auth.OAuth2(client_id, client_secret, redirect_uris[0]); // Check if we have previously stored a token.\n\n    fs.readFile(TOKEN_PATH, (err, token) => {\n      if (err) return getAccessToken(oAuth2Client);\n      oAuth2Client.setCredentials(JSON.parse(token));\n      req.auth = oAuth2Client;\n      next();\n    });\n  });\n};\n\nfunction getAccessToken(oAuth2Client) {\n  const authUrl = oAuth2Client.generateAuthUrl({\n    access_type: 'offline',\n    scope: SCOPES\n  });\n  console.log('Authorize this app by visiting this url:', authUrl);\n  const rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n  });\n  rl.question('Enter the code from that page here: ', code => {\n    rl.close();\n    oAuth2Client.getToken(code, (err, token) => {\n      if (err) return console.error('Error retrieving access token', err);\n      oAuth2Client.setCredentials(token); // Store the token to disk for later program executions\n\n      fs.writeFile(TOKEN_PATH, JSON.stringify(token), err => {\n        if (err) console.error(err);\n        console.log('Token stored to', TOKEN_PATH);\n      });\n      req.auth = oAuth2Client;\n      next();\n    });\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhdXRob3Jpc2UuanMiXSwibmFtZXMiOlsiZnMiLCJyZXF1aXJlIiwicmVhZGxpbmUiLCJnb29nbGUiLCJTQ09QRVMiLCJUT0tFTl9QQVRIIiwiQ1JFREVOVElBTFMiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVxIiwicmVzIiwibmV4dCIsInJlYWRGaWxlIiwiZXJyIiwiY29udGVudCIsImpzb24iLCJjcmVkZW50aWFscyIsIkpTT04iLCJwYXJzZSIsImNsaWVudF9zZWNyZXQiLCJjbGllbnRfaWQiLCJyZWRpcmVjdF91cmlzIiwiaW5zdGFsbGVkIiwib0F1dGgyQ2xpZW50IiwiYXV0aCIsIk9BdXRoMiIsInRva2VuIiwiZ2V0QWNjZXNzVG9rZW4iLCJzZXRDcmVkZW50aWFscyIsImF1dGhVcmwiLCJnZW5lcmF0ZUF1dGhVcmwiLCJhY2Nlc3NfdHlwZSIsInNjb3BlIiwiY29uc29sZSIsImxvZyIsInJsIiwiY3JlYXRlSW50ZXJmYWNlIiwiaW5wdXQiLCJwcm9jZXNzIiwic3RkaW4iLCJvdXRwdXQiLCJzdGRvdXQiLCJxdWVzdGlvbiIsImNvZGUiLCJjbG9zZSIsImdldFRva2VuIiwiZXJyb3IiLCJ3cml0ZUZpbGUiLCJzdHJpbmdpZnkiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEVBQUUsR0FBR0MsT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBQ0EsTUFBTUMsUUFBUSxHQUFHRCxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFDQSxNQUFNO0FBQUNFLEVBQUFBO0FBQUQsSUFBV0YsT0FBTyxDQUFDLFlBQUQsQ0FBeEI7O0FBRUEsTUFBTUcsTUFBTSxHQUFHLENBQUMsdUNBQUQsQ0FBZixDLENBQ0E7QUFDQTtBQUNBOztBQUNBLE1BQU1DLFVBQVUsR0FBRyxxQkFBbkI7QUFDQSxNQUFNQyxXQUFXLEdBQUcsMkJBQXBCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDakNYLEVBQUFBLEVBQUUsQ0FBQ1ksUUFBSCxDQUFZTixXQUFaLEVBQXlCLENBQUNPLEdBQUQsRUFBTUMsT0FBTixLQUFrQjtBQUN2QyxRQUFJRCxHQUFKLEVBQVMsT0FBT0gsR0FBRyxDQUFDSyxJQUFKLENBQVMsc0NBQXNDRixHQUEvQyxDQUFQLENBRDhCLENBRXZDOztBQUNJLFVBQU1HLFdBQVcsR0FBR0MsSUFBSSxDQUFDQyxLQUFMLENBQVdKLE9BQVgsQ0FBcEI7QUFDQSxVQUFNO0FBQUNLLE1BQUFBLGFBQUQ7QUFBZ0JDLE1BQUFBLFNBQWhCO0FBQTJCQyxNQUFBQTtBQUEzQixRQUE0Q0wsV0FBVyxDQUFDTSxTQUE5RDtBQUNBLFVBQU1DLFlBQVksR0FBRyxJQUFJcEIsTUFBTSxDQUFDcUIsSUFBUCxDQUFZQyxNQUFoQixDQUF1QkwsU0FBdkIsRUFBa0NELGFBQWxDLEVBQWlERSxhQUFhLENBQUMsQ0FBRCxDQUE5RCxDQUFyQixDQUxtQyxDQU9uQzs7QUFDQXJCLElBQUFBLEVBQUUsQ0FBQ1ksUUFBSCxDQUFZUCxVQUFaLEVBQXdCLENBQUNRLEdBQUQsRUFBTWEsS0FBTixLQUFnQjtBQUNwQyxVQUFJYixHQUFKLEVBQVMsT0FBT2MsY0FBYyxDQUFDSixZQUFELENBQXJCO0FBQ1RBLE1BQUFBLFlBQVksQ0FBQ0ssY0FBYixDQUE0QlgsSUFBSSxDQUFDQyxLQUFMLENBQVdRLEtBQVgsQ0FBNUI7QUFDQWpCLE1BQUFBLEdBQUcsQ0FBQ2UsSUFBSixHQUFXRCxZQUFYO0FBQ0FaLE1BQUFBLElBQUk7QUFDUCxLQUxEO0FBTVAsR0FkRDtBQWVILENBaEJEOztBQWtCQSxTQUFTZ0IsY0FBVCxDQUF3QkosWUFBeEIsRUFBc0M7QUFDbEMsUUFBTU0sT0FBTyxHQUFHTixZQUFZLENBQUNPLGVBQWIsQ0FBNkI7QUFDM0NDLElBQUFBLFdBQVcsRUFBRSxTQUQ4QjtBQUUzQ0MsSUFBQUEsS0FBSyxFQUFFNUI7QUFGb0MsR0FBN0IsQ0FBaEI7QUFJQTZCLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDBDQUFaLEVBQXdETCxPQUF4RDtBQUNBLFFBQU1NLEVBQUUsR0FBR2pDLFFBQVEsQ0FBQ2tDLGVBQVQsQ0FBeUI7QUFDbENDLElBQUFBLEtBQUssRUFBRUMsT0FBTyxDQUFDQyxLQURtQjtBQUVsQ0MsSUFBQUEsTUFBTSxFQUFFRixPQUFPLENBQUNHO0FBRmtCLEdBQXpCLENBQVg7QUFJQU4sRUFBQUEsRUFBRSxDQUFDTyxRQUFILENBQVksc0NBQVosRUFBcURDLElBQUQsSUFBVTtBQUM1RFIsSUFBQUEsRUFBRSxDQUFDUyxLQUFIO0FBQ0FyQixJQUFBQSxZQUFZLENBQUNzQixRQUFiLENBQXNCRixJQUF0QixFQUE0QixDQUFDOUIsR0FBRCxFQUFNYSxLQUFOLEtBQWdCO0FBQzFDLFVBQUliLEdBQUosRUFBUyxPQUFPb0IsT0FBTyxDQUFDYSxLQUFSLENBQWMsK0JBQWQsRUFBK0NqQyxHQUEvQyxDQUFQO0FBQ1RVLE1BQUFBLFlBQVksQ0FBQ0ssY0FBYixDQUE0QkYsS0FBNUIsRUFGMEMsQ0FHMUM7O0FBQ0ExQixNQUFBQSxFQUFFLENBQUMrQyxTQUFILENBQWExQyxVQUFiLEVBQXlCWSxJQUFJLENBQUMrQixTQUFMLENBQWV0QixLQUFmLENBQXpCLEVBQWlEYixHQUFELElBQVM7QUFDdkQsWUFBSUEsR0FBSixFQUFTb0IsT0FBTyxDQUFDYSxLQUFSLENBQWNqQyxHQUFkO0FBQ1RvQixRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxpQkFBWixFQUErQjdCLFVBQS9CO0FBQ0QsT0FIRDtBQUlBSSxNQUFBQSxHQUFHLENBQUNlLElBQUosR0FBV0QsWUFBWDtBQUNBWixNQUFBQSxJQUFJO0FBQ0wsS0FWRDtBQVdELEdBYkQ7QUFjSCIsInNvdXJjZVJvb3QiOiIvaG9tZS9hbm1vbG1pZGRoYS9Qcm9qZWN0cy9jb3Jlc2hhcmUvc2VydmVyL2FwaS9taWRkbGV3YXJlIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuY29uc3QgcmVhZGxpbmUgPSByZXF1aXJlKCdyZWFkbGluZScpO1xuY29uc3Qge2dvb2dsZX0gPSByZXF1aXJlKCdnb29nbGVhcGlzJyk7XG5cbmNvbnN0IFNDT1BFUyA9IFsnaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9kcml2ZSddO1xuLy8gVGhlIGZpbGUgdG9rZW4uanNvbiBzdG9yZXMgdGhlIHVzZXIncyBhY2Nlc3MgYW5kIHJlZnJlc2ggdG9rZW5zLCBhbmQgaXNcbi8vIGNyZWF0ZWQgYXV0b21hdGljYWxseSB3aGVuIHRoZSBhdXRob3JpemF0aW9uIGZsb3cgY29tcGxldGVzIGZvciB0aGUgZmlyc3Rcbi8vIHRpbWUuXG5jb25zdCBUT0tFTl9QQVRIID0gJy4vc2VydmVyL3Rva2VuLmpzb24nO1xuY29uc3QgQ1JFREVOVElBTFMgPSAnLi9zZXJ2ZXIvY3JlZGVudGlhbHMuanNvbic7XG5cbm1vZHVsZS5leHBvcnRzID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgZnMucmVhZEZpbGUoQ1JFREVOVElBTFMsIChlcnIsIGNvbnRlbnQpID0+IHtcbiAgICAgICAgaWYgKGVycikgcmV0dXJuIHJlcy5qc29uKCdFcnJvciBsb2FkaW5nIGNsaWVudCBzZWNyZXQgZmlsZTonICsgZXJyKTtcbiAgICAgICAgLy8gQXV0aG9yaXplIGEgY2xpZW50IHdpdGggY3JlZGVudGlhbHMsIHRoZW4gY2FsbCB0aGUgR29vZ2xlIERyaXZlIEFQSS5cbiAgICAgICAgICAgIGNvbnN0IGNyZWRlbnRpYWxzID0gSlNPTi5wYXJzZShjb250ZW50KTtcbiAgICAgICAgICAgIGNvbnN0IHtjbGllbnRfc2VjcmV0LCBjbGllbnRfaWQsIHJlZGlyZWN0X3VyaXN9ID0gY3JlZGVudGlhbHMuaW5zdGFsbGVkO1xuICAgICAgICAgICAgY29uc3Qgb0F1dGgyQ2xpZW50ID0gbmV3IGdvb2dsZS5hdXRoLk9BdXRoMihjbGllbnRfaWQsIGNsaWVudF9zZWNyZXQsIHJlZGlyZWN0X3VyaXNbMF0pO1xuICAgICAgXG4gICAgICAgICAgICAvLyBDaGVjayBpZiB3ZSBoYXZlIHByZXZpb3VzbHkgc3RvcmVkIGEgdG9rZW4uXG4gICAgICAgICAgICBmcy5yZWFkRmlsZShUT0tFTl9QQVRILCAoZXJyLCB0b2tlbikgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChlcnIpIHJldHVybiBnZXRBY2Nlc3NUb2tlbihvQXV0aDJDbGllbnQpO1xuICAgICAgICAgICAgICAgIG9BdXRoMkNsaWVudC5zZXRDcmVkZW50aWFscyhKU09OLnBhcnNlKHRva2VuKSk7XG4gICAgICAgICAgICAgICAgcmVxLmF1dGggPSBvQXV0aDJDbGllbnQ7XG4gICAgICAgICAgICAgICAgbmV4dCgpO1xuICAgICAgICAgICAgfSk7XG4gICAgfSk7XG59O1xuXG5mdW5jdGlvbiBnZXRBY2Nlc3NUb2tlbihvQXV0aDJDbGllbnQpIHtcbiAgICBjb25zdCBhdXRoVXJsID0gb0F1dGgyQ2xpZW50LmdlbmVyYXRlQXV0aFVybCh7XG4gICAgICBhY2Nlc3NfdHlwZTogJ29mZmxpbmUnLFxuICAgICAgc2NvcGU6IFNDT1BFUyxcbiAgICB9KTtcbiAgICBjb25zb2xlLmxvZygnQXV0aG9yaXplIHRoaXMgYXBwIGJ5IHZpc2l0aW5nIHRoaXMgdXJsOicsIGF1dGhVcmwpO1xuICAgIGNvbnN0IHJsID0gcmVhZGxpbmUuY3JlYXRlSW50ZXJmYWNlKHtcbiAgICAgIGlucHV0OiBwcm9jZXNzLnN0ZGluLFxuICAgICAgb3V0cHV0OiBwcm9jZXNzLnN0ZG91dCxcbiAgICB9KTtcbiAgICBybC5xdWVzdGlvbignRW50ZXIgdGhlIGNvZGUgZnJvbSB0aGF0IHBhZ2UgaGVyZTogJywgKGNvZGUpID0+IHtcbiAgICAgIHJsLmNsb3NlKCk7XG4gICAgICBvQXV0aDJDbGllbnQuZ2V0VG9rZW4oY29kZSwgKGVyciwgdG9rZW4pID0+IHtcbiAgICAgICAgaWYgKGVycikgcmV0dXJuIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHJldHJpZXZpbmcgYWNjZXNzIHRva2VuJywgZXJyKTtcbiAgICAgICAgb0F1dGgyQ2xpZW50LnNldENyZWRlbnRpYWxzKHRva2VuKTtcbiAgICAgICAgLy8gU3RvcmUgdGhlIHRva2VuIHRvIGRpc2sgZm9yIGxhdGVyIHByb2dyYW0gZXhlY3V0aW9uc1xuICAgICAgICBmcy53cml0ZUZpbGUoVE9LRU5fUEFUSCwgSlNPTi5zdHJpbmdpZnkodG9rZW4pLCAoZXJyKSA9PiB7XG4gICAgICAgICAgaWYgKGVycikgY29uc29sZS5lcnJvcihlcnIpO1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdUb2tlbiBzdG9yZWQgdG8nLCBUT0tFTl9QQVRIKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJlcS5hdXRoID0gb0F1dGgyQ2xpZW50O1xuICAgICAgICBuZXh0KCk7XG4gICAgICB9KTtcbiAgICB9KTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "gauthorise.js"
      ],
      "names": [
        "fs",
        "require",
        "readline",
        "google",
        "SCOPES",
        "TOKEN_PATH",
        "CREDENTIALS",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "readFile",
        "err",
        "content",
        "json",
        "credentials",
        "JSON",
        "parse",
        "client_secret",
        "client_id",
        "redirect_uris",
        "installed",
        "oAuth2Client",
        "auth",
        "OAuth2",
        "token",
        "getAccessToken",
        "setCredentials",
        "authUrl",
        "generateAuthUrl",
        "access_type",
        "scope",
        "console",
        "log",
        "rl",
        "createInterface",
        "input",
        "process",
        "stdin",
        "output",
        "stdout",
        "question",
        "code",
        "close",
        "getToken",
        "error",
        "writeFile",
        "stringify"
      ],
      "mappings": "AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAM;AAACE,EAAAA;AAAD,IAAWF,OAAO,CAAC,YAAD,CAAxB;;AAEA,MAAMG,MAAM,GAAG,CAAC,uCAAD,CAAf,C,CACA;AACA;AACA;;AACA,MAAMC,UAAU,GAAG,qBAAnB;AACA,MAAMC,WAAW,GAAG,2BAApB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACjCX,EAAAA,EAAE,CAACY,QAAH,CAAYN,WAAZ,EAAyB,CAACO,GAAD,EAAMC,OAAN,KAAkB;AACvC,QAAID,GAAJ,EAAS,OAAOH,GAAG,CAACK,IAAJ,CAAS,sCAAsCF,GAA/C,CAAP,CAD8B,CAEvC;;AACI,UAAMG,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAApB;AACA,UAAM;AAACK,MAAAA,aAAD;AAAgBC,MAAAA,SAAhB;AAA2BC,MAAAA;AAA3B,QAA4CL,WAAW,CAACM,SAA9D;AACA,UAAMC,YAAY,GAAG,IAAIpB,MAAM,CAACqB,IAAP,CAAYC,MAAhB,CAAuBL,SAAvB,EAAkCD,aAAlC,EAAiDE,aAAa,CAAC,CAAD,CAA9D,CAArB,CALmC,CAOnC;;AACArB,IAAAA,EAAE,CAACY,QAAH,CAAYP,UAAZ,EAAwB,CAACQ,GAAD,EAAMa,KAAN,KAAgB;AACpC,UAAIb,GAAJ,EAAS,OAAOc,cAAc,CAACJ,YAAD,CAArB;AACTA,MAAAA,YAAY,CAACK,cAAb,CAA4BX,IAAI,CAACC,KAAL,CAAWQ,KAAX,CAA5B;AACAjB,MAAAA,GAAG,CAACe,IAAJ,GAAWD,YAAX;AACAZ,MAAAA,IAAI;AACP,KALD;AAMP,GAdD;AAeH,CAhBD;;AAkBA,SAASgB,cAAT,CAAwBJ,YAAxB,EAAsC;AAClC,QAAMM,OAAO,GAAGN,YAAY,CAACO,eAAb,CAA6B;AAC3CC,IAAAA,WAAW,EAAE,SAD8B;AAE3CC,IAAAA,KAAK,EAAE5B;AAFoC,GAA7B,CAAhB;AAIA6B,EAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDL,OAAxD;AACA,QAAMM,EAAE,GAAGjC,QAAQ,CAACkC,eAAT,CAAyB;AAClCC,IAAAA,KAAK,EAAEC,OAAO,CAACC,KADmB;AAElCC,IAAAA,MAAM,EAAEF,OAAO,CAACG;AAFkB,GAAzB,CAAX;AAIAN,EAAAA,EAAE,CAACO,QAAH,CAAY,sCAAZ,EAAqDC,IAAD,IAAU;AAC5DR,IAAAA,EAAE,CAACS,KAAH;AACArB,IAAAA,YAAY,CAACsB,QAAb,CAAsBF,IAAtB,EAA4B,CAAC9B,GAAD,EAAMa,KAAN,KAAgB;AAC1C,UAAIb,GAAJ,EAAS,OAAOoB,OAAO,CAACa,KAAR,CAAc,+BAAd,EAA+CjC,GAA/C,CAAP;AACTU,MAAAA,YAAY,CAACK,cAAb,CAA4BF,KAA5B,EAF0C,CAG1C;;AACA1B,MAAAA,EAAE,CAAC+C,SAAH,CAAa1C,UAAb,EAAyBY,IAAI,CAAC+B,SAAL,CAAetB,KAAf,CAAzB,EAAiDb,GAAD,IAAS;AACvD,YAAIA,GAAJ,EAASoB,OAAO,CAACa,KAAR,CAAcjC,GAAd;AACToB,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B7B,UAA/B;AACD,OAHD;AAIAI,MAAAA,GAAG,CAACe,IAAJ,GAAWD,YAAX;AACAZ,MAAAA,IAAI;AACL,KAVD;AAWD,GAbD;AAcH",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "sourcesContent": [
        "const fs = require('fs');\nconst readline = require('readline');\nconst {google} = require('googleapis');\n\nconst SCOPES = ['https://www.googleapis.com/auth/drive'];\n// The file token.json stores the user's access and refresh tokens, and is\n// created automatically when the authorization flow completes for the first\n// time.\nconst TOKEN_PATH = './server/token.json';\nconst CREDENTIALS = './server/credentials.json';\n\nmodule.exports = (req, res, next) => {\n    fs.readFile(CREDENTIALS, (err, content) => {\n        if (err) return res.json('Error loading client secret file:' + err);\n        // Authorize a client with credentials, then call the Google Drive API.\n            const credentials = JSON.parse(content);\n            const {client_secret, client_id, redirect_uris} = credentials.installed;\n            const oAuth2Client = new google.auth.OAuth2(client_id, client_secret, redirect_uris[0]);\n      \n            // Check if we have previously stored a token.\n            fs.readFile(TOKEN_PATH, (err, token) => {\n                if (err) return getAccessToken(oAuth2Client);\n                oAuth2Client.setCredentials(JSON.parse(token));\n                req.auth = oAuth2Client;\n                next();\n            });\n    });\n};\n\nfunction getAccessToken(oAuth2Client) {\n    const authUrl = oAuth2Client.generateAuthUrl({\n      access_type: 'offline',\n      scope: SCOPES,\n    });\n    console.log('Authorize this app by visiting this url:', authUrl);\n    const rl = readline.createInterface({\n      input: process.stdin,\n      output: process.stdout,\n    });\n    rl.question('Enter the code from that page here: ', (code) => {\n      rl.close();\n      oAuth2Client.getToken(code, (err, token) => {\n        if (err) return console.error('Error retrieving access token', err);\n        oAuth2Client.setCredentials(token);\n        // Store the token to disk for later program executions\n        fs.writeFile(TOKEN_PATH, JSON.stringify(token), (err) => {\n          if (err) console.error(err);\n          console.log('Token stored to', TOKEN_PATH);\n        });\n        req.auth = oAuth2Client;\n        next();\n      });\n    });\n}\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1550924747815
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware/encrypt.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/encrypt.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/encrypt.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/encrypt.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
        "sourceFileName": "encrypt.js"
      }
    },
    "ast": null,
    "code": "const {\n  PythonShell\n} = require('python-shell');\n\nmodule.exports = function (req, res, next) {\n  try {\n    let myPythonScriptPath = '/home/anmolmiddha/Projects/coreshare/server/api/python/encrypt.py';\n    const pyshell = new PythonShell(myPythonScriptPath);\n    let path = req.file.path;\n    pyshell.send(path);\n    req.filepath = path;\n    pyshell.on(\"message\", function (data) {\n      req.filepath = data;\n    }); // end the input stream and allow the process to exit\n\n    pyshell.end(function (err) {\n      if (err) {\n        res.status(500).json(err);\n      }\n    });\n    next();\n  } catch (error) {\n    return res.status(401).json({\n      message: \"Invalid token Auth failed\"\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVuY3J5cHQuanMiXSwibmFtZXMiOlsiUHl0aG9uU2hlbGwiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcSIsInJlcyIsIm5leHQiLCJteVB5dGhvblNjcmlwdFBhdGgiLCJweXNoZWxsIiwicGF0aCIsImZpbGUiLCJzZW5kIiwiZmlsZXBhdGgiLCJvbiIsImRhdGEiLCJlbmQiLCJlcnIiLCJzdGF0dXMiLCJqc29uIiwiZXJyb3IiLCJtZXNzYWdlIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0FBQUNBLEVBQUFBO0FBQUQsSUFBZ0JDLE9BQU8sQ0FBQyxjQUFELENBQTdCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBVUMsR0FBVixFQUFlQyxHQUFmLEVBQW9CQyxJQUFwQixFQUF5QjtBQUMxQyxNQUFHO0FBQ0MsUUFBSUMsa0JBQWtCLEdBQUcsbUVBQXpCO0FBQ0EsVUFBTUMsT0FBTyxHQUFHLElBQUlSLFdBQUosQ0FBZ0JPLGtCQUFoQixDQUFoQjtBQUNBLFFBQUlFLElBQUksR0FBR0wsR0FBRyxDQUFDTSxJQUFKLENBQVNELElBQXBCO0FBQ0FELElBQUFBLE9BQU8sQ0FBQ0csSUFBUixDQUFhRixJQUFiO0FBQ0FMLElBQUFBLEdBQUcsQ0FBQ1EsUUFBSixHQUFlSCxJQUFmO0FBRUFELElBQUFBLE9BQU8sQ0FBQ0ssRUFBUixDQUFXLFNBQVgsRUFBc0IsVUFBU0MsSUFBVCxFQUFjO0FBQ2hDVixNQUFBQSxHQUFHLENBQUNRLFFBQUosR0FBZUUsSUFBZjtBQUVILEtBSEQsRUFQRCxDQVdDOztBQUNBTixJQUFBQSxPQUFPLENBQUNPLEdBQVIsQ0FBWSxVQUFVQyxHQUFWLEVBQWU7QUFDdkIsVUFBR0EsR0FBSCxFQUFPO0FBQ0hYLFFBQUFBLEdBQUcsQ0FBQ1ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixHQUFyQjtBQUNIO0FBQ0osS0FKRDtBQU1BVixJQUFBQSxJQUFJO0FBQ1AsR0FuQkQsQ0FvQkEsT0FBTWEsS0FBTixFQUFhO0FBQ1QsV0FBT2QsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDeEJFLE1BQUFBLE9BQU8sRUFBRTtBQURlLEtBQXJCLENBQVA7QUFHSDtBQUNBLENBMUJEIiwic291cmNlUm9vdCI6Ii9ob21lL2FubW9sbWlkZGhhL1Byb2plY3RzL2NvcmVzaGFyZS9zZXJ2ZXIvYXBpL21pZGRsZXdhcmUiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7UHl0aG9uU2hlbGx9ID0gcmVxdWlyZSgncHl0aG9uLXNoZWxsJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHJlcSwgcmVzLCBuZXh0KXtcbnRyeXtcbiAgICBsZXQgbXlQeXRob25TY3JpcHRQYXRoID0gJy9ob21lL2FubW9sbWlkZGhhL1Byb2plY3RzL2NvcmVzaGFyZS9zZXJ2ZXIvYXBpL3B5dGhvbi9lbmNyeXB0LnB5JztcbiAgICBjb25zdCBweXNoZWxsID0gbmV3IFB5dGhvblNoZWxsKG15UHl0aG9uU2NyaXB0UGF0aCk7XG4gICAgbGV0IHBhdGggPSByZXEuZmlsZS5wYXRoOyAgXG4gICAgcHlzaGVsbC5zZW5kKHBhdGgpO1xuICAgIHJlcS5maWxlcGF0aCA9IHBhdGg7XG4gICAgXG4gICAgcHlzaGVsbC5vbihcIm1lc3NhZ2VcIiwgZnVuY3Rpb24oZGF0YSl7XG4gICAgICAgIHJlcS5maWxlcGF0aCA9IGRhdGE7XG4gICAgICAgIFxuICAgIH0pXG4gICAgLy8gZW5kIHRoZSBpbnB1dCBzdHJlYW0gYW5kIGFsbG93IHRoZSBwcm9jZXNzIHRvIGV4aXRcbiAgICBweXNoZWxsLmVuZChmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgIGlmKGVycil7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbihlcnIpO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICBuZXh0KCk7XG59XG5jYXRjaChlcnJvcikge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7XG4gICAgICAgIG1lc3NhZ2U6IFwiSW52YWxpZCB0b2tlbiBBdXRoIGZhaWxlZFwiXG4gICAgfSlcbn1cbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "encrypt.js"
      ],
      "names": [
        "PythonShell",
        "require",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "myPythonScriptPath",
        "pyshell",
        "path",
        "file",
        "send",
        "filepath",
        "on",
        "data",
        "end",
        "err",
        "status",
        "json",
        "error",
        "message"
      ],
      "mappings": "AAAA,MAAM;AAACA,EAAAA;AAAD,IAAgBC,OAAO,CAAC,cAAD,CAA7B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAAyB;AAC1C,MAAG;AACC,QAAIC,kBAAkB,GAAG,mEAAzB;AACA,UAAMC,OAAO,GAAG,IAAIR,WAAJ,CAAgBO,kBAAhB,CAAhB;AACA,QAAIE,IAAI,GAAGL,GAAG,CAACM,IAAJ,CAASD,IAApB;AACAD,IAAAA,OAAO,CAACG,IAAR,CAAaF,IAAb;AACAL,IAAAA,GAAG,CAACQ,QAAJ,GAAeH,IAAf;AAEAD,IAAAA,OAAO,CAACK,EAAR,CAAW,SAAX,EAAsB,UAASC,IAAT,EAAc;AAChCV,MAAAA,GAAG,CAACQ,QAAJ,GAAeE,IAAf;AAEH,KAHD,EAPD,CAWC;;AACAN,IAAAA,OAAO,CAACO,GAAR,CAAY,UAAUC,GAAV,EAAe;AACvB,UAAGA,GAAH,EAAO;AACHX,QAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB;AACH;AACJ,KAJD;AAMAV,IAAAA,IAAI;AACP,GAnBD,CAoBA,OAAMa,KAAN,EAAa;AACT,WAAOd,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBE,MAAAA,OAAO,EAAE;AADe,KAArB,CAAP;AAGH;AACA,CA1BD",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "sourcesContent": [
        "const {PythonShell} = require('python-shell');\n\nmodule.exports = function (req, res, next){\ntry{\n    let myPythonScriptPath = '/home/anmolmiddha/Projects/coreshare/server/api/python/encrypt.py';\n    const pyshell = new PythonShell(myPythonScriptPath);\n    let path = req.file.path;  \n    pyshell.send(path);\n    req.filepath = path;\n    \n    pyshell.on(\"message\", function(data){\n        req.filepath = data;\n        \n    })\n    // end the input stream and allow the process to exit\n    pyshell.end(function (err) {\n        if(err){\n            res.status(500).json(err);\n        }\n    });\n\n    next();\n}\ncatch(error) {\n    return res.status(401).json({\n        message: \"Invalid token Auth failed\"\n    })\n}\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1551291414175
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/routes/user.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nconst mongoose = require('mongoose');\n\nconst bcrypt = require('bcrypt');\n\nconst jwt = require('jsonwebtoken');\n\nconst User = require('../../../models/user.js');\n\nrouter.post('/signup', (req, res, next) => {\n  bcrypt.hash(req.body.password, 10, (err, hash) => {\n    if (err) {\n      return res.status(500).json({\n        message: err.message,\n        err\n      });\n    } else {\n      const user = new User({\n        _id: new mongoose.Types.ObjectId(),\n        emailId: req.body.email,\n        password: hash\n      }).save().then(rslt => {\n        res.status(201).json({\n          message: \"User created\"\n        });\n      }).catch(err => {\n        res.status(500).json({\n          err,\n          message: err.message\n        });\n      });\n    }\n  });\n});\nrouter.post('/login', (req, res, next) => {\n  User.find({\n    emailId: req.body.email\n  }).exec().then(user => {\n    if (user.length < 1) {\n      return res.status(404).json({\n        message: \"No such Entry found\"\n      });\n    }\n\n    bcrypt.compare(req.body.password, user[0].password, (err, rslt) => {\n      if (err) {\n        return res.status(404).json({\n          message: 'Auth failed',\n          err\n        });\n      }\n\n      if (rslt) {\n        const token = jwt.sign({\n          email: user[0].emailId,\n          _id: user[0]._id\n        }, process.env.TOKEN_KEY, {\n          expiresIn: \"1h\"\n        });\n        return res.status(200).json({\n          message: \"Auth successfull\",\n          token\n        });\n      }\n\n      res.status(401).json({\n        message: \"password didn't match\"\n      });\n    });\n  }).catch(err => {\n    res.status(500).json({\n      err\n    });\n  });\n});\nrouter.delete('/:userid', (req, res, next) => {\n  const id = req.params.userid;\n  User.remove({\n    _id: id\n  }).exec().then(rslt => {\n    res.status(200).json({\n      message: `User with id ${id} successfully deleted`\n    });\n  }).catch(err => {\n    res.status(500).json({\n      err,\n      message: err.message\n    });\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "bcrypt",
        "jwt",
        "User",
        "post",
        "req",
        "res",
        "next",
        "hash",
        "body",
        "password",
        "err",
        "status",
        "json",
        "message",
        "user",
        "_id",
        "Types",
        "ObjectId",
        "emailId",
        "email",
        "save",
        "then",
        "rslt",
        "catch",
        "find",
        "exec",
        "length",
        "compare",
        "token",
        "sign",
        "process",
        "env",
        "TOKEN_KEY",
        "expiresIn",
        "delete",
        "id",
        "params",
        "userid",
        "remove",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\nconst mongoose = require('mongoose');\nconst bcrypt = require('bcrypt');\nconst jwt = require('jsonwebtoken');\n\nconst User = require('../../../models/user.js');\nrouter.post('/signup', (req, res, next) =>{\n    bcrypt.hash(req.body.password, 10, (err, hash)=>{\n        if(err){\n            return res.status(500).json({\n                message: err.message,\n                err\n            });\n        }\n        else{\n            const user = new User({\n                _id: new mongoose.Types.ObjectId(),\n                emailId: req.body.email,\n                password: hash\n            })\n            .save()\n            .then(rslt => {\n                res.status(201).json({\n                    message: \"User created\"\n                });\n            })\n            .catch(err => {\n                res.status(500).json({\n                    err,\n                    message: err.message\n                });  \n            });\n        } \n    });    \n}); \n\nrouter.post('/login', (req, res, next)=> {\n    User.find({emailId: req.body.email})\n    .exec()\n    .then(user => {\n        if(user.length < 1){\n            return res.status(404).json({\n                message: \"No such Entry found\"\n            });\n        }\n        bcrypt.compare(req.body.password, user[0].password, (err, rslt)=> {\n            if(err){\n                return res.status(404).json({\n                    message: 'Auth failed',\n                    err\n                })\n            }\n            if(rslt){\n                const token = jwt.sign({\n                    email: user[0].emailId,\n                    _id: user[0]._id\n                },\n                process.env.TOKEN_KEY, \n                {\n                    expiresIn: \"1h\"\n                });\n                return res.status(200).json({\n                    message: \"Auth successfull\",\n                    token\n                })\n            }\n            res.status(401).json({\n                message: \"password didn't match\"\n            })\n        });\n    })\n    .catch(err => {\n        res.status(500).json({\n            err\n        });\n    })\n});\n\nrouter.delete('/:userid', (req, res, next) => {\n    const id = req.params.userid;\n    User.remove({_id: id})\n    .exec()\n    .then((rslt) => {\n        res.status(200).json({\n            message: `User with id ${id} successfully deleted`,\n        })\n    })\n    .catch((err) => {\n        res.status(500).json({\n            err,\n            message: err.message\n        })\n    })\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1551213122424
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/models/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/models/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/models/user.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/models/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nuserschema = new Schema({\n  _id: mongoose.Schema.Types.ObjectId,\n  emailId: {\n    type: String,\n    required: true,\n    match: [/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/],\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  secretkey: {\n    type: String\n  },\n  gdriveid: {\n    type: String\n  },\n  dropboxid: {\n    type: String\n  }\n});\nmodule.exports = mongoose.model(\"users\", userschema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwidXNlcnNjaGVtYSIsIl9pZCIsIlR5cGVzIiwiT2JqZWN0SWQiLCJlbWFpbElkIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwibWF0Y2giLCJ1bmlxdWUiLCJwYXNzd29yZCIsInNlY3JldGtleSIsImdkcml2ZWlkIiwiZHJvcGJveGlkIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF4QjtBQUVBQyxVQUFVLEdBQUUsSUFBSUQsTUFBSixDQUFXO0FBQ25CRSxFQUFBQSxHQUFHLEVBQUVKLFFBQVEsQ0FBQ0UsTUFBVCxDQUFnQkcsS0FBaEIsQ0FBc0JDLFFBRFI7QUFFbkJDLEVBQUFBLE9BQU8sRUFBRTtBQUFDQyxJQUFBQSxJQUFJLEVBQUVDLE1BQVA7QUFBZUMsSUFBQUEsUUFBUSxFQUFFLElBQXpCO0FBQStCQyxJQUFBQSxLQUFLLEVBQUMsQ0FBQyx5SkFBRCxDQUFyQztBQUFrTUMsSUFBQUEsTUFBTSxFQUFFO0FBQTFNLEdBRlU7QUFHbkJDLEVBQUFBLFFBQVEsRUFBRTtBQUFDTCxJQUFBQSxJQUFJLEVBQUVDLE1BQVA7QUFBZUMsSUFBQUEsUUFBUSxFQUFFO0FBQXpCLEdBSFM7QUFJbkJJLEVBQUFBLFNBQVMsRUFBRTtBQUFDTixJQUFBQSxJQUFJLEVBQUVDO0FBQVAsR0FKUTtBQUtuQk0sRUFBQUEsUUFBUSxFQUFFO0FBQUNQLElBQUFBLElBQUksRUFBRUM7QUFBUCxHQUxTO0FBTW5CTyxFQUFBQSxTQUFTLEVBQUU7QUFBQ1IsSUFBQUEsSUFBSSxFQUFFQztBQUFQO0FBTlEsQ0FBWCxDQUFaO0FBU0FRLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmxCLFFBQVEsQ0FBQ21CLEtBQVQsQ0FBZSxPQUFmLEVBQXdCaEIsVUFBeEIsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYW5tb2xtaWRkaGEvUHJvamVjdHMvY29yZXNoYXJlL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcbmNvbnN0IFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcblxudXNlcnNjaGVtYT0gbmV3IFNjaGVtYSh7XG4gICAgX2lkOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgZW1haWxJZDoge3R5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUsIG1hdGNoOlsvXigoW148PigpXFxbXFxdXFxcXC4sOzpcXHNAXCJdKyhcXC5bXjw+KClcXFtcXF1cXFxcLiw7Olxcc0BcIl0rKSopfChcIi4rXCIpKUAoKFxcW1swLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcLlswLTldezEsM31cXF0pfCgoW2EtekEtWlxcLTAtOV0rXFwuKStbYS16QS1aXXsyLH0pKSQvXSwgdW5pcXVlOiB0cnVlfSxcbiAgICBwYXNzd29yZDoge3R5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWV9LFxuICAgIHNlY3JldGtleToge3R5cGU6IFN0cmluZ30sXG4gICAgZ2RyaXZlaWQ6IHt0eXBlOiBTdHJpbmd9LFxuICAgIGRyb3Bib3hpZDoge3R5cGU6IFN0cmluZ31cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG1vbmdvb3NlLm1vZGVsKFwidXNlcnNcIiwgdXNlcnNjaGVtYSk7XG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "userschema",
        "_id",
        "Types",
        "ObjectId",
        "emailId",
        "type",
        "String",
        "required",
        "match",
        "unique",
        "password",
        "secretkey",
        "gdriveid",
        "dropboxid",
        "module",
        "exports",
        "model"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEAC,UAAU,GAAE,IAAID,MAAJ,CAAW;AACnBE,EAAAA,GAAG,EAAEJ,QAAQ,CAACE,MAAT,CAAgBG,KAAhB,CAAsBC,QADR;AAEnBC,EAAAA,OAAO,EAAE;AAACC,IAAAA,IAAI,EAAEC,MAAP;AAAeC,IAAAA,QAAQ,EAAE,IAAzB;AAA+BC,IAAAA,KAAK,EAAC,CAAC,yJAAD,CAArC;AAAkMC,IAAAA,MAAM,EAAE;AAA1M,GAFU;AAGnBC,EAAAA,QAAQ,EAAE;AAACL,IAAAA,IAAI,EAAEC,MAAP;AAAeC,IAAAA,QAAQ,EAAE;AAAzB,GAHS;AAInBI,EAAAA,SAAS,EAAE;AAACN,IAAAA,IAAI,EAAEC;AAAP,GAJQ;AAKnBM,EAAAA,QAAQ,EAAE;AAACP,IAAAA,IAAI,EAAEC;AAAP,GALS;AAMnBO,EAAAA,SAAS,EAAE;AAACR,IAAAA,IAAI,EAAEC;AAAP;AANQ,CAAX,CAAZ;AASAQ,MAAM,CAACC,OAAP,GAAiBlB,QAAQ,CAACmB,KAAT,CAAe,OAAf,EAAwBhB,UAAxB,CAAjB",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/models",
      "sourcesContent": [
        "const mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\n\nuserschema= new Schema({\n    _id: mongoose.Schema.Types.ObjectId,\n    emailId: {type: String, required: true, match:[/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/], unique: true},\n    password: {type: String, required: true},\n    secretkey: {type: String},\n    gdriveid: {type: String},\n    dropboxid: {type: String}\n});\n\nmodule.exports = mongoose.model(\"users\", userschema);\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1550901405485
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/middleware/check-auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/check-auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/check-auth.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/middleware/check-auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
        "sourceFileName": "check-auth.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst jwt = require('jsonwebtoken');\n\nmodule.exports = (req, res, next) => {\n  try {\n    const token = req.headers.authorization.split(\" \")[1];\n    const decoded = jwt.verify(token, process.env.TOKEN_KEY);\n    req.userData = decoded;\n    next();\n  } catch (error) {\n    return res.status(401).json({\n      message: \"Invalid token Auth failed\"\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrLWF1dGguanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJqd3QiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVxIiwicmVzIiwibmV4dCIsInRva2VuIiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJzcGxpdCIsImRlY29kZWQiLCJ2ZXJpZnkiLCJwcm9jZXNzIiwiZW52IiwiVE9LRU5fS0VZIiwidXNlckRhdGEiLCJlcnJvciIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1DLEdBQUcsR0FBR0QsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7O0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUNqQyxNQUFHO0FBQ0MsVUFBTUMsS0FBSyxHQUFHSCxHQUFHLENBQUNJLE9BQUosQ0FBWUMsYUFBWixDQUEwQkMsS0FBMUIsQ0FBZ0MsR0FBaEMsRUFBcUMsQ0FBckMsQ0FBZDtBQUNBLFVBQU1DLE9BQU8sR0FBR1YsR0FBRyxDQUFDVyxNQUFKLENBQVdMLEtBQVgsRUFBa0JNLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxTQUE5QixDQUFoQjtBQUNBWCxJQUFBQSxHQUFHLENBQUNZLFFBQUosR0FBZUwsT0FBZjtBQUNBTCxJQUFBQSxJQUFJO0FBQ1AsR0FMRCxDQU1BLE9BQU1XLEtBQU4sRUFBYTtBQUNULFdBQU9aLEdBQUcsQ0FBQ2EsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ3hCQyxNQUFBQSxPQUFPLEVBQUU7QUFEZSxLQUFyQixDQUFQO0FBR0g7QUFDSixDQVpEIiwic291cmNlUm9vdCI6Ii9ob21lL2FubW9sbWlkZGhhL1Byb2plY3RzL2NvcmVzaGFyZS9zZXJ2ZXIvYXBpL21pZGRsZXdhcmUiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3Qgand0ID0gcmVxdWlyZSgnanNvbndlYnRva2VuJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgdHJ5e1xuICAgICAgICBjb25zdCB0b2tlbiA9IHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24uc3BsaXQoXCIgXCIpWzFdO1xuICAgICAgICBjb25zdCBkZWNvZGVkID0gand0LnZlcmlmeSh0b2tlbiwgcHJvY2Vzcy5lbnYuVE9LRU5fS0VZKTtcbiAgICAgICAgcmVxLnVzZXJEYXRhID0gZGVjb2RlZDtcbiAgICAgICAgbmV4dCgpO1xuICAgIH1cbiAgICBjYXRjaChlcnJvcikge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oe1xuICAgICAgICAgICAgbWVzc2FnZTogXCJJbnZhbGlkIHRva2VuIEF1dGggZmFpbGVkXCJcbiAgICAgICAgfSlcbiAgICB9XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "check-auth.js"
      ],
      "names": [
        "express",
        "require",
        "jwt",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "token",
        "headers",
        "authorization",
        "split",
        "decoded",
        "verify",
        "process",
        "env",
        "TOKEN_KEY",
        "userData",
        "error",
        "status",
        "json",
        "message"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,cAAD,CAAnB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACjC,MAAG;AACC,UAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAd;AACA,UAAMC,OAAO,GAAGV,GAAG,CAACW,MAAJ,CAAWL,KAAX,EAAkBM,OAAO,CAACC,GAAR,CAAYC,SAA9B,CAAhB;AACAX,IAAAA,GAAG,CAACY,QAAJ,GAAeL,OAAf;AACAL,IAAAA,IAAI;AACP,GALD,CAMA,OAAMW,KAAN,EAAa;AACT,WAAOZ,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAE;AADe,KAArB,CAAP;AAGH;AACJ,CAZD",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/middleware",
      "sourcesContent": [
        "const express = require('express');\nconst jwt = require('jsonwebtoken');\n\nmodule.exports = (req, res, next) => {\n    try{\n        const token = req.headers.authorization.split(\" \")[1];\n        const decoded = jwt.verify(token, process.env.TOKEN_KEY);\n        req.userData = decoded;\n        next();\n    }\n    catch(error) {\n        return res.status(401).json({\n            message: \"Invalid token Auth failed\"\n        })\n    }\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1550925720579
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/routes/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\nrouter.get('/', function (req, res) {\n  res.render('index');\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwicmVuZGVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFmO0FBRUFELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQWtCO0FBQzlCQSxFQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxPQUFYO0FBQ0gsQ0FGRDtBQUdBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJQLE1BQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FubW9sbWlkZGhhL1Byb2plY3RzL2NvcmVzaGFyZS9zZXJ2ZXIvYXBpL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5yb3V0ZXIuZ2V0KCcvJywgZnVuY3Rpb24ocmVxLCByZXMpe1xuICAgIHJlcy5yZW5kZXIoJ2luZGV4Jylcbn0pO1xubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "render",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAEAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAkB;AAC9BA,EAAAA,GAAG,CAACC,MAAJ,CAAW,OAAX;AACH,CAFD;AAGAC,MAAM,CAACC,OAAP,GAAiBP,MAAjB",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\n\nrouter.get('/', function(req, res){\n    res.render('index')\n});\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1551377788783
  },
  "{\"sourceRoot\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anmolmiddha/Projects/coreshare\",\"filename\":\"/home/anmolmiddha/Projects/coreshare/server/api/routes/dashboard.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anmolmiddha/Projects/coreshare\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anmolmiddha/Projects/coreshare",
      "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/dashboard.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anmolmiddha/Projects/coreshare",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anmolmiddha/Projects/coreshare/server/api/routes/dashboard.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/anmolmiddha/Projects/coreshare/server/api/routes/dashboard.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
        "sourceFileName": "dashboard.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nconst checkAuth = require('./../middleware/check-auth.js');\n\nrouter.get('/', checkAuth, (req, res) => {\n  console.log(req.headers);\n  res.render('index');\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsImNoZWNrQXV0aCIsImdldCIsInJlcSIsInJlcyIsImNvbnNvbGUiLCJsb2ciLCJoZWFkZXJzIiwicmVuZGVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFmOztBQUNBLE1BQU1DLFNBQVMsR0FBR0gsT0FBTyxDQUFDLCtCQUFELENBQXpCOztBQUVBQyxNQUFNLENBQUNHLEdBQVAsQ0FBVyxHQUFYLEVBQWdCRCxTQUFoQixFQUEyQixDQUFDRSxHQUFELEVBQUtDLEdBQUwsS0FBVztBQUNsQ0MsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlILEdBQUcsQ0FBQ0ksT0FBaEI7QUFDQUgsRUFBQUEsR0FBRyxDQUFDSSxNQUFKLENBQVcsT0FBWDtBQUNILENBSEQ7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCWCxNQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9hbm1vbG1pZGRoYS9Qcm9qZWN0cy9jb3Jlc2hhcmUvc2VydmVyL2FwaS9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbmNvbnN0IGNoZWNrQXV0aCA9IHJlcXVpcmUoJy4vLi4vbWlkZGxld2FyZS9jaGVjay1hdXRoLmpzJyk7XG5cbnJvdXRlci5nZXQoJy8nLCBjaGVja0F1dGgsIChyZXEscmVzKT0+e1xuICAgIGNvbnNvbGUubG9nKHJlcS5oZWFkZXJzKTtcbiAgICByZXMucmVuZGVyKCdpbmRleCcpO1xufSlcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "dashboard.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "checkAuth",
        "get",
        "req",
        "res",
        "console",
        "log",
        "headers",
        "render",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,MAAMC,SAAS,GAAGH,OAAO,CAAC,+BAAD,CAAzB;;AAEAC,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgBD,SAAhB,EAA2B,CAACE,GAAD,EAAKC,GAAL,KAAW;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,OAAhB;AACAH,EAAAA,GAAG,CAACI,MAAJ,CAAW,OAAX;AACH,CAHD;AAIAC,MAAM,CAACC,OAAP,GAAiBX,MAAjB",
      "sourceRoot": "/home/anmolmiddha/Projects/coreshare/server/api/routes",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\nconst checkAuth = require('./../middleware/check-auth.js');\n\nrouter.get('/', checkAuth, (req,res)=>{\n    console.log(req.headers);\n    res.render('index');\n})\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1551450807341
  }
}